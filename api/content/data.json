{"docId":1, "title":"Accelerating SQL database operations on a GPU with CUDA", "author":"Peter Bakkum, Kevin Skadron",
"pages":[
	{"pageNum":1, "pageWidth":816, "pageHeight":1056,
	"blocks":[
		{"l":181, "t":88, "r":611, "b":114,
		"q":[181, 139, 326, 48, 380, 103, 489, 122],
		"s":["Accelerating", "SQL", "Database", "Operations"],
		"ss":"Accelerating SQL Database Operations"},
		{"l":282, "t":114, "r":511, "b":140,
		"q":[282, 28, 316, 13, 336, 50, 392, 46, 445, 66],
		"s":["on", "a", "GPU", "with", "CUDA"],
		"ss":"on a GPU with CUDA"},
		{"l":282, "t":177, "r":511, "b":192,
		"q":[282, 36, 322, 56, 382, 26, 412, 37, 454, 57],
		"s":["Peter", "Bakkum", "and", "Kevin", "Skadron"],
		"ss":"Peter Bakkum and Kevin Skadron"},
		{"l":301, "t":192, "r":492, "b":205,
		"q":[301, 68, 372, 11, 386, 56, 446, 46],
		"s":["Department", "of", "Computer", "Science"],
		"ss":"Department of Computer Science"},
		{"l":263, "t":206, "r":530, "b":218,
		"q":[263, 56, 322, 11, 337, 46, 387, 84, 474, 16, 494, 36],
		"s":["University", "of", "Virginia,", "Charlottesville,", "VA", "22904"],
		"ss":"University of Virginia, Charlottesville, VA 22904"},
		{"l":291, "t":219, "r":501, "b":234,
		"q":[291, 51, 347, 154],
		"s":["{pbb7c,", "skadron}@virginia.edu"],
		"ss":"{pbb7c, skadron}@virginia.edu"},
		{"l":73, "t":268, "r":156, "b":282,
		"q":[73, 83],
		"s":["ABSTRACT"],
		"ss":"ABSTRACT"},
		{"l":412, "t":271, "r":720, "b":281,
		"q":[412, 13, 428, 16, 449, 26, 480, 16, 501, 29, 535, 10, 549, 26, 579, 54, 637, 23, 665, 30, 699, 21],
		"s":["on", "the", "GPU", "[2].", "Many", "of", "these", "operations", "have", "direct", "par-"],
		"ss":"on the GPU [2]. Many of these operations have direct par-"},
		{"l":73, "t":289, "r":381, "b":300,
		"q":[73, 27, 102, 25, 130, 17, 150, 32, 185, 46, 233, 61, 297, 14, 314, 37, 354, 27],
		"s":["Prior", "work", "has", "shown", "dramatic", "acceleration", "for", "various", "data-"],
		"ss":"Prior work has shown dramatic acceleration for various data-"},
		{"l":412, "t":284, "r":611, "b":294,
		"q":[412, 26, 441, 11, 456, 32, 492, 46, 542, 36, 582, 13, 598, 13],
		"s":["allels", "to", "classic", "database", "queries", "[4,", "9]."],
		"ss":"allels to classic database queries [4, 9]."},
		{"l":73, "t":303, "r":381, "b":313,
		"q":[73, 22, 98, 54, 155, 13, 171, 34, 209, 18, 230, 22, 255, 27, 285, 51, 340, 22, 365, 16],
		"s":["base", "operations", "on", "GPUs,", "but", "only", "using", "primitives", "that", "are"],
		"ss":"base operations on GPUs, but only using primitives that are"},
		{"l":423, "t":298, "r":720, "b":308,
		"q":[423, 20, 447, 34, 485, 43, 531, 62, 596, 32, 631, 8, 642, 40, 685, 14, 703, 17],
		"s":["The", "GPU’s", "complex", "architecture", "makes", "it", "diﬃcult", "for", "un-"],
		"ss":"The GPU’s complex architecture makes it diﬃcult for un-"},
		{"l":73, "t":316, "r":381, "b":327,
		"q":[73, 17, 95, 22, 121, 10, 136, 65, 205, 46, 256, 50, 311, 23, 339, 11, 354, 27],
		"s":["not", "part", "of", "conventional", "database", "languages", "such", "as", "SQL."],
		"ss":"not part of conventional database languages such as SQL."},
		{"l":412, "t":311, "r":720, "b":321,
		"q":[412, 40, 456, 68, 528, 11, 542, 23, 569, 39, 613, 9, 626, 55, 685, 35],
		"s":["familiar", "programmers", "to", "fully", "exploit.", "A", "productive", "CUDA"],
		"ss":"familiar programmers to fully exploit. A productive CUDA"},
		{"l":73, "t":330, "r":381, "b":340,
		"q":[73, 23, 101, 29, 137, 59, 201, 6, 213, 32, 251, 10, 266, 16, 289, 36, 331, 50],
		"s":["This", "paper", "implements", "a", "subset", "of", "the", "SQLite", "command"],
		"ss":"This paper implements a subset of the SQLite command"},
		{"l":412, "t":324, "r":720, "b":335,
		"q":[412, 63, 481, 25, 513, 23, 542, 13, 561, 74, 641, 10, 657, 14, 677, 43],
		"s":["programmer", "must", "have", "an", "understanding", "of", "six", "diﬀerent"],
		"ss":"programmer must have an understanding of six diﬀerent"},
		{"l":73, "t":343, "r":381, "b":354,
		"q":[73, 48, 126, 39, 170, 13, 188, 16, 209, 30, 244, 23, 272, 65, 343, 38],
		"s":["processor", "directly", "on", "the", "GPU.", "This", "dramatically", "reduces"],
		"ss":"processor directly on the GPU. This dramatically reduces"},
		{"l":412, "t":338, "r":720, "b":348,
		"q":[412, 42, 457, 36, 497, 6, 506, 31, 541, 10, 554, 21, 579, 35, 618, 38, 660, 19, 682, 38],
		"s":["memory", "spaces,", "a", "model", "of", "how", "CUDA", "threads", "and", "thread-"],
		"ss":"memory spaces, a model of how CUDA threads and thread-"},
		{"l":73, "t":357, "r":381, "b":367,
		"q":[73, 16, 93, 27, 124, 43, 171, 11, 185, 37, 226, 26, 256, 61, 321, 13, 338, 43],
		"s":["the", "eﬀort", "required", "to", "achieve", "GPU", "acceleration", "by", "avoiding"],
		"ss":"the eﬀort required to achieve GPU acceleration by avoiding"},
		{"l":412, "t":351, "r":720, "b":362,
		"q":[412, 32, 448, 16, 468, 41, 514, 11, 529, 26, 560, 51, 615, 13, 632, 74, 710, 10],
		"s":["blocks", "are", "mapped", "to", "GPU", "hardware,", "an", "understanding", "of"],
		"ss":"blocks are mapped to GPU hardware, an understanding of"},
		{"l":73, "t":370, "r":381, "b":380,
		"q":[73, 16, 92, 24, 119, 14, 136, 46, 184, 68, 255, 11, 269, 17, 288, 20, 312, 69],
		"s":["the", "need", "for", "database", "programmers", "to", "use", "new", "programming"],
		"ss":"the need for database programmers to use new programming"},
		{"l":412, "t":365, "r":720, "b":375,
		"q":[412, 35, 450, 58, 511, 82, 597, 18, 620, 35, 659, 17, 679, 41],
		"s":["CUDA", "interthread", "communication,", "etc.", "CUDA", "has", "brought"],
		"ss":"CUDA interthread communication, etc. CUDA has brought"},
		{"l":73, "t":384, "r":381, "b":394,
		"q":[73, 50, 128, 23, 155, 11, 171, 35, 211, 11, 226, 36, 267, 24, 296, 48, 349, 11, 364, 17],
		"s":["languages", "such", "as", "CUDA", "or", "modify", "their", "programs", "to", "use"],
		"ss":"languages such as CUDA or modify their programs to use"},
		{"l":412, "t":378, "r":720, "b":389,
		"q":[412, 26, 443, 65, 513, 29, 547, 11, 562, 16, 584, 61, 650, 18, 672, 48],
		"s":["GPU", "development", "closer", "to", "the", "mainstream", "but", "program-"],
		"ss":"GPU development closer to the mainstream but program-"},
		{"l":73, "t":397, "r":168, "b":407,
		"q":[73, 46, 123, 45],
		"s":["non-SQL", "libraries."],
		"ss":"non-SQL libraries."},
		{"l":412, "t":392, "r":720, "b":402,
		"q":[412, 24, 440, 25, 469, 19, 492, 26, 522, 6, 531, 45, 579, 35, 618, 31, 653, 14, 670, 23, 697, 23],
		"s":["mers", "must", "still", "write", "a", "low-level", "CUDA", "kernel", "for", "each", "data"],
		"ss":"mers must still write a low-level CUDA kernel for each data"},
		{"l":84, "t":411, "r":381, "b":421,
		"q":[84, 23, 112, 29, 146, 36, 187, 13, 204, 61, 269, 47, 321, 36, 362, 19],
		"s":["This", "paper", "focuses", "on", "accelerating", "SELECT", "queries", "and"],
		"ss":"This paper focuses on accelerating SELECT queries and"},
		{"l":412, "t":405, "r":720, "b":416,
		"q":[412, 53, 471, 49, 527, 23, 556, 41, 603, 13, 622, 16, 645, 30, 680, 6, 693, 27],
		"s":["processing", "operation", "they", "perform", "on", "the", "GPU,", "a", "time-"],
		"ss":"processing operation they perform on the GPU, a time-"},
		{"l":73, "t":424, "r":381, "b":434,
		"q":[73, 47, 123, 16, 144, 73, 222, 10, 236, 13, 252, 40, 296, 26, 327, 54],
		"s":["describes", "the", "considerations", "in", "an", "eﬃcient", "GPU", "implemen-"],
		"ss":"describes the considerations in an eﬃcient GPU implemen-"},
		{"l":412, "t":419, "r":653, "b":429,
		"q":[412, 45, 461, 21, 486, 22, 512, 52, 568, 52, 624, 28],
		"s":["intensive", "task", "that", "frequently", "duplicates", "work."],
		"ss":"intensive task that frequently duplicates work."},
		{"l":73, "t":438, "r":381, "b":448,
		"q":[73, 31, 109, 10, 125, 16, 147, 36, 189, 50, 245, 51, 306, 38, 350, 13, 368, 13],
		"s":["tation", "of", "the", "SQLite", "command", "processor.", "Results", "on", "an"],
		"ss":"tation of the SQLite command processor. Results on an"},
		{"l":423, "t":432, "r":720, "b":443,
		"q":[423, 23, 450, 8, 462, 13, 478, 93, 575, 36, 615, 56, 674, 45],
		"s":["SQL", "is", "an", "industry-standard", "generic", "declarative", "language"],
		"ss":"SQL is an industry-standard generic declarative language"},
		{"l":73, "t":451, "r":381, "b":461,
		"q":[73, 44, 122, 27, 153, 32, 190, 37, 232, 47, 284, 10, 298, 37, 340, 41],
		"s":["NVIDIA", "Tesla", "C1060", "achieve", "speedups", "of", "20-70X", "depend-"],
		"ss":"NVIDIA Tesla C1060 achieve speedups of 20-70X depend-"},
		{"l":412, "t":446, "r":720, "b":456,
		"q":[412, 23, 440, 11, 455, 58, 518, 19, 542, 29, 576, 54, 638, 42, 685, 10, 699, 21],
		"s":["used", "to", "manipulate", "and", "query", "databases.", "Capable", "of", "per-"],
		"ss":"used to manipulate and query databases. Capable of per-"},
		{"l":73, "t":465, "r":237, "b":475,
		"q":[73, 16, 92, 13, 109, 16, 129, 19, 152, 10, 165, 16, 186, 29, 219, 18],
		"s":["ing", "on", "the", "size", "of", "the", "result", "set."],
		"ss":"ing on the size of the result set."},
		{"l":412, "t":459, "r":720, "b":470,
		"q":[412, 40, 457, 22, 484, 43, 531, 24, 561, 19, 585, 65, 655, 10, 669, 23, 697, 23],
		"s":["forming", "very", "complex", "joins", "and", "aggregations", "of", "data", "sets,"],
		"ss":"forming very complex joins and aggregations of data sets,"},
		{"l":412, "t":473, "r":720, "b":483,
		"q":[412, 23, 438, 8, 450, 23, 476, 11, 490, 16, 510, 32, 546, 42, 591, 55, 649, 48, 701, 19],
		"s":["SQL", "is", "used", "as", "the", "bridge", "between", "procedural", "programs", "and"],
		"ss":"SQL is used as the bridge between procedural programs and"},
		{"l":412, "t":486, "r":720, "b":497,
		"q":[412, 54, 470, 30, 505, 10, 520, 26, 555, 16, 575, 61, 641, 10, 656, 23, 684, 36],
		"s":["structured", "tables", "of", "data.", "An", "acceleration", "of", "SQL", "queries"],
		"ss":"structured tables of data. An acceleration of SQL queries"},
		{"l":73, "t":493, "r":305, "b":507,
		"q":[73, 70, 147, 25, 175, 50, 229, 76],
		"s":["Categories", "and", "Subject", "Descriptors"],
		"ss":"Categories and Subject Descriptors"},
		{"l":412, "t":500, "r":720, "b":510,
		"q":[412, 31, 448, 33, 487, 68, 561, 11, 577, 41, 624, 16, 646, 29, 680, 10, 695, 24],
		"s":["would", "enable", "programmers", "to", "increase", "the", "speed", "of", "their"],
		"ss":"would enable programmers to increase the speed of their"},
		{"l":73, "t":514, "r":106, "b":525,
		"q":[73, 28, 103, 3],
		"s":["D.1.3", "["],
		"ss":"D.1.3 ["},
		{"l":106, "t":514, "r":259, "b":524,
		"q":[106, 68, 177, 82],
		"s":["Concurrent", "Programming"],
		"ss":"Concurrent Programming"},
		{"l":259, "t":514, "r":387, "b":525,
		"q":[259, 7, 270, 39, 313, 74],
		"s":["]:", "Parallel", "Programming;"],
		"ss":"]: Parallel Programming;"},
		{"l":412, "t":513, "r":720, "b":524,
		"q":[412, 23, 439, 53, 496, 54, 554, 23, 581, 24, 610, 11, 625, 13, 641, 35, 681, 11, 695, 24],
		"s":["data", "processing", "operations", "with", "little", "or", "no", "change", "to", "their"],
		"ss":"data processing operations with little or no change to their"},
		{"l":73, "t":528, "r":107, "b":538,
		"q":[73, 27, 104, 3],
		"s":["H.2.4", "["],
		"ss":"H.2.4 ["},
		{"l":107, "t":528, "r":244, "b":538,
		"q":[107, 55, 167, 77],
		"s":["Database", "Management"],
		"ss":"Database Management"},
		{"l":244, "t":528, "r":352, "b":538,
		"q":[244, 7, 256, 39, 299, 53],
		"s":["]:", "Parallel", "Databases"],
		"ss":"]: Parallel Databases"},
		{"l":412, "t":527, "r":720, "b":537,
		"q":[412, 32, 448, 27, 479, 39, 522, 16, 542, 41, 586, 14, 604, 26, 634, 44, 681, 39],
		"s":["source", "code.", "Despite", "the", "demand", "for", "GPU", "program", "acceler-"],
		"ss":"source code. Despite the demand for GPU program acceler-"},
		{"l":412, "t":540, "r":720, "b":551,
		"q":[412, 30, 445, 13, 460, 81, 544, 10, 557, 23, 583, 8, 594, 39, 636, 10, 649, 71],
		"s":["ation,", "no", "implementation", "of", "SQL", "is", "capable", "of", "automatically"],
		"ss":"ation, no implementation of SQL is capable of automatically"},
		{"l":73, "t":556, "r":139, "b":570,
		"q":[73, 66],
		"s":["Keywords"],
		"ss":"Keywords"},
		{"l":412, "t":554, "r":720, "b":564,
		"q":[412, 47, 461, 6, 470, 30, 503, 23, 529, 36, 568, 23, 594, 36, 633, 23, 659, 24, 686, 34],
		"s":["accessing", "a", "GPU,", "even", "though", "SQL", "queries", "have", "been", "closely"],
		"ss":"accessing a GPU, even though SQL queries have been closely"},
		{"l":412, "t":567, "r":720, "b":578,
		"q":[412, 47, 464, 13, 482, 16, 504, 26, 535, 11, 551, 28, 585, 16, 607, 38, 650, 70],
		"s":["emulated", "on", "the", "GPU", "to", "prove", "the", "parallel", "architecture’s"],
		"ss":"emulated on the GPU to prove the parallel architecture’s"},
		{"l":73, "t":577, "r":249, "b":588,
		"q":[73, 47, 124, 38, 166, 56, 226, 23],
		"s":["GPGPU,", "CUDA,", "Databases,", "SQL"],
		"ss":"GPGPU, CUDA, Databases, SQL"},
		{"l":412, "t":581, "r":662, "b":591,
		"q":[412, 63, 478, 11, 493, 23, 519, 49, 573, 43, 619, 13, 636, 9, 649, 13],
		"s":["adaptability", "to", "such", "execution", "patterns", "[5,", "6,", "9]."],
		"ss":"adaptability to such execution patterns [5, 6, 9]."},
		{"l":423, "t":594, "r":720, "b":605,
		"q":[423, 30, 456, 24, 483, 55, 541, 11, 555, 37, 595, 26, 624, 55, 682, 22, 706, 14],
		"s":["There", "exist", "limitations", "to", "current", "GPU", "technology", "that", "af-"],
		"ss":"There exist limitations to current GPU technology that af-"},
		{"l":73, "t":606, "r":222, "b":619,
		"q":[73, 12, 100, 123],
		"s":["1.", "INTRODUCTION"],
		"ss":"1. INTRODUCTION"},
		{"l":412, "t":608, "r":720, "b":618,
		"q":[412, 19, 434, 16, 453, 46, 503, 26, 532, 10, 545, 23, 571, 6, 580, 26, 609, 23, 636, 84],
		"s":["fect", "the", "potential", "users", "of", "such", "a", "GPU", "SQL", "implementation."],
		"ss":"fect the potential users of such a GPU SQL implementation."},
		{"l":84, "t":625, "r":381, "b":635,
		"q":[84, 34, 123, 34, 161, 59, 225, 11, 240, 27, 272, 30, 307, 16, 327, 16, 348, 32],
		"s":["GPUs,", "known", "colloquially", "as", "video", "cards,", "are", "the", "means"],
		"ss":"GPUs, known colloquially as video cards, are the means"},
		{"l":412, "t":621, "r":720, "b":632,
		"q":[412, 20, 438, 18, 461, 25, 492, 41, 538, 46, 590, 55, 650, 16, 672, 16, 694, 26],
		"s":["The", "two", "most", "relevant", "technical", "limitations", "are", "the", "GPU"],
		"ss":"The two most relevant technical limitations are the GPU"},
		{"l":73, "t":638, "r":384, "b":649,
		"q":[73, 13, 88, 30, 120, 53, 177, 33, 212, 47, 262, 60, 325, 13, 340, 6, 349, 35],
		"s":["by", "which", "computers", "render", "graphical", "information", "on", "a", "screen."],
		"ss":"by which computers render graphical information on a screen."},
		{"l":412, "t":635, "r":720, "b":645,
		"q":[412, 42, 458, 19, 481, 19, 504, 16, 525, 22, 552, 11, 567, 26, 597, 32, 634, 42, 680, 40],
		"s":["memory", "size", "and", "the", "host", "to", "GPU", "device", "memory", "transfer"],
		"ss":"memory size and the host to GPU device memory transfer"},
		{"l":73, "t":652, "r":381, "b":662,
		"q":[73, 20, 98, 39, 141, 34, 180, 38, 223, 62, 289, 25, 319, 8, 332, 22, 358, 22],
		"s":["The", "modern", "GPU’s", "parallel", "architecture", "gives", "it", "very", "high"],
		"ss":"The modern GPU’s parallel architecture gives it very high"},
		{"l":412, "t":648, "r":720, "b":659,
		"q":[412, 26, 448, 40, 493, 31, 530, 43, 579, 27, 611, 18, 635, 34, 675, 45],
		"s":["time.", "Though", "future", "graphics", "cards", "will", "almost", "certainly"],
		"ss":"time. Though future graphics cards will almost certainly"},
		{"l":73, "t":665, "r":381, "b":676,
		"q":[73, 59, 134, 13, 149, 36, 188, 50, 241, 19, 262, 13, 278, 22, 303, 46, 352, 17, 371, 10],
		"s":["throughput", "on", "certain", "problems,", "and", "its", "near", "universal", "use", "in"],
		"ss":"throughput on certain problems, and its near universal use in"},
		{"l":412, "t":662, "r":720, "b":672,
		"q":[412, 23, 440, 36, 481, 44, 530, 37, 571, 44, 620, 27, 652, 23, 680, 6, 691, 29],
		"s":["have", "greater", "memory,", "current", "NVIDIA", "cards", "have", "a", "maxi-"],
		"ss":"have greater memory, current NVIDIA cards have a maxi-"},
		{"l":73, "t":679, "r":381, "b":689,
		"q":[73, 40, 117, 53, 174, 32, 210, 22, 236, 8, 248, 8, 260, 6, 270, 29, 303, 19, 326, 54],
		"s":["desktop", "computers", "means", "that", "it", "is", "a", "cheap", "and", "ubiquitous"],
		"ss":"desktop computers means that it is a cheap and ubiquitous"},
		{"l":412, "t":675, "r":720, "b":686,
		"q":[412, 26, 441, 10, 453, 6, 462, 51, 517, 6, 526, 40, 569, 10, 581, 16, 601, 19, 622, 10, 635, 28, 666, 54],
		"s":["mum", "of", "4", "gigabytes,", "a", "fraction", "of", "the", "size", "of", "many", "databases."],
		"ss":"mum of 4 gigabytes, a fraction of the size of many databases."},
		{"l":73, "t":692, "r":381, "b":703,
		"q":[73, 32, 110, 10, 124, 53, 182, 34, 224, 30, 259, 8, 271, 6, 282, 41, 327, 39, 371, 10],
		"s":["source", "of", "processing", "power.", "There", "is", "a", "growing", "interest", "in"],
		"ss":"source of processing power. There is a growing interest in"},
		{"l":412, "t":689, "r":720, "b":699,
		"q":[412, 63, 478, 42, 523, 32, 558, 42, 603, 16, 623, 26, 652, 19, 674, 16, 694, 26],
		"s":["Transferring", "memory", "blocks", "between", "the", "CPU", "and", "the", "GPU"],
		"ss":"Transferring memory blocks between the CPU and the GPU"},
		{"l":73, "t":706, "r":381, "b":716,
		"q":[73, 44, 120, 19, 143, 31, 177, 11, 191, 26, 220, 37, 260, 71, 334, 47],
		"s":["applying", "this", "power", "to", "more", "general", "non-graphical", "problems"],
		"ss":"applying this power to more general non-graphical problems"},
		{"l":412, "t":702, "r":720, "b":713,
		"q":[412, 40, 455, 32, 492, 72, 568, 37, 608, 23, 634, 24, 660, 11, 674, 17, 694, 26],
		"s":["remains", "costly.", "Consequently,", "staging", "data", "rows", "to", "the", "GPU"],
		"ss":"remains costly. Consequently, staging data rows to the GPU"},
		{"l":73, "t":719, "r":381, "b":730,
		"q":[73, 41, 118, 59, 181, 23, 209, 11, 224, 52, 280, 38, 323, 13, 340, 41],
		"s":["through", "frameworks", "such", "as", "NVIDIA’s", "CUDA,", "an", "applica-"],
		"ss":"through frameworks such as NVIDIA’s CUDA, an applica-"},
		{"l":412, "t":716, "r":720, "b":726,
		"q":[412, 19, 436, 37, 477, 29, 511, 24, 540, 24, 568, 41, 613, 52, 671, 49],
		"s":["and", "staging", "result", "rows", "back", "requires", "signiﬁcant", "overhead."],
		"ss":"and staging result rows back requires signiﬁcant overhead."},
		{"l":73, "t":733, "r":381, "b":743,
		"q":[73, 20, 97, 69, 170, 44, 219, 51, 274, 11, 288, 20, 313, 68],
		"s":["tion", "programming", "interface", "developed", "to", "give", "programmers"],
		"ss":"tion programming interface developed to give programmers"},
		{"l":412, "t":729, "r":720, "b":740,
		"q":[412, 39, 454, 26, 484, 60, 547, 16, 567, 32, 602, 29, 634, 49, 687, 18, 708, 12],
		"s":["Despite", "these", "constraints,", "the", "actual", "query", "execution", "can", "be"],
		"ss":"Despite these constraints, the actual query execution can be"},
		{"l":73, "t":746, "r":381, "b":757,
		"q":[73, 6, 82, 33, 119, 19, 142, 46, 191, 20, 215, 11, 230, 39, 272, 37, 313, 41, 357, 24],
		"s":["a", "simple", "and", "standard", "way", "to", "execute", "general", "purpose", "logic"],
		"ss":"a simple and standard way to execute general purpose logic"},
		{"l":412, "t":743, "r":720, "b":753,
		"q":[412, 18, 435, 65, 504, 21, 531, 16, 553, 34, 592, 32, 629, 38, 672, 47],
		"s":["run", "concurrently", "over", "the", "GPU’s", "highly", "parallel", "organiza-"],
		"ss":"run concurrently over the GPU’s highly parallel organiza-"},
		{"l":73, "t":760, "r":381, "b":770,
		"q":[73, 13, 89, 44, 136, 34, 176, 70, 249, 26, 278, 17, 298, 35, 336, 19, 359, 22],
		"s":["on", "NVIDIA", "GPUs.", "Programmers", "often", "use", "CUDA", "and", "sim-"],
		"ss":"on NVIDIA GPUs. Programmers often use CUDA and sim-"},
		{"l":412, "t":756, "r":658, "b":767,
		"q":[412, 24, 439, 22, 465, 74, 543, 26, 573, 29, 606, 52],
		"s":["tion,", "thus", "outperforming", "CPU", "query", "execution."],
		"ss":"tion, thus outperforming CPU query execution."},
		{"l":73, "t":773, "r":381, "b":784,
		"q":[73, 17, 95, 49, 148, 11, 163, 51, 219, 84, 308, 45, 358, 23],
		"s":["ilar", "interfaces", "to", "accelerate", "computationally", "intensive", "data"],
		"ss":"ilar interfaces to accelerate computationally intensive data"},
		{"l":423, "t":770, "r":720, "b":780,
		"q":[423, 30, 458, 16, 479, 6, 490, 39, 534, 10, 548, 62, 615, 22, 641, 11, 657, 20, 682, 16, 703, 16],
		"s":["There", "are", "a", "number", "of", "applications", "that", "ﬁt", "into", "the", "do-"],
		"ss":"There are a number of applications that ﬁt into the do-"},
		{"l":73, "t":787, "r":381, "b":797,
		"q":[73, 53, 128, 57, 189, 26, 217, 49, 269, 26, 298, 21, 322, 28, 352, 29],
		"s":["processing", "operations,", "often", "executing", "them", "ﬁfty", "times", "faster"],
		"ss":"processing operations, often executing them ﬁfty times faster"},
		{"l":412, "t":783, "r":720, "b":793,
		"q":[412, 26, 440, 10, 453, 19, 475, 40, 518, 36, 558, 16, 577, 55, 635, 49, 687, 33],
		"s":["main", "of", "this", "project,", "despite", "the", "limitations", "described", "above."],
		"ss":"main of this project, despite the limitations described above."},
		{"l":412, "t":797, "r":720, "b":807,
		"q":[412, 29, 447, 54, 506, 23, 535, 11, 551, 27, 584, 23, 613, 14, 633, 45, 684, 36],
		"s":["Many", "databases,", "such", "as", "those", "used", "for", "research,", "modify"],
		"ss":"Many databases, such as those used for research, modify"},
		{"l":412, "t":810, "r":720, "b":820,
		"q":[412, 23, 438, 62, 504, 19, 526, 54, 584, 24, 611, 42, 656, 26, 686, 34],
		"s":["data", "infrequently", "and", "experience", "their", "heaviest", "loads", "during"],
		"ss":"data infrequently and experience their heaviest loads during"},
		{"l":412, "t":824, "r":720, "b":834,
		"q":[412, 22, 439, 39, 487, 43, 534, 15, 554, 10, 568, 62, 635, 21, 661, 28, 694, 26],
		"s":["read", "queries.", "Another", "set", "of", "applications", "care", "much", "more"],
		"ss":"read queries. Another set of applications care much more"},
		{"l":73, "t":839, "r":381, "b":848,
		"q":[73, 46, 122, 8, 134, 22, 160, 26, 190, 9, 202, 18, 224, 26, 254, 9, 267, 10, 281, 9, 293, 16, 313, 9, 325, 15, 344, 21, 369, 12],
		"s":["Permission", "to", "make", "digital", "or", "hard", "copies", "of", "all", "or", "part", "of", "this", "work", "for"],
		"ss":"Permission to make digital or hard copies of all or part of this work for"},
		{"l":412, "t":837, "r":720, "b":847,
		"q":[412, 30, 447, 16, 468, 37, 511, 10, 525, 6, 536, 51, 592, 29, 626, 24, 655, 27, 687, 33],
		"s":["about", "the", "latency", "of", "a", "particular", "query", "than", "strict", "adher-"],
		"ss":"about the latency of a particular query than strict adher-"},
		{"l":73, "t":851, "r":381, "b":860,
		"q":[73, 35, 111, 9, 123, 42, 168, 14, 185, 7, 195, 31, 229, 31, 264, 13, 280, 36, 320, 15, 339, 26, 368, 13],
		"s":["personal", "or", "classroom", "use", "is", "granted", "without", "fee", "provided", "that", "copies", "are"],
		"ss":"personal or classroom use is granted without fee provided that copies are"},
		{"l":412, "t":851, "r":720, "b":861,
		"q":[412, 22, 437, 11, 450, 53, 506, 16, 526, 28, 557, 26, 587, 13, 602, 43, 647, 28, 678, 42],
		"s":["ence", "to", "presenting", "the", "latest", "data,", "an", "example", "being", "Internet"],
		"ss":"ence to presenting the latest data, an example being Internet"},
		{"l":73, "t":862, "r":381, "b":872,
		"q":[73, 13, 89, 22, 114, 9, 125, 44, 172, 12, 187, 22, 212, 9, 223, 49, 274, 41, 319, 15, 336, 15, 355, 26],
		"s":["not", "made", "or", "distributed", "for", "proﬁt", "or", "commercial", "advantage", "and", "that", "copies"],
		"ss":"not made or distributed for proﬁt or commercial advantage and that copies"},
		{"l":412, "t":864, "r":720, "b":874,
		"q":[412, 32, 448, 41, 495, 29, 528, 36, 569, 21, 594, 6, 604, 48, 656, 38, 698, 22],
		"s":["search", "engines.", "Many", "queries", "over", "a", "large-size", "dataset", "only"],
		"ss":"search engines. Many queries over a large-size dataset only"},
		{"l":73, "t":874, "r":381, "b":883,
		"q":[73, 18, 93, 15, 110, 25, 138, 15, 155, 13, 170, 14, 187, 31, 221, 10, 233, 13, 249, 16, 267, 22, 292, 11, 305, 20, 328, 43, 373, 8],
		"s":["bear", "this", "notice", "and", "the", "full", "citation", "on", "the", "ﬁrst", "page.", "To", "copy", "otherwise,", "to"],
		"ss":"bear this notice and the full citation on the ﬁrst page. To copy otherwise, to"},
		{"l":412, "t":878, "r":720, "b":888,
		"q":[412, 38, 454, 6, 463, 32, 499, 10, 513, 16, 533, 24, 561, 26, 591, 22, 617, 40, 660, 37, 701, 19],
		"s":["address", "a", "subset", "of", "the", "total", "data,", "thus", "inviting", "staging", "this"],
		"ss":"address a subset of the total data, thus inviting staging this"},
		{"l":73, "t":885, "r":381, "b":895,
		"q":[73, 41, 116, 8, 126, 17, 146, 10, 158, 29, 190, 9, 201, 8, 211, 47, 260, 8, 270, 19, 292, 33, 327, 20, 349, 31],
		"s":["republish,", "to", "post", "on", "servers", "or", "to", "redistribute", "to", "lists,", "requires", "prior", "speciﬁc"],
		"ss":"republish, to post on servers or to redistribute to lists, requires prior speciﬁc"},
		{"l":412, "t":891, "r":720, "b":901,
		"q":[412, 32, 449, 20, 474, 26, 506, 44, 558, 67, 631, 36, 672, 16, 694, 26],
		"s":["subset", "into", "GPU", "memory.", "Additionally,", "though", "the", "ﬁnite"],
		"ss":"subset into GPU memory. Additionally, though the ﬁnite"},
		{"l":73, "t":897, "r":171, "b":906,
		"q":[73, 45, 120, 26, 149, 5, 156, 15],
		"s":["permission", "and/or", "a", "fee."],
		"ss":"permission and/or a fee."},
		{"l":73, "t":909, "r":116, "b":919,
		"q":[73, 43],
		"s":["GPGPU-3"],
		"ss":"GPGPU-3"},
		{"l":119, "t":908, "r":269, "b":918,
		"q":[119, 27, 148, 13, 163, 23, 189, 39, 231, 15, 248, 21],
		"s":["March", "14,", "2010,", "Pittsburg,", "PA,", "USA"],
		"ss":"March 14, 2010, Pittsburg, PA, USA"},
		{"l":412, "t":904, "r":720, "b":915,
		"q":[412, 42, 458, 19, 480, 10, 494, 16, 514, 26, 545, 8, 557, 6, 567, 52, 623, 54, 681, 39],
		"s":["memory", "size", "of", "the", "GPU", "is", "a", "signiﬁcant", "limitation,", "allocat-"],
		"ss":"memory size of the GPU is a signiﬁcant limitation, allocat-"},
		{"l":73, "t":920, "r":313, "b":929,
		"q":[73, 42, 117, 21, 140, 23, 165, 107, 275, 39],
		"s":["Copyright", "2010", "ACM", "978-1-60558-935-0/10/03", "...$10.00."],
		"ss":"Copyright 2010 ACM 978-1-60558-935-0/10/03 ...$10.00."},
		{"l":402, "t":1010, "r":414, "b":1020,
		"q":[402, 12],
		"s":["94"],
		"ss":"94"}
	]},
	{"pageNum":2, "pageWidth":816, "pageHeight":1056,
	"blocks":[
		{"l":73, "t":74, "r":381, "b":84,
		"q":[73, 16, 93, 20, 117, 19, 141, 10, 155, 16, 175, 6, 186, 48, 238, 10, 252, 6, 263, 27, 294, 32, 330, 11, 345, 25, 375, 6],
		"s":["ing", "just", "half", "of", "the", "4", "gigabytes", "of", "a", "Tesla", "C1060", "to", "store", "a"],
		"ss":"ing just half of the 4 gigabytes of a Tesla C1060 to store a"},
		{"l":412, "t":74, "r":720, "b":85,
		"q":[412, 66, 482, 18, 505, 12, 523, 47, 575, 11, 591, 51, 646, 36, 687, 33],
		"s":["functionality", "can", "be", "exploited", "to", "accelerate", "certain", "opera-"],
		"ss":"functionality can be exploited to accelerate certain opera-"},
		{"l":73, "t":88, "r":381, "b":98,
		"q":[73, 23, 100, 15, 119, 25, 149, 16, 170, 21, 195, 27, 226, 14, 245, 21, 271, 18, 293, 36, 333, 24, 361, 10, 375, 6],
		"s":["data", "set", "gives", "the", "user", "room", "for", "over", "134", "million", "rows", "of", "4"],
		"ss":"data set gives the user room for over 134 million rows of 4"},
		{"l":412, "t":88, "r":720, "b":98,
		"q":[412, 28, 448, 20, 473, 37, 515, 10, 529, 19, 553, 47, 605, 8, 618, 22, 644, 35, 684, 36],
		"s":["tions.", "The", "novelty", "of", "this", "approach", "is", "that", "CUDA", "kernels"],
		"ss":"tions. The novelty of this approach is that CUDA kernels"},
		{"l":73, "t":101, "r":116, "b":111,
		"q":[73, 43],
		"s":["integers."],
		"ss":"integers."},
		{"l":412, "t":101, "r":720, "b":112,
		"q":[412, 16, 431, 43, 477, 41, 521, 6, 530, 46, 578, 32, 613, 24, 640, 47, 690, 30],
		"s":["are", "accessed", "through", "a", "database", "rather", "than", "explicitly", "called"],
		"ss":"are accessed through a database rather than explicitly called"},
		{"l":84, "t":115, "r":381, "b":125,
		"q":[84, 20, 107, 64, 174, 10, 186, 19, 208, 29, 240, 8, 250, 11, 264, 54, 321, 19, 343, 38],
		"s":["The", "contribution", "of", "this", "paper", "is", "to", "implement", "and", "demon-"],
		"ss":"The contribution of this paper is to implement and demon-"},
		{"l":412, "t":115, "r":510, "b":125,
		"q":[412, 13, 428, 6, 438, 21, 463, 47],
		"s":["by", "a", "user", "program."],
		"ss":"by a user program."},
		{"l":73, "t":128, "r":381, "b":138,
		"q":[73, 30, 107, 6, 118, 23, 146, 44, 196, 14, 215, 26, 246, 23, 274, 56, 339, 23, 367, 14],
		"s":["strate", "a", "SQL", "interface", "for", "GPU", "data", "processing.", "This", "in-"],
		"ss":"strate a SQL interface for GPU data processing. This in-"},
		{"l":423, "t":128, "r":720, "b":139,
		"q":[423, 20, 447, 25, 476, 34, 513, 36, 553, 42, 598, 8, 610, 52, 666, 32, 701, 19],
		"s":["The", "most", "closely", "related", "research", "is", "Relational", "Query", "Co-"],
		"ss":"The most closely related research is Relational Query Co-"},
		{"l":73, "t":141, "r":381, "b":152,
		"q":[73, 35, 112, 38, 155, 6, 166, 32, 204, 10, 218, 23, 247, 47, 299, 36, 340, 13, 358, 23],
		"s":["terface", "enables", "a", "subset", "of", "SQL", "SELECT", "queries", "on", "data"],
		"ss":"terface enables a subset of SQL SELECT queries on data"},
		{"l":412, "t":142, "r":720, "b":152,
		"q":[412, 52, 468, 13, 485, 46, 535, 57, 597, 13, 614, 53, 671, 17, 693, 10, 707, 13],
		"s":["processing", "on", "Graphics", "Processors,", "by", "Bingsheng", "He,", "et", "al."],
		"ss":"processing on Graphics Processors, by Bingsheng He, et al."},
		{"l":73, "t":155, "r":381, "b":165,
		"q":[73, 22, 99, 17, 121, 24, 149, 47, 201, 57, 262, 10, 277, 60, 342, 24, 370, 11],
		"s":["that", "has", "been", "explicitly", "transferred", "in", "row-column", "form", "to"],
		"ss":"that has been explicitly transferred in row-column form to"},
		{"l":412, "t":155, "r":720, "b":165,
		"q":[412, 22, 439, 23, 466, 8, 477, 6, 487, 61, 552, 10, 566, 28, 597, 10, 611, 16, 631, 43, 678, 42],
		"s":["[12].", "This", "is", "a", "culmination", "of", "much", "of", "the", "previous", "research"],
		"ss":"[12]. This is a culmination of much of the previous research"},
		{"l":73, "t":168, "r":381, "b":179,
		"q":[73, 26, 103, 44, 152, 47, 204, 36, 244, 23, 271, 34, 309, 25, 338, 23, 365, 16],
		"s":["GPU", "memory.", "SELECT", "queries", "were", "chosen", "since", "they", "are"],
		"ss":"GPU memory. SELECT queries were chosen since they are"},
		{"l":412, "t":169, "r":720, "b":179,
		"q":[412, 53, 469, 13, 486, 59, 550, 23, 578, 56, 642, 14, 660, 39, 704, 16],
		"s":["performed", "on", "GPU-based", "data", "processing.", "Its", "authors", "de-"],
		"ss":"performed on GPU-based data processing. Its authors de-"},
		{"l":73, "t":182, "r":381, "b":192,
		"q":[73, 16, 94, 25, 124, 44, 172, 23, 200, 31, 237, 19, 261, 24, 290, 48, 344, 37],
		"s":["the", "most", "common", "SQL", "query,", "and", "their", "read-only", "charac-"],
		"ss":"the most common SQL query, and their read-only charac-"},
		{"l":412, "t":182, "r":720, "b":192,
		"q":[412, 20, 437, 6, 448, 49, 502, 30, 537, 30, 572, 43, 620, 41, 666, 6, 677, 43],
		"s":["sign", "a", "database,", "called", "GDB,", "accessed", "through", "a", "plethora"],
		"ss":"sign a database, called GDB, accessed through a plethora"},
		{"l":73, "t":195, "r":381, "b":206,
		"q":[73, 36, 114, 40, 160, 16, 182, 59, 246, 10, 262, 16, 284, 26, 316, 11, 332, 16, 355, 26],
		"s":["teristic", "exploits", "the", "throughput", "of", "the", "GPU", "to", "the", "high-"],
		"ss":"teristic exploits the throughput of the GPU to the high-"},
		{"l":412, "t":196, "r":720, "b":206,
		"q":[412, 10, 426, 52, 481, 57, 545, 30, 579, 54, 638, 16, 658, 38, 700, 20],
		"s":["of", "individual", "operations.", "These", "operations", "are", "divided", "into"],
		"ss":"of individual operations. These operations are divided into"},
		{"l":73, "t":209, "r":381, "b":219,
		"q":[73, 15, 93, 36, 141, 20, 168, 37, 210, 8, 225, 24, 255, 26, 287, 13, 306, 40, 352, 29],
		"s":["est", "extent.", "The", "project", "is", "built", "upon", "an", "existing", "open-"],
		"ss":"est extent. The project is built upon an existing open-"},
		{"l":412, "t":209, "r":720, "b":219,
		"q":[412, 52, 466, 31, 500, 47, 550, 19, 572, 55, 632, 20, 655, 49, 706, 14],
		"s":["operators,", "access", "methods,", "and", "primitives.", "The", "operators", "in-"],
		"ss":"operators, access methods, and primitives. The operators in-"},
		{"l":73, "t":222, "r":381, "b":233,
		"q":[73, 32, 110, 49, 163, 40, 208, 43, 256, 49, 309, 42, 355, 26],
		"s":["source", "database,", "SQLite,", "enabling", "switching", "between", "CPU"],
		"ss":"source database, SQLite, enabling switching between CPU"},
		{"l":412, "t":223, "r":720, "b":233,
		"q":[412, 27, 443, 46, 493, 49, 545, 19, 568, 35, 607, 68, 680, 20, 705, 15],
		"s":["clude", "ordering,", "grouping,", "and", "joining", "functionality.", "The", "ac-"],
		"ss":"clude ordering, grouping, and joining functionality. The ac-"},
		{"l":73, "t":236, "r":381, "b":246,
		"q":[73, 19, 96, 26, 127, 29, 160, 49, 214, 19, 238, 49, 291, 6, 301, 30, 335, 46],
		"s":["and", "GPU", "query", "execution", "and", "providing", "a", "direct", "compari-"],
		"ss":"and GPU query execution and providing a direct compari-"},
		{"l":412, "t":236, "r":720, "b":246,
		"q":[412, 20, 434, 44, 481, 36, 520, 21, 543, 16, 563, 23, 588, 8, 599, 37, 639, 10, 652, 16, 671, 49],
		"s":["cess", "methods", "control", "how", "the", "data", "is", "located", "in", "the", "database,"],
		"ss":"cess methods control how the data is located in the database,"},
		{"l":73, "t":249, "r":381, "b":260,
		"q":[73, 17, 93, 10, 106, 27, 137, 19, 159, 38, 201, 52, 258, 31, 292, 43, 339, 42],
		"s":["son", "of", "serial", "and", "parallel", "execution.", "While", "previous", "research"],
		"ss":"son of serial and parallel execution. While previous research"},
		{"l":412, "t":250, "r":720, "b":260,
		"q":[412, 19, 434, 42, 479, 48, 531, 28, 562, 19, 584, 43, 632, 36, 672, 16, 691, 28],
		"s":["and", "includes", "scanning,", "trees,", "and", "hashing.", "Finally", "the", "prim-"],
		"ss":"and includes scanning, trees, and hashing. Finally the prim-"},
		{"l":73, "t":263, "r":381, "b":273,
		"q":[73, 17, 94, 23, 121, 23, 149, 53, 206, 51, 262, 11, 276, 65, 345, 16, 366, 15],
		"s":["has", "used", "data", "processing", "primitives", "to", "approximate", "the", "ac-"],
		"ss":"has used data processing primitives to approximate the ac-"},
		{"l":412, "t":263, "r":720, "b":273,
		"q":[412, 27, 442, 16, 461, 6, 470, 15, 487, 10, 500, 52, 554, 69, 627, 54, 683, 23, 709, 11],
		"s":["itives", "are", "a", "set", "of", "functional", "programming", "operations", "such", "as"],
		"ss":"itives are a set of functional programming operations such as"},
		{"l":73, "t":276, "r":381, "b":287,
		"q":[73, 25, 102, 10, 116, 23, 143, 46, 193, 39, 236, 19, 259, 81, 344, 8, 356, 24],
		"s":["tions", "of", "SQL", "database", "queries,", "this", "implementation", "is", "built"],
		"ss":"tions of SQL database queries, this implementation is built"},
		{"l":412, "t":276, "r":720, "b":287,
		"q":[412, 26, 441, 37, 482, 38, 524, 36, 565, 19, 588, 26, 619, 27, 650, 17, 671, 6, 681, 39],
		"s":["map,", "reduce,", "scatter,", "gather,", "and", "split.", "GDB", "has", "a", "number"],
		"ss":"map, reduce, scatter, gather, and split. GDB has a number"},
		{"l":73, "t":290, "r":381, "b":300,
		"q":[73, 24, 100, 17, 121, 36, 160, 13, 177, 36, 217, 16, 237, 38, 279, 10, 292, 23, 319, 39, 362, 19],
		"s":["from", "the", "ground", "up", "around", "the", "parsing", "of", "SQL", "queries,", "and"],
		"ss":"from the ground up around the parsing of SQL queries, and"},
		{"l":412, "t":290, "r":720, "b":300,
		"q":[412, 10, 424, 56, 483, 11, 497, 16, 517, 81, 600, 49, 652, 10, 665, 19, 687, 33],
		"s":["of", "similarities", "to", "the", "implementation", "described", "in", "this", "paper,"],
		"ss":"of similarities to the implementation described in this paper,"},
		{"l":73, "t":303, "r":287, "b":314,
		"q":[73, 22, 99, 43, 146, 23, 173, 52, 229, 57],
		"s":["thus", "executes", "with", "signiﬁcant", "diﬀerences."],
		"ss":"thus executes with signiﬁcant diﬀerences."},
		{"l":412, "t":303, "r":720, "b":314,
		"q":[412, 39, 455, 16, 476, 48, 529, 35, 568, 19, 592, 60, 656, 23, 684, 36],
		"s":["notably", "the", "read-only", "system", "and", "column-row", "data", "organi-"],
		"ss":"notably the read-only system and column-row data organi-"},
		{"l":84, "t":317, "r":381, "b":327,
		"q":[84, 11, 98, 19, 121, 42, 166, 23, 192, 31, 227, 17, 247, 63, 313, 11, 327, 54],
		"s":["In", "this", "context,", "SQL", "allows", "the", "programmer", "to", "drastically"],
		"ss":"In this context, SQL allows the programmer to drastically"},
		{"l":412, "t":317, "r":720, "b":327,
		"q":[412, 35, 452, 18, 474, 25, 505, 30, 539, 23, 567, 34, 610, 11, 626, 16, 647, 33, 685, 35],
		"s":["zation,", "but", "lacks", "direct", "SQL", "access.", "In", "the", "paper,", "several"],
		"ss":"zation, but lacks direct SQL access. In the paper, several"},
		{"l":73, "t":330, "r":381, "b":341,
		"q":[73, 35, 113, 16, 134, 23, 161, 53, 219, 43, 267, 45, 316, 13, 334, 16, 355, 26],
		"s":["change", "the", "data", "processing", "patterns", "executed", "on", "the", "GPU"],
		"ss":"change the data processing patterns executed on the GPU"},
		{"l":412, "t":330, "r":720, "b":341,
		"q":[412, 23, 438, 36, 478, 16, 497, 60, 561, 23, 588, 16, 608, 51, 663, 19, 686, 34],
		"s":["SQL", "queries", "are", "constructed", "with", "the", "primitives", "and", "bench-"],
		"ss":"SQL queries are constructed with the primitives and bench-"},
		{"l":73, "t":344, "r":381, "b":354,
		"q":[73, 23, 101, 16, 122, 42, 168, 41, 214, 65, 283, 26, 315, 40, 360, 21],
		"s":["with", "the", "smallest", "possible", "development", "time,", "literally", "pro-"],
		"ss":"with the smallest possible development time, literally pro-"},
		{"l":412, "t":344, "r":720, "b":354,
		"q":[412, 42, 458, 18, 481, 13, 499, 32, 535, 29, 569, 11, 585, 51, 640, 23, 668, 36, 709, 11],
		"s":["marked,", "but", "no", "parser", "exists", "to", "transform", "SQL", "queries", "to"],
		"ss":"marked, but no parser exists to transform SQL queries to"},
		{"l":73, "t":357, "r":381, "b":368,
		"q":[73, 34, 111, 56, 170, 55, 229, 36, 269, 23, 296, 6, 306, 17, 327, 40, 371, 10],
		"s":["ducing", "completely", "orthogonal", "queries", "with", "a", "few", "changes", "in"],
		"ss":"ducing completely orthogonal queries with a few changes in"},
		{"l":412, "t":357, "r":534, "b":368,
		"q":[412, 50, 466, 10, 479, 55],
		"s":["sequences", "of", "primitives."],
		"ss":"sequences of primitives."},
		{"l":73, "t":371, "r":381, "b":381,
		"q":[73, 23, 99, 37, 142, 19, 165, 22, 190, 23, 216, 19, 239, 41, 283, 26, 313, 23, 340, 41],
		"s":["SQL", "syntax.", "Not", "only", "does", "this", "simplify", "GPU", "data", "process-"],
		"ss":"SQL syntax. Not only does this simplify GPU data process-"},
		{"l":423, "t":371, "r":720, "b":381,
		"q":[423, 23, 449, 37, 489, 81, 573, 17, 593, 35, 630, 34, 667, 11, 680, 16, 699, 20],
		"s":["This", "paper’s", "implementation", "has", "similar", "results", "to", "the", "pre-"],
		"ss":"This paper’s implementation has similar results to the pre-"},
		{"l":73, "t":384, "r":381, "b":395,
		"q":[73, 19, 96, 18, 118, 16, 139, 34, 177, 10, 191, 19, 215, 29, 248, 25, 278, 22, 304, 49, 358, 23],
		"s":["ing,", "but", "the", "results", "of", "this", "paper", "show", "that", "executing", "SQL"],
		"ss":"ing, but the results of this paper show that executing SQL"},
		{"l":412, "t":384, "r":720, "b":395,
		"q":[412, 27, 441, 45, 490, 18, 511, 57, 571, 16, 590, 45, 638, 10, 651, 42, 696, 24],
		"s":["vious", "research,", "but", "approaches", "the", "querying", "of", "datasets", "from"],
		"ss":"vious research, but approaches the querying of datasets from"},
		{"l":73, "t":398, "r":381, "b":408,
		"q":[73, 36, 114, 13, 132, 26, 164, 48, 218, 62, 285, 63, 354, 27],
		"s":["queries", "on", "GPU", "hardware", "signiﬁcantly", "outperforms", "serial"],
		"ss":"queries on GPU hardware signiﬁcantly outperforms serial"},
		{"l":412, "t":398, "r":720, "b":408,
		"q":[412, 13, 428, 46, 479, 49, 533, 30, 568, 42, 614, 17, 636, 24, 664, 26, 695, 25],
		"s":["an", "opposing", "direction.", "Other", "research", "has", "built", "GPU", "com-"],
		"ss":"an opposing direction. Other research has built GPU com-"},
		{"l":73, "t":411, "r":381, "b":422,
		"q":[73, 26, 102, 52, 161, 13, 178, 16, 199, 41, 244, 23, 272, 36, 312, 31, 347, 10, 362, 19],
		"s":["CPU", "execution.", "Of", "the", "thirteen", "SQL", "queries", "tested", "in", "this"],
		"ss":"CPU execution. Of the thirteen SQL queries tested in this"},
		{"l":412, "t":411, "r":720, "b":422,
		"q":[412, 34, 450, 51, 505, 24, 534, 16, 554, 36, 595, 16, 616, 23, 643, 24, 672, 48],
		"s":["puting", "primitives", "from", "the", "ground", "up,", "then", "built", "programs"],
		"ss":"puting primitives from the ground up, then built programs"},
		{"l":73, "t":425, "r":381, "b":435,
		"q":[73, 33, 109, 16, 130, 42, 175, 26, 206, 42, 252, 19, 275, 24, 303, 23, 330, 6, 340, 28, 371, 10],
		"s":["paper,", "the", "smallest", "GPU", "speedup", "was", "20X,", "with", "a", "mean", "of"],
		"ss":"paper, the smallest GPU speedup was 20X, with a mean of"},
		{"l":412, "t":425, "r":720, "b":435,
		"q":[412, 23, 439, 26, 471, 51, 527, 11, 542, 44, 590, 11, 605, 27, 637, 46, 687, 33],
		"s":["with", "these", "primitives", "to", "compare", "to", "other", "database", "opera-"],
		"ss":"with these primitives to compare to other database opera-"},
		{"l":73, "t":438, "r":381, "b":449,
		"q":[73, 24, 101, 30, 136, 34, 175, 38, 217, 19, 241, 18, 264, 12, 281, 6, 291, 22, 318, 36, 359, 22],
		"s":["35X.", "These", "results", "suggest", "this", "will", "be", "a", "very", "fruitful", "area"],
		"ss":"35X. These results suggest this will be a very fruitful area"},
		{"l":412, "t":438, "r":720, "b":449,
		"q":[412, 28, 447, 23, 475, 37, 517, 42, 563, 33, 601, 23, 628, 16, 649, 46, 700, 10, 714, 6],
		"s":["tions.", "This", "paper’s", "research", "begins", "with", "the", "codebase", "of", "a"],
		"ss":"tions. This paper’s research begins with the codebase of a"},
		{"l":73, "t":452, "r":263, "b":462,
		"q":[73, 14, 91, 31, 126, 42, 172, 19, 195, 68],
		"s":["for", "future", "research", "and", "development."],
		"ss":"for future research and development."},
		{"l":412, "t":452, "r":720, "b":462,
		"q":[412, 59, 473, 46, 522, 19, 544, 34, 582, 13, 598, 74, 675, 45],
		"s":["CPU-based", "database", "and", "adapts", "its", "computational", "elements"],
		"ss":"CPU-based database and adapts its computational elements"},
		{"l":412, "t":465, "r":720, "b":476,
		"q":[412, 11, 427, 39, 471, 13, 488, 6, 499, 30, 534, 23, 562, 47, 614, 31, 651, 6, 661, 28, 694, 26],
		"s":["to", "execute", "on", "a", "GPU.", "This", "approach", "allows", "a", "much", "more"],
		"ss":"to execute on a GPU. This approach allows a much more"},
		{"l":73, "t":479, "r":227, "b":493,
		"q":[73, 12, 100, 127],
		"s":["2.", "RELATEDWORK"],
		"ss":"2. RELATEDWORK"},
		{"l":412, "t":479, "r":720, "b":489,
		"q":[412, 30, 445, 59, 508, 23, 535, 55, 593, 54, 651, 19, 674, 25, 703, 17],
		"s":["direct", "comparison", "with", "traditional", "databases,", "and", "most", "im-"],
		"ss":"direct comparison with traditional databases, and most im-"},
		{"l":412, "t":492, "r":720, "b":503,
		"q":[412, 51, 468, 31, 505, 16, 527, 55, 587, 31, 623, 10, 638, 16, 660, 26, 692, 11, 708, 12],
		"s":["portantly,", "allows", "the", "computing", "power", "of", "the", "GPU", "to", "be"],
		"ss":"portantly, allows the computing power of the GPU to be"},
		{"l":73, "t":506, "r":227, "b":520,
		"q":[73, 19, 107, 33, 144, 32, 179, 48],
		"s":["2.1", "GPU", "Data", "Mining"],
		"ss":"2.1 GPU Data Mining"},
		{"l":412, "t":506, "r":720, "b":516,
		"q":[412, 43, 458, 39, 501, 41, 545, 27, 575, 23, 602, 42, 647, 6, 657, 41, 701, 19],
		"s":["accessed", "directly", "through", "SQL.", "SQL", "presents", "a", "uniform", "and"],
		"ss":"accessed directly through SQL. SQL presents a uniform and"},
		{"l":412, "t":519, "r":720, "b":530,
		"q":[412, 66, 483, 44, 533, 11, 549, 16, 571, 30, 606, 40, 652, 53, 710, 10],
		"s":["standardized", "interface", "to", "the", "GPU,", "without", "knowledge", "of"],
		"ss":"standardized interface to the GPU, without knowledge of"},
		{"l":84, "t":525, "r":381, "b":536,
		"q":[84, 30, 120, 17, 142, 24, 172, 47, 224, 42, 271, 10, 286, 37, 329, 23, 357, 24],
		"s":["There", "has", "been", "extensive", "research", "in", "general", "data", "min-"],
		"ss":"There has been extensive research in general data min-"},
		{"l":412, "t":533, "r":720, "b":543,
		"q":[412, 16, 431, 37, 472, 51, 526, 10, 539, 6, 548, 36, 587, 84, 675, 19, 697, 23],
		"s":["the", "speciﬁc", "primitives", "of", "a", "certain", "implementation,", "and", "with"],
		"ss":"the speciﬁc primitives of a certain implementation, and with"},
		{"l":73, "t":539, "r":381, "b":549,
		"q":[73, 16, 93, 13, 109, 34, 148, 56, 208, 39, 251, 13, 268, 31, 302, 19, 326, 16, 346, 35],
		"s":["ing", "on", "GPUs,", "thoroughly", "proving", "its", "power", "and", "the", "advan-"],
		"ss":"ing on GPUs, thoroughly proving its power and the advan-"},
		{"l":412, "t":546, "r":720, "b":557,
		"q":[412, 16, 433, 33, 470, 44, 519, 42, 565, 26, 595, 19, 619, 26, 650, 52, 709, 11],
		"s":["the", "option", "choosing", "between", "CPU", "and", "GPU", "execution.", "In"],
		"ss":"the option choosing between CPU and GPU execution. In"},
		{"l":73, "t":552, "r":381, "b":563,
		"q":[73, 26, 104, 10, 118, 50, 173, 53, 230, 24, 259, 17, 280, 29, 314, 20, 339, 42],
		"s":["tages", "of", "oﬄoading", "processing", "from", "the", "CPU.", "The", "research"],
		"ss":"tages of oﬄoading processing from the CPU. The research"},
		{"l":412, "t":560, "r":720, "b":570,
		"q":[412, 27, 443, 33, 480, 17, 500, 46, 550, 21, 574, 10, 588, 48, 640, 23, 667, 53],
		"s":["other", "words,", "the", "marginal", "cost", "of", "designing", "data", "processing"],
		"ss":"other words, the marginal cost of designing data processing"},
		{"l":73, "t":566, "r":381, "b":576,
		"q":[73, 41, 119, 11, 135, 19, 160, 29, 195, 36, 236, 13, 254, 75, 335, 22, 362, 19],
		"s":["relevant", "to", "this", "paper", "focuses", "on", "demonstrating", "that", "cer-"],
		"ss":"relevant to this paper focuses on demonstrating that cer-"},
		{"l":412, "t":573, "r":720, "b":584,
		"q":[412, 36, 452, 11, 467, 12, 483, 18, 506, 13, 522, 6, 533, 26, 563, 8, 576, 62, 642, 40, 687, 23, 714, 6],
		"s":["queries", "to", "be", "run", "on", "a", "GPU", "is", "signiﬁcantly", "reduced", "with", "a"],
		"ss":"queries to be run on a GPU is signiﬁcantly reduced with a"},
		{"l":73, "t":579, "r":381, "b":590,
		"q":[73, 20, 97, 46, 147, 57, 208, 20, 234, 54, 292, 22, 318, 16, 338, 43],
		"s":["tain", "database", "operations,", "(i.e.", "operations", "that", "are", "logically"],
		"ss":"tain database operations, (i.e. operations that are logically"},
		{"l":412, "t":587, "r":486, "b":597,
		"q":[412, 23, 439, 47],
		"s":["SQL", "interface."],
		"ss":"SQL interface."},
		{"l":73, "t":593, "r":381, "b":603,
		"q":[73, 53, 129, 33, 166, 6, 176, 46, 225, 34, 263, 6, 273, 29, 306, 54, 363, 18],
		"s":["performed", "within", "a", "database", "during", "a", "query", "execution)", "can"],
		"ss":"performed within a database during a query execution) can"},
		{"l":423, "t":600, "r":720, "b":611,
		"q":[423, 14, 442, 17, 464, 57, 526, 13, 543, 27, 576, 49, 630, 42, 677, 43],
		"s":["To", "our", "knowledge,", "no", "other", "published", "research", "provides"],
		"ss":"To our knowledge, no other published research provides"},
		{"l":73, "t":606, "r":381, "b":617,
		"q":[73, 12, 89, 23, 117, 13, 135, 13, 152, 34, 194, 30, 228, 41, 274, 16, 295, 66, 366, 15],
		"s":["be", "sped", "up", "on", "GPUs.", "These", "projects", "are", "implemented", "us-"],
		"ss":"be sped up on GPUs. These projects are implemented us-"},
		{"l":412, "t":614, "r":720, "b":624,
		"q":[412, 19, 436, 23, 464, 44, 514, 11, 529, 26, 561, 52, 622, 11, 638, 45, 688, 32],
		"s":["this", "SQL", "interface", "to", "GPU", "execution.", "In", "practical", "terms,"],
		"ss":"this SQL interface to GPU execution. In practical terms,"},
		{"l":73, "t":620, "r":381, "b":630,
		"q":[73, 16, 93, 51, 150, 23, 178, 11, 193, 22, 220, 19, 244, 40, 289, 22, 316, 18, 339, 12, 356, 25],
		"s":["ing", "primitives", "such", "as", "Sort", "and", "Scatter,", "that", "can", "be", "com-"],
		"ss":"ing primitives such as Sort and Scatter, that can be com-"},
		{"l":412, "t":627, "r":720, "b":638,
		"q":[412, 19, 435, 47, 486, 32, 522, 22, 548, 6, 558, 35, 597, 34, 635, 43, 682, 6, 692, 15, 710, 10],
		"s":["this", "approach", "means", "that", "a", "CUDA", "thread", "executes", "a", "set", "of"],
		"ss":"this approach means that a CUDA thread executes a set of"},
		{"l":73, "t":633, "r":381, "b":644,
		"q":[73, 28, 106, 19, 130, 18, 153, 10, 168, 52, 226, 13, 243, 16, 265, 26, 296, 23, 324, 11, 340, 41],
		"s":["bined", "and", "run", "in", "succession", "on", "the", "same", "data", "to", "produce"],
		"ss":"bined and run in succession on the same data to produce"},
		{"l":412, "t":641, "r":720, "b":651,
		"q":[412, 36, 452, 41, 498, 13, 514, 6, 525, 29, 558, 19, 581, 32, 617, 39, 660, 32, 696, 24],
		"s":["SQLite", "opcodes", "on", "a", "single", "row", "before", "exiting,", "rather", "than"],
		"ss":"SQLite opcodes on a single row before exiting, rather than"},
		{"l":73, "t":647, "r":381, "b":657,
		"q":[73, 16, 93, 34, 131, 10, 145, 44, 192, 46, 242, 39, 286, 21, 312, 29, 345, 36],
		"s":["the", "results", "of", "common", "database", "queries.", "One", "paper", "divides"],
		"ss":"the results of common database queries. One paper divides"},
		{"l":412, "t":654, "r":720, "b":665,
		"q":[412, 6, 423, 22, 451, 43, 499, 50, 555, 35, 596, 10, 611, 51, 668, 11, 685, 35],
		"s":["a", "host", "function", "managing", "bundle", "of", "primitives", "as", "CUDA"],
		"ss":"a host function managing bundle of primitives as CUDA"},
		{"l":73, "t":660, "r":381, "b":671,
		"q":[73, 46, 123, 36, 163, 20, 188, 47, 240, 56, 301, 40, 346, 35],
		"s":["database", "queries", "into", "predicate", "evaluation,", "boolean", "combi-"],
		"ss":"database queries into predicate evaluation, boolean combi-"},
		{"l":412, "t":668, "r":720, "b":678,
		"q":[412, 39, 460, 9, 474, 8, 488, 41, 534, 22, 561, 6, 572, 23, 601, 44, 650, 11, 666, 16, 688, 32],
		"s":["kernels.", "It", "is", "possible", "that", "a", "SQL", "interface", "to", "the", "primi-"],
		"ss":"kernels. It is possible that a SQL interface to the primi-"},
		{"l":73, "t":674, "r":381, "b":684,
		"q":[73, 36, 114, 19, 137, 60, 202, 47, 253, 16, 276, 30, 311, 51, 367, 14],
		"s":["nation,", "and", "aggregation", "functions", "[9].", "Other", "primitives", "in-"],
		"ss":"nation, and aggregation functions [9]. Other primitives in-"},
		{"l":412, "t":681, "r":720, "b":692,
		"q":[412, 24, 440, 48, 493, 10, 508, 27, 540, 42, 587, 28, 619, 12, 636, 38, 679, 41],
		"s":["tives", "discussed", "in", "other", "research", "could", "be", "created", "through"],
		"ss":"tives discussed in other research could be created through"},
		{"l":73, "t":687, "r":381, "b":698,
		"q":[73, 27, 105, 33, 143, 45, 193, 27, 225, 42, 272, 22, 299, 20, 324, 57],
		"s":["clude", "binary", "searches,", "p-ary", "searches", "[14],", "tree", "operations,"],
		"ss":"clude binary searches, p-ary searches [14], tree operations,"},
		{"l":412, "t":695, "r":720, "b":705,
		"q":[412, 6, 422, 35, 462, 18, 484, 19, 508, 17, 529, 17, 551, 24, 579, 28, 612, 19, 635, 22, 662, 11, 677, 22, 703, 17],
		"s":["a", "parser,", "but", "this", "has", "not", "been", "done,", "and", "may", "or", "may", "not"],
		"ss":"a parser, but this has not been done, and may or may not"},
		{"l":73, "t":701, "r":381, "b":711,
		"q":[73, 49, 125, 19, 147, 54, 204, 16, 223, 18, 246, 15, 265, 22, 290, 30, 323, 31, 357, 23],
		"s":["relational", "join", "operations", "[6],", "etc.", "An", "area", "where", "GPUs", "have"],
		"ss":"relational join operations [6], etc. An area where GPUs have"},
		{"l":412, "t":708, "r":720, "b":719,
		"q":[412, 12, 428, 26, 457, 69, 530, 14, 548, 26, 578, 52, 635, 29, 668, 51],
		"s":["be", "more", "advantageous", "for", "GPU", "execution.", "Many", "primitives"],
		"ss":"be more advantageous for GPU execution. Many primitives"},
		{"l":73, "t":714, "r":381, "b":725,
		"q":[73, 35, 110, 60, 173, 30, 206, 8, 217, 23, 243, 20, 265, 57, 327, 54],
		"s":["proven", "particularly", "useful", "is", "with", "sort", "operations.", "GPUTera-"],
		"ss":"proven particularly useful is with sort operations. GPUTera-"},
		{"l":412, "t":722, "r":720, "b":732,
		"q":[412, 23, 439, 11, 455, 20, 479, 19, 503, 30, 537, 23, 565, 30, 600, 38, 643, 10, 657, 27, 689, 31],
		"s":["such", "as", "sort", "and", "group", "have", "direct", "analogs", "in", "SQL,", "future"],
		"ss":"such as sort and group have direct analogs in SQL, future"},
		{"l":73, "t":728, "r":381, "b":738,
		"q":[73, 25, 101, 14, 118, 46, 167, 8, 177, 13, 193, 50, 245, 51, 299, 11, 313, 20, 335, 46],
		"s":["Sort,", "for", "example,", "is", "an", "algorithm", "developed", "to", "sort", "database"],
		"ss":"Sort, for example, is an algorithm developed to sort database"},
		{"l":412, "t":735, "r":720, "b":745,
		"q":[412, 42, 459, 22, 485, 32, 522, 21, 548, 13, 565, 40, 610, 23, 638, 29, 672, 48],
		"s":["research", "may", "clarify", "how", "an", "optimal", "SQL", "query", "processor"],
		"ss":"research may clarify how an optimal SQL query processor"},
		{"l":73, "t":741, "r":381, "b":752,
		"q":[73, 23, 102, 29, 137, 13, 155, 25, 186, 19, 211, 71, 288, 52, 346, 35],
		"s":["rows", "based", "on", "keys,", "and", "demonstrated", "signiﬁcant", "perfor-"],
		"ss":"rows based on keys, and demonstrated signiﬁcant perfor-"},
		{"l":412, "t":749, "r":665, "b":759,
		"q":[412, 31, 447, 27, 478, 47, 529, 16, 549, 26, 579, 32, 615, 16, 636, 29],
		"s":["diﬀers", "when", "targeting", "the", "GPU", "versus", "the", "CPU."],
		"ss":"diﬀers when targeting the GPU versus the CPU."},
		{"l":73, "t":755, "r":381, "b":765,
		"q":[73, 33, 111, 72, 188, 21, 214, 27, 246, 36, 287, 44, 336, 16, 360, 21],
		"s":["mance", "improvements", "over", "serial", "sorting", "methods", "[8].", "One"],
		"ss":"mance improvements over serial sorting methods [8]. One"},
		{"l":73, "t":768, "r":381, "b":779,
		"q":[73, 10, 86, 16, 107, 25, 136, 37, 177, 10, 191, 16, 211, 80, 295, 85],
		"s":["of", "the", "most", "general", "of", "the", "primitive-based", "implementations"],
		"ss":"of the most general of the primitive-based implementations"},
		{"l":73, "t":782, "r":381, "b":792,
		"q":[73, 8, 86, 60, 153, 6, 165, 44, 214, 30, 250, 59, 315, 35, 356, 25],
		"s":["is", "GPUMiner,", "a", "program", "which", "implements", "several", "algo-"],
		"ss":"is GPUMiner, a program which implements several algo-"},
		{"l":412, "t":776, "r":526, "b":789,
		"q":[412, 19, 446, 80],
		"s":["2.2", "MapReduce"],
		"ss":"2.2 MapReduce"},
		{"l":73, "t":795, "r":381, "b":806,
		"q":[73, 37, 115, 47, 168, 46, 219, 19, 243, 43, 291, 25, 321, 11, 337, 44],
		"s":["rithms,", "including", "k-means,", "and", "provides", "tools", "to", "visualize"],
		"ss":"rithms, including k-means, and provides tools to visualize"},
		{"l":423, "t":795, "r":720, "b":806,
		"q":[423, 9, 437, 20, 462, 19, 486, 30, 521, 22, 547, 10, 562, 23, 589, 36, 630, 42, 676, 8, 689, 10, 703, 17],
		"s":["A", "new", "and", "active", "area", "of", "data", "mining", "research", "is", "in", "the"],
		"ss":"A new and active area of data mining research is in the"},
		{"l":73, "t":809, "r":381, "b":819,
		"q":[73, 16, 93, 34, 130, 16, 151, 29, 184, 10, 197, 19, 220, 42, 265, 19, 288, 53, 344, 13, 360, 20],
		"s":["the", "results", "[7].", "Much", "of", "this", "research", "was", "performed", "on", "pre-"],
		"ss":"the results [7]. Much of this research was performed on pre-"},
		{"l":412, "t":809, "r":720, "b":819,
		"q":[412, 61, 478, 52, 538, 52, 595, 49, 650, 13, 667, 39, 712, 8],
		"s":["MapReduce", "paradigm.", "Originally", "pioneered", "by", "Google,", "it"],
		"ss":"MapReduce paradigm. Originally pioneered by Google, it"},
		{"l":73, "t":822, "r":381, "b":833,
		"q":[73, 27, 105, 59, 169, 10, 184, 26, 216, 51, 273, 19, 298, 31, 335, 46],
		"s":["vious", "generations", "of", "GPU", "hardware,", "and", "recent", "advances"],
		"ss":"vious generations of GPU hardware, and recent advances"},
		{"l":412, "t":822, "r":720, "b":833,
		"q":[412, 25, 440, 16, 459, 63, 525, 6, 534, 20, 558, 49, 609, 14, 626, 23, 652, 36, 691, 29],
		"s":["gives", "the", "programmer", "a", "new", "paradigm", "for", "data", "mining", "based"],
		"ss":"gives the programmer a new paradigm for data mining based"},
		{"l":73, "t":836, "r":323, "b":846,
		"q":[73, 18, 94, 22, 120, 41, 166, 16, 186, 38, 228, 54, 285, 37],
		"s":["can", "only", "improve", "the", "already", "impressive", "results."],
		"ss":"can only improve the already impressive results."},
		{"l":412, "t":836, "r":556, "b":846,
		"q":[412, 13, 428, 16, 448, 52, 504, 51],
		"s":["on", "the", "functional", "primitives"],
		"ss":"on the functional primitives"},
		{"l":559, "t":836, "r":578, "b":846,
		"q":[559, 18],
		"s":["map"],
		"ss":"map"},
		{"l":582, "t":836, "r":601, "b":846,
		"q":[582, 19],
		"s":["and"],
		"ss":"and"},
		{"l":605, "t":836, "r":641, "b":846,
		"q":[605, 36],
		"s":["reduce"],
		"ss":"reduce"},
		{"l":645, "t":836, "r":720, "b":846,
		"q":[645, 16, 666, 23, 693, 27],
		"s":["[3].", "This", "para-"],
		"ss":"[3]. This para-"},
		{"l":84, "t":849, "r":381, "b":860,
		"q":[84, 21, 108, 35, 146, 10, 159, 42, 204, 39, 246, 36, 285, 11, 298, 56, 358, 23],
		"s":["One", "avenue", "of", "research", "directly", "related", "to", "production", "SQL"],
		"ss":"One avenue of research directly related to production SQL"},
		{"l":412, "t":849, "r":720, "b":860,
		"q":[412, 26, 440, 17, 461, 6, 470, 74, 547, 38, 588, 37, 628, 19, 651, 8, 662, 23, 688, 32],
		"s":["digm", "has", "a", "fundamentally", "parallel", "nature,", "and", "is", "used", "exten-"],
		"ss":"digm has a fundamentally parallel nature, and is used exten-"},
		{"l":73, "t":863, "r":381, "b":873,
		"q":[73, 50, 128, 8, 141, 16, 163, 65, 233, 10, 248, 46, 298, 56, 359, 22],
		"s":["databases", "is", "the", "development", "of", "database", "procedures", "that"],
		"ss":"databases is the development of database procedures that"},
		{"l":412, "t":863, "r":720, "b":873,
		"q":[412, 29, 445, 13, 462, 36, 502, 19, 526, 28, 558, 27, 590, 53, 648, 14, 666, 53],
		"s":["sively", "by", "Google", "and", "many", "other", "companies", "for", "large-scale"],
		"ss":"sively by Google and many other companies for large-scale"},
		{"l":73, "t":876, "r":381, "b":887,
		"q":[73, 37, 112, 26, 142, 51, 198, 30, 231, 56, 290, 16, 308, 38, 349, 13, 364, 16],
		"s":["employ", "GPU", "hardware.", "These", "procedures", "are", "written", "by", "the"],
		"ss":"employ GPU hardware. These procedures are written by the"},
		{"l":412, "t":876, "r":720, "b":886,
		"q":[412, 57, 472, 23, 498, 56, 560, 40, 604, 53, 660, 20, 683, 6, 692, 28],
		"s":["distributed", "data", "processing.", "Though", "essentially", "just", "a", "name"],
		"ss":"distributed data processing. Though essentially just a name"},
		{"l":73, "t":890, "r":381, "b":900,
		"q":[73, 21, 98, 19, 122, 30, 156, 41, 202, 16, 223, 46, 273, 11, 288, 41, 333, 6, 344, 37],
		"s":["user", "and", "called", "through", "the", "database", "to", "perform", "a", "speciﬁc"],
		"ss":"user and called through the database to perform a speciﬁc"},
		{"l":412, "t":890, "r":720, "b":900,
		"q":[412, 14, 431, 27, 464, 18, 487, 10, 502, 16, 524, 51, 581, 54, 640, 10, 655, 17, 677, 43],
		"s":["for", "using", "two", "of", "the", "primitives", "mentioned", "in", "the", "previous"],
		"ss":"for using two of the primitives mentioned in the previous"},
		{"l":73, "t":903, "r":381, "b":914,
		"q":[73, 46, 124, 9, 137, 17, 159, 24, 187, 32, 223, 27, 254, 32, 290, 19, 314, 42, 360, 21],
		"s":["function.", "It", "has", "been", "shown", "using", "stored", "and", "external", "pro-"],
		"ss":"function. It has been shown using stored and external pro-"},
		{"l":412, "t":903, "r":720, "b":913,
		"q":[412, 39, 456, 61, 522, 17, 544, 39, 588, 6, 599, 31, 635, 26, 665, 28, 702, 18],
		"s":["section,", "MapReduce", "has", "become", "a", "major", "topic", "itself.", "Re-"],
		"ss":"section, MapReduce has become a major topic itself. Re-"},
		{"l":73, "t":917, "r":381, "b":927,
		"q":[73, 38, 115, 13, 132, 34, 169, 13, 186, 62, 252, 50, 306, 18, 329, 22, 355, 26],
		"s":["cedures", "on", "Oracle", "[1]", "PostgreSQL", "databases", "[13]", "that", "GPU"],
		"ss":"cedures on Oracle [1] PostgreSQL databases [13] that GPU"},
		{"l":412, "t":917, "r":720, "b":927,
		"q":[412, 32, 448, 10, 462, 19, 486, 22, 512, 17, 533, 32, 569, 22, 595, 61, 661, 59],
		"s":["search", "in", "this", "area", "has", "shown", "that", "MapReduce", "frameworks"],
		"ss":"search in this area has shown that MapReduce frameworks"},
		{"l":402, "t":1010, "r":414, "b":1020,
		"q":[402, 12],
		"s":["95"],
		"ss":"95"}
	]},
	{"pageNum":3, "pageWidth":816, "pageHeight":1056,
	"blocks":[
		{"l":73, "t":74, "r":381, "b":84,
		"q":[73, 18, 94, 12, 110, 57, 171, 13, 187, 48, 239, 47, 289, 18, 311, 19, 334, 13, 350, 31],
		"s":["can", "be", "accelerated", "on", "multicore", "machines", "[16]", "and", "on", "GPUs"],
		"ss":"can be accelerated on multicore machines [16] and on GPUs"},
		{"l":412, "t":74, "r":720, "b":84,
		"q":[412, 65, 482, 23, 510, 11, 526, 40, 571, 19, 595, 13, 613, 34, 652, 40, 697, 23],
		"s":["applications,", "such", "as", "Firefox,", "and", "on", "mobile", "devices,", "such"],
		"ss":"applications, such as Firefox, and on mobile devices, such"},
		{"l":73, "t":88, "r":381, "b":98,
		"q":[73, 22, 101, 44, 149, 39, 192, 6, 203, 35, 242, 10, 255, 55, 315, 66],
		"s":["[11].", "Notably,", "Thrust,", "a", "library", "of", "algorithms", "implemented"],
		"ss":"[11]. Notably, Thrust, a library of algorithms implemented"},
		{"l":412, "t":88, "r":720, "b":98,
		"q":[412, 11, 426, 16, 447, 36, 486, 22, 513, 36, 554, 8, 566, 49, 618, 14, 636, 13, 653, 41, 698, 22],
		"s":["as", "the", "iPhone", "[22].", "SQLite", "is", "respected", "for", "its", "extreme", "sim-"],
		"ss":"as the iPhone [22]. SQLite is respected for its extreme sim-"},
		{"l":73, "t":101, "r":381, "b":111,
		"q":[73, 10, 88, 35, 128, 45, 177, 11, 193, 6, 204, 60, 269, 35, 309, 35, 349, 11, 364, 16],
		"s":["in", "CUDA", "intended", "as", "a", "GPU-aware", "library", "similar", "to", "the"],
		"ss":"in CUDA intended as a GPU-aware library similar to the"},
		{"l":412, "t":101, "r":720, "b":111,
		"q":[412, 32, 449, 19, 472, 47, 524, 38, 570, 33, 608, 25, 638, 48, 691, 29],
		"s":["plicity", "and", "extensive", "testing.", "Unlike", "most", "databases", "which"],
		"ss":"plicity and extensive testing. Unlike most databases which"},
		{"l":73, "t":115, "r":381, "b":125,
		"q":[73, 27, 106, 47, 159, 48, 213, 41, 261, 42, 308, 6, 320, 61],
		"s":["C++", "Standard", "Template", "Library,", "includes", "a", "MapReduce"],
		"ss":"C++ Standard Template Library, includes a MapReduce"},
		{"l":412, "t":115, "r":720, "b":125,
		"q":[412, 37, 452, 11, 467, 35, 506, 42, 551, 11, 566, 42, 611, 46, 661, 19, 684, 36],
		"s":["operate", "as", "server,", "accessed", "by", "separate", "processes", "and", "usually"],
		"ss":"operate as server, accessed by separate processes and usually"},
		{"l":73, "t":128, "r":179, "b":138,
		"q":[73, 81, 157, 22],
		"s":["implementation", "[24]."],
		"ss":"implementation [24]."},
		{"l":412, "t":128, "r":720, "b":138,
		"q":[412, 42, 458, 47, 510, 36, 551, 8, 564, 37, 605, 10, 619, 10, 634, 44, 683, 37],
		"s":["accessed", "remotely,", "SQLite", "is", "written", "to", "be", "compiled", "directly"],
		"ss":"accessed remotely, SQLite is written to be compiled directly"},
		{"l":84, "t":141, "r":381, "b":152,
		"q":[84, 11, 99, 26, 128, 29, 161, 6, 171, 61, 236, 54, 294, 17, 315, 39, 357, 6, 367, 14],
		"s":["In", "some", "cases,", "a", "MapReduce", "framework", "has", "become", "a", "re-"],
		"ss":"In some cases, a MapReduce framework has become a re-"},
		{"l":412, "t":141, "r":720, "b":152,
		"q":[412, 20, 436, 15, 456, 32, 492, 22, 518, 10, 532, 15, 552, 28, 584, 59, 649, 36, 689, 8, 701, 19],
		"s":["into", "the", "source", "code", "of", "the", "client", "application.", "SQLite", "is", "dis-"],
		"ss":"into the source code of the client application. SQLite is dis-"},
		{"l":73, "t":155, "r":381, "b":165,
		"q":[73, 52, 130, 14, 150, 6, 161, 55, 221, 23, 250, 49, 305, 36, 346, 13, 364, 17],
		"s":["placement", "for", "a", "traditional", "SQL", "database,", "though", "its", "use"],
		"ss":"placement for a traditional SQL database, though its use"},
		{"l":412, "t":155, "r":720, "b":165,
		"q":[412, 42, 459, 11, 474, 6, 485, 29, 519, 9, 533, 32, 570, 18, 593, 38, 636, 8, 649, 31, 685, 11, 701, 19],
		"s":["tributed", "as", "a", "single", "C", "source", "ﬁle,", "making", "it", "trivial", "to", "add"],
		"ss":"tributed as a single C source ﬁle, making it trivial to add"},
		{"l":73, "t":168, "r":381, "b":179,
		"q":[73, 40, 118, 40, 166, 20, 192, 52, 249, 10, 264, 18, 287, 21, 313, 16, 335, 27, 367, 14],
		"s":["remains", "limited.", "The", "advantage", "of", "one", "over", "the", "other", "re-"],
		"ss":"remains limited. The advantage of one over the other re-"},
		{"l":412, "t":168, "r":720, "b":179,
		"q":[412, 6, 423, 46, 474, 23, 503, 6, 514, 17, 536, 23, 565, 81, 651, 11, 667, 6, 678, 42],
		"s":["a", "database", "with", "a", "full", "SQL", "implementation", "to", "a", "C/C++"],
		"ss":"a database with a full SQL implementation to a C/C++"},
		{"l":73, "t":182, "r":381, "b":192,
		"q":[73, 30, 107, 6, 116, 27, 146, 41, 191, 29, 224, 24, 251, 16, 271, 22, 296, 37, 337, 44],
		"s":["mains", "a", "hotly", "debated", "topic,", "both", "are", "very", "general", "methods"],
		"ss":"mains a hotly debated topic, both are very general methods"},
		{"l":412, "t":182, "r":472, "b":192,
		"q":[412, 61],
		"s":["application."],
		"ss":"application."},
		{"l":73, "t":195, "r":381, "b":206,
		"q":[73, 41, 118, 30, 152, 23, 179, 18, 201, 12, 217, 53, 275, 61, 340, 41],
		"s":["through", "which", "data", "can", "be", "processed.", "MapReduce", "requires"],
		"ss":"through which data can be processed. MapReduce requires"},
		{"l":73, "t":209, "r":381, "b":219,
		"q":[73, 16, 92, 63, 159, 11, 172, 26, 202, 6, 211, 37, 251, 29, 284, 67, 354, 27],
		"s":["the", "programmer", "to", "write", "a", "speciﬁc", "query", "procedurally,", "while"],
		"ss":"the programmer to write a speciﬁc query procedurally, while"},
		{"l":412, "t":206, "r":530, "b":220,
		"q":[412, 19, 446, 83],
		"s":["3.2", "Architecture"],
		"ss":"3.2 Architecture"},
		{"l":73, "t":222, "r":381, "b":233,
		"q":[73, 31, 109, 31, 145, 17, 167, 10, 182, 13, 200, 33, 238, 56, 299, 37, 346, 35],
		"s":["SQL’s", "power", "lies", "in", "its", "simple", "declarative", "syntax.", "Conse-"],
		"ss":"SQL’s power lies in its simple declarative syntax. Conse-"},
		{"l":423, "t":226, "r":720, "b":236,
		"q":[423, 44, 472, 62, 538, 8, 550, 48, 602, 36, 643, 19, 666, 6, 676, 23, 704, 16],
		"s":["SQLite’s", "architecture", "is", "relatively", "simple,", "and", "a", "brief", "de-"],
		"ss":"SQLite’s architecture is relatively simple, and a brief de-"},
		{"l":73, "t":236, "r":381, "b":246,
		"q":[73, 41, 118, 61, 183, 25, 212, 30, 247, 14, 265, 45, 314, 67],
		"s":["quently,", "MapReduce", "most", "useful", "for", "handling", "unstructured"],
		"ss":"quently, MapReduce most useful for handling unstructured"},
		{"l":412, "t":239, "r":720, "b":249,
		"q":[412, 45, 462, 8, 474, 49, 528, 14, 547, 74, 626, 16, 647, 35, 688, 32],
		"s":["scription", "is", "necessary", "for", "understanding", "the", "CUDA", "imple-"],
		"ss":"scription is necessary for understanding the CUDA imple-"},
		{"l":73, "t":249, "r":381, "b":260,
		"q":[73, 26, 105, 9, 118, 17, 139, 49, 193, 8, 205, 22, 230, 16, 251, 50, 305, 10, 319, 16, 339, 41],
		"s":["data.", "A", "key", "diﬀerence", "is", "that", "the", "simplicity", "of", "the", "MapRe-"],
		"ss":"data. A key diﬀerence is that the simplicity of the MapRe-"},
		{"l":412, "t":253, "r":720, "b":263,
		"q":[412, 52, 468, 49, 521, 10, 536, 19, 559, 33, 598, 20, 623, 21, 649, 10, 663, 16, 683, 36],
		"s":["mentation", "described", "in", "this", "paper.", "The", "core", "of", "the", "SQLite"],
		"ss":"mentation described in this paper. The core of the SQLite"},
		{"l":73, "t":263, "r":381, "b":273,
		"q":[73, 24, 103, 49, 158, 32, 196, 8, 210, 33, 249, 11, 266, 54, 326, 10, 342, 38],
		"s":["duce", "paradigm", "makes", "it", "simple", "to", "implement", "in", "CUDA,"],
		"ss":"duce paradigm makes it simple to implement in CUDA,"},
		{"l":412, "t":266, "r":720, "b":276,
		"q":[412, 71, 485, 43, 531, 16, 550, 21, 574, 47, 625, 17, 644, 23, 670, 50],
		"s":["infrastructure", "contains", "the", "user", "interface,", "the", "SQL", "command"],
		"ss":"infrastructure contains the user interface, the SQL command"},
		{"l":73, "t":276, "r":381, "b":287,
		"q":[73, 27, 104, 13, 120, 23, 147, 23, 174, 81, 259, 32, 296, 65, 364, 16],
		"s":["while", "no", "such", "SQL", "implementation", "exists.", "Additionally", "the"],
		"ss":"while no such SQL implementation exists. Additionally the"},
		{"l":412, "t":280, "r":720, "b":290,
		"q":[412, 51, 466, 19, 488, 16, 507, 35, 544, 43, 589, 22, 616, 36, 655, 20, 677, 43],
		"s":["processor,", "and", "the", "virtual", "machine", "[21].", "SQLite", "also", "contains"],
		"ss":"processor, and the virtual machine [21]. SQLite also contains"},
		{"l":73, "t":290, "r":381, "b":300,
		"q":[73, 36, 114, 17, 135, 10, 150, 61, 216, 42, 262, 18, 285, 26, 317, 64],
		"s":["limited", "use", "of", "MapReduce", "restricts", "any", "GPU", "implementa-"],
		"ss":"limited use of MapReduce restricts any GPU implementa-"},
		{"l":412, "t":293, "r":720, "b":303,
		"q":[412, 47, 464, 66, 534, 14, 553, 45, 603, 21, 629, 57, 691, 29],
		"s":["extensive", "functionality", "for", "handling", "disk", "operations,", "mem-"],
		"ss":"extensive functionality for handling disk operations, mem-"},
		{"l":73, "t":303, "r":381, "b":314,
		"q":[73, 20, 96, 11, 110, 6, 119, 27, 149, 48, 201, 60, 264, 27, 294, 22, 319, 16, 339, 42],
		"s":["tion", "to", "a", "small", "audience,", "particularly", "given", "that", "the", "memory"],
		"ss":"tion to a small audience, particularly given that the memory"},
		{"l":412, "t":307, "r":720, "b":317,
		"q":[412, 17, 432, 54, 490, 38, 532, 18, 556, 18, 577, 26, 607, 26, 638, 16, 657, 18, 679, 41],
		"s":["ory", "allocation,", "testing,", "etc.", "but", "these", "areas", "are", "less", "relevant"],
		"ss":"ory allocation, testing, etc. but these areas are less relevant"},
		{"l":73, "t":317, "r":381, "b":327,
		"q":[73, 38, 114, 10, 128, 39, 171, 31, 206, 34, 245, 24, 273, 17, 294, 10, 308, 16, 328, 52],
		"s":["ceilings", "of", "modern", "GPUs", "inhibit", "their", "use", "in", "the", "huge-scale"],
		"ss":"ceilings of modern GPUs inhibit their use in the huge-scale"},
		{"l":412, "t":320, "r":720, "b":330,
		"q":[412, 11, 427, 19, 451, 40, 500, 20, 525, 21, 551, 44, 600, 40, 645, 10, 660, 6, 671, 35, 710, 10],
		"s":["to", "this", "project.", "The", "user", "interface", "consists", "of", "a", "library", "of"],
		"ss":"to this project. The user interface consists of a library of"},
		{"l":73, "t":330, "r":381, "b":341,
		"q":[73, 23, 99, 53, 155, 62, 219, 14, 236, 30, 269, 61, 333, 8, 344, 37],
		"s":["data", "processing", "applications", "for", "which", "MapReduce", "is", "known."],
		"ss":"data processing applications for which MapReduce is known."},
		{"l":412, "t":333, "r":720, "b":344,
		"q":[412, 9, 424, 47, 475, 19, 497, 52, 553, 11, 567, 34, 605, 54, 662, 23, 689, 11, 703, 17],
		"s":["C", "functions", "and", "structures", "to", "handle", "operations", "such", "as", "ini-"],
		"ss":"C functions and structures to handle operations such as ini-"},
		{"l":73, "t":351, "r":281, "b":365,
		"q":[73, 19, 107, 92, 203, 78],
		"s":["2.3", "Programming", "Abstraction"],
		"ss":"2.3 Programming Abstraction"},
		{"l":412, "t":347, "r":720, "b":357,
		"q":[412, 41, 456, 54, 513, 49, 565, 39, 607, 19, 629, 38, 669, 11, 683, 37],
		"s":["tializing", "databases,", "executing", "queries,", "and", "looking", "at", "results."],
		"ss":"tializing databases, executing queries, and looking at results."},
		{"l":412, "t":360, "r":720, "b":371,
		"q":[412, 20, 436, 44, 485, 8, 497, 33, 535, 19, 558, 46, 611, 8, 623, 8, 635, 41, 680, 11, 695, 25],
		"s":["The", "interface", "is", "simple", "and", "intuitive:", "it", "is", "possible", "to", "open"],
		"ss":"The interface is simple and intuitive: it is possible to open"},
		{"l":84, "t":371, "r":381, "b":381,
		"q":[84, 43, 130, 38, 172, 32, 206, 10, 219, 42, 265, 8, 276, 16, 295, 27, 326, 11, 340, 41],
		"s":["Another", "notable", "vector", "of", "research", "is", "the", "eﬀort", "to", "simplify"],
		"ss":"Another notable vector of research is the eﬀort to simplify"},
		{"l":412, "t":374, "r":720, "b":384,
		"q":[412, 6, 422, 46, 473, 19, 497, 39, 540, 6, 551, 29, 585, 10, 599, 20, 624, 18, 647, 43, 694, 26],
		"s":["a", "database", "and", "execute", "a", "query", "in", "just", "two", "function", "calls."],
		"ss":"a database and execute a query in just two function calls."},
		{"l":73, "t":384, "r":381, "b":394,
		"q":[73, 16, 94, 37, 136, 10, 151, 37, 192, 44, 241, 65, 311, 35, 351, 30],
		"s":["the", "process", "of", "writing", "GPGPU", "applications,", "CUDA", "appli-"],
		"ss":"the process of writing GPGPU applications, CUDA appli-"},
		{"l":412, "t":387, "r":720, "b":398,
		"q":[412, 46, 462, 22, 489, 22, 515, 39, 558, 23, 585, 36, 625, 17, 646, 16, 667, 23, 695, 25],
		"s":["Function", "calls", "that", "execute", "SQL", "queries", "use", "the", "SQL", "com-"],
		"ss":"Function calls that execute SQL queries use the SQL com-"},
		{"l":73, "t":398, "r":381, "b":408,
		"q":[73, 36, 113, 10, 127, 54, 188, 40, 231, 40, 275, 35, 314, 48, 367, 14],
		"s":["cations", "in", "particular.", "Writing", "optimal", "CUDA", "programs", "re-"],
		"ss":"cations in particular. Writing optimal CUDA programs re-"},
		{"l":412, "t":401, "r":720, "b":411,
		"q":[412, 29, 445, 51, 501, 20, 526, 50, 580, 48, 632, 47, 683, 37],
		"s":["mand", "processor.", "The", "command", "processor", "functions", "exactly"],
		"ss":"mand processor. The command processor functions exactly"},
		{"l":73, "t":411, "r":381, "b":421,
		"q":[73, 31, 108, 13, 125, 74, 203, 10, 217, 16, 238, 39, 281, 37, 323, 10, 337, 44],
		"s":["quires", "an", "understanding", "of", "the", "esoteric", "aspects", "of", "NVIDIA"],
		"ss":"quires an understanding of the esoteric aspects of NVIDIA"},
		{"l":412, "t":414, "r":720, "b":425,
		"q":[412, 18, 433, 6, 443, 47, 495, 8, 507, 43, 553, 6, 562, 50, 616, 6, 626, 35, 664, 19, 687, 6, 696, 23],
		"s":["like", "a", "compiler:", "it", "contains", "a", "tokenizer,", "a", "parser,", "and", "a", "code"],
		"ss":"like a compiler: it contains a tokenizer, a parser, and a code"},
		{"l":73, "t":424, "r":381, "b":435,
		"q":[73, 51, 129, 56, 190, 16, 212, 42, 259, 50, 317, 46, 368, 13],
		"s":["hardware,", "speciﬁcally", "the", "memory", "heirarchy.", "Research", "on"],
		"ss":"hardware, speciﬁcally the memory heirarchy. Research on"},
		{"l":412, "t":428, "r":720, "b":438,
		"q":[412, 52, 472, 20, 498, 32, 534, 8, 547, 38, 590, 23, 618, 13, 635, 48, 688, 32],
		"s":["generator.", "The", "parser", "is", "created", "with", "an", "LALR(1)", "parser"],
		"ss":"generator. The parser is created with an LALR(1) parser"},
		{"l":73, "t":438, "r":381, "b":448,
		"q":[73, 19, 98, 42, 146, 17, 169, 38, 213, 13, 231, 38, 275, 16, 297, 48, 350, 30],
		"s":["this", "problem", "has", "focused", "on", "making", "the", "heirarchy", "trans-"],
		"ss":"this problem has focused on making the heirarchy trans-"},
		{"l":412, "t":441, "r":720, "b":452,
		"q":[412, 49, 465, 30, 500, 38, 543, 22, 570, 35, 610, 11, 625, 34, 664, 19, 688, 32],
		"s":["generator", "called", "Lemon,", "very", "similar", "to", "YACC", "and", "Bison."],
		"ss":"generator called Lemon, very similar to YACC and Bison."},
		{"l":73, "t":451, "r":381, "b":462,
		"q":[73, 33, 110, 11, 124, 16, 145, 67, 215, 57, 276, 36, 316, 65],
		"s":["parent", "to", "the", "programmer,", "performing", "critical", "optimization"],
		"ss":"parent to the programmer, performing critical optimization"},
		{"l":412, "t":455, "r":720, "b":465,
		"q":[412, 20, 435, 50, 488, 48, 540, 40, 582, 6, 591, 44, 638, 10, 651, 13, 667, 53],
		"s":["The", "command", "processor", "outputs", "a", "program", "in", "an", "intermedi-"],
		"ss":"The command processor outputs a program in an intermedi-"},
		{"l":73, "t":465, "r":381, "b":475,
		"q":[73, 34, 113, 64, 189, 21, 217, 23, 246, 37, 289, 17, 313, 68],
		"s":["during", "compilation.", "One", "such", "project", "has", "programmers"],
		"ss":"during compilation. One such project has programmers"},
		{"l":412, "t":468, "r":720, "b":479,
		"q":[412, 16, 431, 45, 481, 35, 519, 11, 534, 49, 588, 58, 649, 16, 670, 50],
		"s":["ate", "language", "similar", "to", "assembly.", "Essentially,", "the", "command"],
		"ss":"ate language similar to assembly. Essentially, the command"},
		{"l":73, "t":478, "r":381, "b":489,
		"q":[73, 26, 103, 35, 143, 48, 195, 22, 221, 55, 281, 17, 301, 31, 337, 44],
		"s":["write", "CUDA", "programs", "that", "exclusively", "use", "global", "memory,"],
		"ss":"write CUDA programs that exclusively use global memory,"},
		{"l":412, "t":482, "r":720, "b":492,
		"q":[412, 48, 463, 26, 493, 17, 512, 43, 558, 34, 596, 10, 608, 6, 618, 23, 644, 29, 676, 19, 699, 21],
		"s":["processor", "takes", "the", "complex", "syntax", "of", "a", "SQL", "query", "and", "out-"],
		"ss":"processor takes the complex syntax of a SQL query and out-"},
		{"l":73, "t":492, "r":381, "b":502,
		"q":[73, 23, 101, 38, 145, 16, 167, 21, 193, 45, 244, 11, 260, 27, 292, 11, 308, 38, 352, 29],
		"s":["then", "chooses", "the", "best", "variables", "to", "move", "to", "register", "mem-"],
		"ss":"then chooses the best variables to move to register mem-"},
		{"l":412, "t":495, "r":553, "b":506,
		"q":[412, 22, 438, 6, 448, 15, 467, 10, 480, 40, 524, 29],
		"s":["puts", "a", "set", "of", "discrete", "steps."],
		"ss":"puts a set of discrete steps."},
		{"l":73, "t":505, "r":381, "b":516,
		"q":[73, 19, 96, 34, 133, 44, 181, 18, 204, 34, 242, 16, 262, 61, 326, 29, 359, 22],
		"s":["ory,", "shared", "memory,", "etc.", "during", "the", "compilation", "phase", "[17]."],
		"ss":"ory, shared memory, etc. during the compilation phase [17]."},
		{"l":423, "t":509, "r":720, "b":519,
		"q":[423, 26, 453, 49, 506, 10, 520, 19, 544, 65, 613, 44, 661, 43, 707, 13],
		"s":["Each", "operation", "in", "this", "intermediate", "program", "contains", "an"],
		"ss":"Each operation in this intermediate program contains an"},
		{"l":73, "t":519, "r":381, "b":529,
		"q":[73, 30, 108, 41, 155, 23, 183, 11, 199, 56, 260, 19, 284, 46, 336, 23, 364, 16],
		"s":["Other", "projects", "such", "as", "CUDA-lite", "and", "hiCUDA", "have", "the"],
		"ss":"Other projects such as CUDA-lite and hiCUDA have the"},
		{"l":412, "t":522, "r":720, "b":533,
		"q":[412, 36, 452, 19, 476, 13, 494, 11, 509, 18, 531, 57, 595, 26, 625, 36, 666, 28, 699, 11, 714, 6],
		"s":["opcode", "and", "up", "to", "ﬁve", "arguments.", "Each", "opcode", "refers", "to", "a"],
		"ss":"opcode and up to ﬁve arguments. Each opcode refers to a"},
		{"l":73, "t":532, "r":381, "b":543,
		"q":[73, 63, 142, 46, 194, 24, 224, 23, 254, 14, 274, 16, 297, 47, 351, 30],
		"s":["programmer", "annotate", "their", "code", "for", "the", "compiler,", "which"],
		"ss":"programmer annotate their code for the compiler, which"},
		{"l":412, "t":536, "r":720, "b":546,
		"q":[412, 37, 453, 49, 506, 53, 563, 33, 600, 16, 621, 49, 676, 44],
		"s":["speciﬁc", "operation", "performed", "within", "the", "database.", "Opcodes"],
		"ss":"speciﬁc operation performed within the database. Opcodes"},
		{"l":73, "t":546, "r":381, "b":556,
		"q":[73, 38, 116, 16, 138, 21, 164, 42, 211, 50, 267, 29, 301, 13, 319, 26, 350, 30],
		"s":["chooses", "the", "best", "memory", "allocation", "based", "on", "these", "notes,"],
		"ss":"chooses the best memory allocation based on these notes,"},
		{"l":412, "t":549, "r":720, "b":560,
		"q":[412, 41, 458, 54, 517, 23, 546, 11, 562, 41, 608, 6, 619, 29, 654, 38, 697, 23],
		"s":["perform", "operations", "such", "as", "opening", "a", "table,", "loading", "data"],
		"ss":"perform operations such as opening a table, loading data"},
		{"l":73, "t":559, "r":381, "b":570,
		"q":[73, 13, 91, 47, 143, 35, 184, 11, 200, 16, 222, 47, 274, 31, 311, 18, 335, 18, 363, 18],
		"s":["an", "approach", "similar", "to", "the", "OpenMP", "model", "[10,", "25].", "Yet"],
		"ss":"an approach similar to the OpenMP model [10, 25]. Yet"},
		{"l":412, "t":563, "r":720, "b":573,
		"q":[412, 24, 440, 6, 450, 17, 471, 20, 496, 6, 506, 42, 552, 57, 613, 6, 623, 27, 654, 49, 707, 13],
		"s":["from", "a", "cell", "into", "a", "register,", "performing", "a", "math", "operation", "on"],
		"ss":"from a cell into a register, performing a math operation on"},
		{"l":73, "t":573, "r":381, "b":583,
		"q":[73, 40, 116, 37, 155, 39, 198, 50, 252, 47, 302, 23, 329, 11, 342, 38],
		"s":["another", "project", "directly", "translates", "OpenMP", "code", "to", "CUDA,"],
		"ss":"another project directly translates OpenMP code to CUDA,"},
		{"l":412, "t":576, "r":720, "b":587,
		"q":[412, 6, 423, 42, 470, 19, 494, 43, 541, 11, 557, 40, 601, 36, 643, 22, 673, 9, 687, 33],
		"s":["a", "register,", "and", "jumping", "to", "another", "opcode", "[23].", "A", "simple"],
		"ss":"a register, and jumping to another opcode [23]. A simple"},
		{"l":73, "t":586, "r":381, "b":597,
		"q":[73, 51, 129, 38, 172, 8, 184, 41, 230, 11, 245, 40, 290, 38, 333, 48],
		"s":["eﬀectively", "making", "it", "possible", "to", "migrate", "parallel", "processor"],
		"ss":"eﬀectively making it possible to migrate parallel processor"},
		{"l":412, "t":590, "r":720, "b":600,
		"q":[412, 47, 464, 29, 498, 30, 533, 13, 551, 55, 611, 31, 647, 11, 663, 6, 674, 46],
		"s":["SELECT", "query", "works", "by", "initializing", "access", "to", "a", "database"],
		"ss":"SELECT query works by initializing access to a database"},
		{"l":73, "t":600, "r":381, "b":610,
		"q":[73, 23, 99, 11, 112, 16, 132, 26, 161, 23, 187, 13, 202, 28, 233, 24, 260, 16, 279, 63, 345, 22, 372, 9],
		"s":["code", "to", "the", "GPU", "with", "no", "input", "from", "the", "programmer", "[15].", "A"],
		"ss":"code to the GPU with no input from the programmer [15]. A"},
		{"l":412, "t":603, "r":720, "b":614,
		"q":[412, 29, 445, 38, 487, 21, 513, 23, 540, 22, 567, 23, 594, 42, 640, 13, 658, 19, 681, 39],
		"s":["table,", "looping", "over", "each", "row,", "then", "cleaning", "up", "and", "exiting."],
		"ss":"table, looping over each row, then cleaning up and exiting."},
		{"l":73, "t":613, "r":381, "b":624,
		"q":[73, 44, 120, 34, 157, 10, 170, 19, 192, 22, 218, 8, 229, 16, 249, 40, 292, 42, 337, 16, 357, 24],
		"s":["common", "thread", "in", "this", "area", "is", "the", "tradeoﬀ", "between", "the", "diﬃ-"],
		"ss":"common thread in this area is the tradeoﬀ between the diﬃ-"},
		{"l":412, "t":617, "r":587, "b":627,
		"q":[412, 20, 436, 22, 461, 42, 506, 41, 550, 23, 576, 11],
		"s":["The", "loop", "includes", "opcodes", "such", "as"],
		"ss":"The loop includes opcodes such as"},
		{"l":590, "t":617, "r":627, "b":628,
		"q":[590, 36],
		"s":["Column"],
		"ss":"Column"},
		{"l":627, "t":617, "r":720, "b":627,
		"q":[627, 3, 634, 30, 667, 26, 697, 23],
		"s":[",", "which", "loads", "data"],
		"ss":", which loads data"},
		{"l":73, "t":627, "r":381, "b":637,
		"q":[73, 26, 102, 10, 115, 44, 162, 65, 231, 19, 253, 16, 274, 53, 330, 10, 344, 16, 364, 17],
		"s":["culty", "of", "program", "development", "and", "the", "optimality", "of", "the", "ﬁn-"],
		"ss":"culty of program development and the optimality of the ﬁn-"},
		{"l":412, "t":630, "r":720, "b":641,
		"q":[412, 24, 439, 6, 449, 38, 490, 10, 503, 16, 523, 37, 564, 19, 587, 19, 609, 31, 644, 8, 655, 10, 669, 6, 678, 42],
		"s":["from", "a", "column", "of", "the", "current", "row", "and", "places", "it", "in", "a", "register,"],
		"ss":"from a column of the current row and places it in a register,"},
		{"l":73, "t":640, "r":381, "b":651,
		"q":[73, 26, 103, 44, 153, 58, 215, 69, 288, 39, 332, 10, 346, 35],
		"s":["ished", "product.", "Ultimately,", "programming", "directly", "in", "CUDA"],
		"ss":"ished product. Ultimately, programming directly in CUDA"},
		{"l":412, "t":644, "r":466, "b":655,
		"q":[412, 55],
		"s":["ResultRow"],
		"ss":"ResultRow"},
		{"l":466, "t":644, "r":720, "b":654,
		"q":[466, 3, 473, 30, 507, 31, 542, 16, 562, 23, 588, 10, 602, 6, 611, 15, 630, 10, 643, 43, 689, 11, 703, 16],
		"s":[",", "which", "moves", "the", "data", "in", "a", "set", "of", "registers", "to", "the"],
		"ss":", which moves the data in a set of registers to the"},
		{"l":73, "t":654, "r":381, "b":664,
		"q":[73, 40, 117, 16, 137, 22, 163, 20, 187, 11, 201, 33, 238, 6, 248, 44, 295, 8, 307, 33, 344, 17, 364, 16],
		"s":["remains", "the", "only", "way", "to", "ensure", "a", "program", "is", "taking", "full", "ad-"],
		"ss":"remains the only way to ensure a program is taking full ad-"},
		{"l":412, "t":657, "r":551, "b":668,
		"q":[412, 29, 445, 15, 463, 10, 477, 16, 497, 31, 532, 19],
		"s":["result", "set", "of", "the", "query,", "and"],
		"ss":"result set of the query, and"},
		{"l":555, "t":658, "r":580, "b":668,
		"q":[555, 24],
		"s":["Next"],
		"ss":"Next"},
		{"l":580, "t":657, "r":720, "b":668,
		"q":[580, 3, 587, 30, 621, 31, 656, 16, 676, 44],
		"s":[",", "which", "moves", "the", "program"],
		"ss":", which moves the program"},
		{"l":73, "t":667, "r":232, "b":678,
		"q":[73, 40, 116, 10, 130, 16, 150, 26, 180, 51],
		"s":["vantage", "of", "the", "GPU", "hardware."],
		"ss":"vantage of the GPU hardware."},
		{"l":412, "t":671, "r":512, "b":681,
		"q":[412, 13, 428, 11, 443, 16, 463, 23, 490, 22],
		"s":["on", "to", "the", "next", "row."],
		"ss":"on to the next row."},
		{"l":84, "t":681, "r":381, "b":691,
		"q":[84, 55, 142, 10, 155, 16, 174, 45, 222, 26, 251, 8, 262, 24, 290, 39, 331, 10, 344, 37],
		"s":["Regardless", "of", "the", "speciﬁcs,", "there", "is", "clear", "interest", "in", "provid-"],
		"ss":"Regardless of the speciﬁcs, there is clear interest in provid-"},
		{"l":423, "t":684, "r":720, "b":695,
		"q":[423, 23, 451, 36, 493, 44, 541, 8, 554, 45, 605, 13, 622, 16, 644, 36, 685, 35],
		"s":["This", "opcode", "program", "is", "executed", "by", "the", "SQLite", "virtual"],
		"ss":"This opcode program is executed by the SQLite virtual"},
		{"l":73, "t":694, "r":381, "b":705,
		"q":[73, 16, 92, 6, 102, 38, 143, 44, 191, 11, 206, 44, 253, 69, 326, 24, 354, 27],
		"s":["ing", "a", "simpler", "interface", "to", "GPGPU", "programming", "than", "those"],
		"ss":"ing a simpler interface to GPGPU programming than those"},
		{"l":412, "t":698, "r":720, "b":708,
		"q":[412, 46, 464, 20, 489, 35, 528, 43, 575, 44, 624, 16, 645, 25, 674, 46],
		"s":["machine.", "The", "virtual", "machine", "manages", "the", "open", "database"],
		"ss":"machine. The virtual machine manages the open database"},
		{"l":73, "t":708, "r":381, "b":718,
		"q":[73, 22, 98, 47, 149, 27, 182, 20, 206, 43, 253, 10, 267, 23, 294, 19, 317, 13, 333, 48],
		"s":["that", "currently", "exist.", "The", "ubiquity", "of", "SQL", "and", "its", "pervasive"],
		"ss":"that currently exist. The ubiquity of SQL and its pervasive"},
		{"l":412, "t":711, "r":720, "b":722,
		"q":[412, 19, 437, 29, 473, 19, 498, 30, 534, 60, 600, 10, 616, 6, 628, 15, 649, 10, 665, 55],
		"s":["and", "table,", "and", "stores", "information", "in", "a", "set", "of", "”registers”,"],
		"ss":"and table, and stores information in a set of ”registers”,"},
		{"l":73, "t":721, "r":381, "b":732,
		"q":[73, 56, 133, 38, 175, 22, 201, 6, 211, 56, 271, 26, 302, 44, 350, 31],
		"s":["parallelism", "suggest", "that", "a", "SQL-based", "GPU", "interface", "would"],
		"ss":"parallelism suggest that a SQL-based GPU interface would"},
		{"l":412, "t":725, "r":720, "b":735,
		"q":[412, 30, 446, 34, 485, 17, 506, 12, 523, 45, 572, 23, 600, 16, 621, 38, 664, 42, 710, 10],
		"s":["which", "should", "not", "be", "confused", "with", "the", "register", "memory", "of"],
		"ss":"which should not be confused with the register memory of"},
		{"l":73, "t":735, "r":381, "b":745,
		"q":[73, 12, 88, 22, 113, 14, 130, 68, 201, 11, 215, 17, 234, 19, 256, 28, 287, 62, 352, 29],
		"s":["be", "easy", "for", "programmers", "to", "use", "and", "could", "signiﬁcantly", "speed"],
		"ss":"be easy for programmers to use and could signiﬁcantly speed"},
		{"l":412, "t":738, "r":720, "b":749,
		"q":[412, 38, 454, 31, 488, 49, 541, 6, 551, 47, 601, 16, 622, 35, 660, 43, 706, 14],
		"s":["CUDA.", "When", "executing", "a", "program,", "the", "virtual", "machine", "di-"],
		"ss":"CUDA. When executing a program, the virtual machine di-"},
		{"l":73, "t":748, "r":381, "b":759,
		"q":[73, 13, 89, 28, 120, 62, 185, 22, 210, 23, 236, 38, 277, 24, 304, 51, 358, 23],
		"s":["up", "many", "applications", "that", "have", "already", "been", "developed", "with"],
		"ss":"up many applications that have already been developed with"},
		{"l":412, "t":752, "r":720, "b":762,
		"q":[412, 24, 441, 36, 482, 21, 507, 41, 553, 6, 563, 25, 593, 33, 631, 54, 690, 30],
		"s":["rects", "control", "ﬂow", "through", "a", "large", "switch", "statement,", "which"],
		"ss":"rects control ﬂow through a large switch statement, which"},
		{"l":73, "t":762, "r":381, "b":772,
		"q":[73, 54, 133, 25, 162, 13, 179, 44, 227, 31, 262, 17, 284, 12, 300, 24, 329, 14, 348, 13, 364, 16],
		"s":["databases.", "Such", "an", "interface", "would", "not", "be", "ideal", "for", "all", "ap-"],
		"ss":"databases. Such an interface would not be ideal for all ap-"},
		{"l":412, "t":765, "r":694, "b":776,
		"q":[412, 31, 447, 11, 462, 6, 471, 27, 503, 10, 516, 23, 544, 29, 577, 13, 593, 16, 613, 37, 655, 40],
		"s":["jumps", "to", "a", "block", "of", "code", "based", "on", "the", "current", "opcode."],
		"ss":"jumps to a block of code based on the current opcode."},
		{"l":73, "t":775, "r":381, "b":786,
		"q":[73, 53, 130, 19, 154, 31, 190, 20, 215, 16, 236, 61, 301, 65, 371, 10],
		"s":["plications,", "and", "would", "lack", "the", "ﬁne-grained", "optimization", "of"],
		"ss":"plications, and would lack the ﬁne-grained optimization of"},
		{"l":73, "t":789, "r":381, "b":799,
		"q":[73, 16, 92, 53, 147, 48, 198, 52, 253, 18, 273, 28, 304, 12, 319, 62],
		"s":["the", "previously", "discussed", "interfaces,", "but", "could", "be", "signiﬁcantly"],
		"ss":"the previously discussed interfaces, but could be signiﬁcantly"},
		{"l":412, "t":789, "r":516, "b":803,
		"q":[412, 19, 446, 69],
		"s":["3.3", "Usefulness"],
		"ss":"3.3 Usefulness"},
		{"l":73, "t":802, "r":149, "b":813,
		"q":[73, 38, 114, 11, 129, 20],
		"s":["simpler", "to", "use."],
		"ss":"simpler to use."},
		{"l":423, "t":809, "r":720, "b":819,
		"q":[423, 36, 465, 19, 488, 34, 527, 11, 543, 6, 553, 57, 615, 10, 629, 19, 653, 37, 695, 14, 714, 6],
		"s":["SQLite", "was", "chosen", "as", "a", "component", "of", "this", "project", "for", "a"],
		"ss":"SQLite was chosen as a component of this project for a"},
		{"l":412, "t":822, "r":720, "b":833,
		"q":[412, 39, 454, 10, 467, 41, 513, 28, 545, 27, 575, 45, 623, 10, 635, 6, 645, 75],
		"s":["number", "of", "reasons.", "First,", "using", "elements", "of", "a", "well-developed"],
		"ss":"number of reasons. First, using elements of a well-developed"},
		{"l":73, "t":830, "r":157, "b":844,
		"q":[73, 12, 100, 57],
		"s":["3.", "SQLITE"],
		"ss":"3. SQLITE"},
		{"l":412, "t":836, "r":720, "b":846,
		"q":[412, 46, 462, 41, 508, 17, 529, 36, 570, 10, 584, 34, 623, 11, 638, 54, 697, 23],
		"s":["database", "removes", "the", "burden", "of", "having", "to", "implement", "SQL"],
		"ss":"database removes the burden of having to implement SQL"},
		{"l":412, "t":849, "r":720, "b":860,
		"q":[412, 29, 446, 53, 504, 14, 524, 16, 545, 45, 596, 10, 610, 19, 635, 40, 683, 36],
		"s":["query", "processing", "for", "the", "purposes", "of", "this", "project.", "SQLite"],
		"ss":"query processing for the purposes of this project. SQLite"},
		{"l":73, "t":857, "r":170, "b":870,
		"q":[73, 19, 107, 63],
		"s":["3.1", "Overview"],
		"ss":"3.1 Overview"},
		{"l":412, "t":863, "r":720, "b":873,
		"q":[412, 19, 435, 50, 490, 48, 543, 14, 562, 13, 579, 52, 636, 34, 675, 24, 704, 16],
		"s":["was", "attractive", "primarily", "for", "its", "simplicity,", "having", "been", "de-"],
		"ss":"was attractive primarily for its simplicity, having been de-"},
		{"l":84, "t":876, "r":381, "b":886,
		"q":[84, 36, 124, 8, 135, 6, 144, 56, 202, 25, 230, 32, 266, 46, 314, 51, 368, 13],
		"s":["SQLite", "is", "a", "completely", "open", "source", "database", "developed", "by"],
		"ss":"SQLite is a completely open source database developed by"},
		{"l":412, "t":876, "r":720, "b":886,
		"q":[412, 39, 456, 24, 485, 16, 506, 36, 548, 13, 566, 11, 581, 12, 599, 11, 614, 33, 652, 19, 676, 44],
		"s":["veloped", "from", "the", "ground", "up", "to", "be", "as", "simple", "and", "compact"],
		"ss":"veloped from the ground up to be as simple and compact"},
		{"l":73, "t":890, "r":381, "b":900,
		"q":[73, 6, 83, 27, 114, 26, 144, 52, 200, 13, 217, 35, 256, 31, 291, 64, 359, 22],
		"s":["a", "small", "team", "supported", "by", "several", "major", "corporations", "[20]."],
		"ss":"a small team supported by several major corporations [20]."},
		{"l":412, "t":890, "r":720, "b":900,
		"q":[412, 11, 427, 44, 477, 20, 502, 32, 539, 23, 567, 8, 579, 22, 606, 47, 657, 38, 699, 10, 714, 6],
		"s":["as", "possible.", "The", "source", "code", "is", "very", "readable,", "written", "in", "a"],
		"ss":"as possible. The source code is very readable, written in a"},
		{"l":73, "t":903, "r":381, "b":913,
		"q":[73, 14, 90, 65, 158, 26, 187, 32, 223, 22, 248, 36, 288, 8, 299, 16, 319, 25, 348, 33],
		"s":["Its", "development", "team", "claims", "that", "SQLite", "is", "the", "most", "widely"],
		"ss":"Its development team claims that SQLite is the most widely"},
		{"l":412, "t":903, "r":720, "b":913,
		"q":[412, 26, 442, 24, 469, 19, 492, 59, 554, 39, 598, 20, 622, 48, 674, 32, 710, 10],
		"s":["clean", "style", "and", "commented", "heavily.", "The", "serverless", "design", "of"],
		"ss":"clean style and commented heavily. The serverless design of"},
		{"l":73, "t":917, "r":381, "b":927,
		"q":[73, 45, 122, 46, 172, 10, 186, 16, 207, 29, 240, 30, 274, 11, 289, 13, 306, 17, 327, 10, 341, 40],
		"s":["deployed", "database", "in", "the", "world", "owing", "to", "its", "use", "in", "popular"],
		"ss":"deployed database in the world owing to its use in popular"},
		{"l":412, "t":917, "r":720, "b":927,
		"q":[412, 36, 453, 20, 477, 32, 513, 8, 525, 24, 554, 14, 573, 42, 619, 20, 645, 9, 659, 8, 671, 22, 698, 22],
		"s":["SQLite", "also", "makes", "it", "ideal", "for", "research", "use.", "It", "is", "very", "easy"],
		"ss":"SQLite also makes it ideal for research use. It is very easy"},
		{"l":402, "t":1010, "r":414, "b":1020,
		"q":[402, 12],
		"s":["96"],
		"ss":"96"}
	]},
	{"pageNum":4, "pageWidth":816, "pageHeight":1056,
	"blocks":[
		{"l":73, "t":74, "r":381, "b":84,
		"q":[73, 11, 87, 36, 128, 19, 151, 19, 174, 23, 202, 19, 225, 49, 279, 37, 320, 11, 335, 22, 362, 19],
		"s":["to", "modify", "and", "add", "code", "and", "recompile", "quickly", "to", "test,", "and"],
		"ss":"to modify and add code and recompile quickly to test, and"},
		{"l":412, "t":71, "r":502, "b":85,
		"q":[412, 19, 446, 32, 482, 21],
		"s":["4.2", "Data", "Set"],
		"ss":"4.2 Data Set"},
		{"l":73, "t":88, "r":381, "b":98,
		"q":[73, 13, 90, 66, 160, 8, 173, 28, 205, 26, 235, 50, 289, 11, 305, 44, 353, 28],
		"s":["its", "functionality", "is", "much", "more", "accessible", "to", "someone", "inter-"],
		"ss":"its functionality is much more accessible to someone inter-"},
		{"l":423, "t":91, "r":720, "b":101,
		"q":[423, 14, 441, 53, 499, 52, 555, 19, 579, 37, 620, 42, 666, 23, 694, 26],
		"s":["As", "previously", "described,", "this", "project", "assumes", "data", "stays"],
		"ss":"As previously described, this project assumes data stays"},
		{"l":73, "t":101, "r":381, "b":111,
		"q":[73, 26, 104, 10, 119, 54, 179, 32, 215, 23, 244, 29, 278, 49, 332, 11, 348, 33],
		"s":["ested", "in", "comparing", "native", "SQL", "query", "execution", "to", "execu-"],
		"ss":"ested in comparing native SQL query execution to execu-"},
		{"l":412, "t":104, "r":720, "b":115,
		"q":[412, 41, 458, 13, 476, 16, 498, 22, 526, 31, 562, 43, 610, 36, 652, 19, 676, 22, 704, 16],
		"s":["resident", "on", "the", "card", "across", "multiple", "queries", "and", "thus", "ne-"],
		"ss":"resident on the card across multiple queries and thus ne-"},
		{"l":73, "t":115, "r":381, "b":125,
		"q":[73, 20, 97, 13, 113, 16, 133, 30, 166, 67, 236, 16, 257, 36, 296, 32, 332, 23, 359, 8, 371, 10],
		"s":["tion", "on", "the", "GPU.", "Additionally,", "the", "SQLite", "source", "code", "is", "in"],
		"ss":"tion on the GPU. Additionally, the SQLite source code is in"},
		{"l":412, "t":118, "r":720, "b":128,
		"q":[412, 29, 445, 16, 466, 42, 512, 21, 537, 10, 551, 38, 592, 23, 620, 11, 635, 16, 655, 30, 689, 31],
		"s":["glects", "the", "up-front", "cost", "of", "moving", "data", "to", "the", "GPU.", "Based"],
		"ss":"glects the up-front cost of moving data to the GPU. Based"},
		{"l":73, "t":128, "r":381, "b":138,
		"q":[73, 16, 93, 32, 128, 42, 174, 22, 200, 26, 230, 16, 250, 13, 266, 44, 314, 67],
		"s":["the", "public", "domain,", "thus", "there", "are", "no", "licensing", "requirements"],
		"ss":"the public domain, thus there are no licensing requirements"},
		{"l":412, "t":131, "r":720, "b":142,
		"q":[412, 13, 429, 16, 450, 48, 503, 34, 541, 10, 555, 17, 577, 23, 604, 36, 645, 10, 660, 19, 683, 37],
		"s":["on", "the", "read-only", "nature", "of", "the", "SQL", "queries", "in", "this", "project"],
		"ss":"on the read-only nature of the SQL queries in this project"},
		{"l":73, "t":141, "r":381, "b":152,
		"q":[73, 11, 88, 58, 150, 13, 167, 20, 194, 39, 238, 16, 259, 57, 321, 45, 371, 10],
		"s":["or", "restrictions", "on", "use.", "Finally,", "the", "widespread", "adoption", "of"],
		"ss":"or restrictions on use. Finally, the widespread adoption of"},
		{"l":412, "t":145, "r":720, "b":155,
		"q":[412, 19, 436, 16, 457, 74, 536, 10, 550, 16, 571, 35, 611, 69, 685, 35],
		"s":["and", "the", "characteristics", "of", "the", "CUDA", "programming", "model,"],
		"ss":"and the characteristics of the CUDA programming model,"},
		{"l":73, "t":155, "r":381, "b":165,
		"q":[73, 36, 113, 32, 149, 19, 172, 37, 213, 41, 258, 11, 272, 17, 293, 46, 343, 38],
		"s":["SQLite", "makes", "this", "project", "relevant", "to", "the", "industry,", "demon-"],
		"ss":"SQLite makes this project relevant to the industry, demon-"},
		{"l":412, "t":158, "r":720, "b":169,
		"q":[412, 23, 440, 8, 454, 32, 492, 13, 510, 16, 532, 26, 564, 10, 580, 60, 646, 27, 684, 36],
		"s":["data", "is", "stored", "on", "the", "GPU", "in", "row-column", "form.", "SQLite"],
		"ss":"data is stored on the GPU in row-column form. SQLite"},
		{"l":73, "t":168, "r":381, "b":179,
		"q":[73, 40, 118, 22, 145, 28, 179, 93, 277, 36, 319, 62],
		"s":["strating", "that", "many", "already-developed", "SQLite", "applications"],
		"ss":"strating that many already-developed SQLite applications"},
		{"l":412, "t":172, "r":720, "b":182,
		"q":[412, 30, 445, 13, 462, 23, 489, 10, 503, 6, 512, 38, 555, 22, 581, 13, 597, 38, 639, 56, 699, 21],
		"s":["stores", "its", "data", "in", "a", "B-Tree,", "thus", "an", "explicit", "translation", "step"],
		"ss":"stores its data in a B-Tree, thus an explicit translation step"},
		{"l":73, "t":182, "r":381, "b":192,
		"q":[73, 28, 104, 41, 149, 24, 177, 64, 244, 13, 260, 46, 310, 10, 323, 26, 353, 28],
		"s":["could", "improve", "their", "performance", "by", "investing", "in", "GPU", "hard-"],
		"ss":"could improve their performance by investing in GPU hard-"},
		{"l":412, "t":185, "r":720, "b":196,
		"q":[412, 8, 424, 46, 475, 17, 496, 64, 564, 19, 587, 37, 628, 8, 640, 53, 697, 23],
		"s":["is", "required.", "For", "convenience,", "this", "process", "is", "performed", "with"],
		"ss":"is required. For convenience, this process is performed with"},
		{"l":73, "t":195, "r":302, "b":206,
		"q":[73, 24, 101, 19, 124, 46, 174, 6, 183, 31, 219, 39, 262, 10, 275, 27],
		"s":["ware", "and", "changing", "a", "trivial", "amount", "of", "code."],
		"ss":"ware and changing a trivial amount of code."},
		{"l":412, "t":199, "r":720, "b":209,
		"q":[412, 6, 421, 47, 471, 29, 503, 10, 517, 36, 556, 11, 570, 39, 612, 6, 621, 32, 657, 10, 669, 23, 696, 24],
		"s":["a", "SELECT", "query", "in", "SQLite", "to", "retrieve", "a", "subset", "of", "data", "from"],
		"ss":"a SELECT query in SQLite to retrieve a subset of data from"},
		{"l":84, "t":209, "r":381, "b":219,
		"q":[84, 27, 115, 13, 132, 66, 201, 59, 264, 36, 304, 8, 316, 30, 350, 14, 368, 13],
		"s":["From", "an", "architectural", "standpoint,", "SQLite", "is", "useful", "for", "its"],
		"ss":"From an architectural standpoint, SQLite is useful for its"},
		{"l":412, "t":212, "r":560, "b":223,
		"q":[412, 16, 432, 47, 483, 25, 512, 49],
		"s":["the", "currently", "open", "database."],
		"ss":"the currently open database."},
		{"l":73, "t":222, "r":381, "b":233,
		"q":[73, 24, 101, 116, 226, 14, 244, 50, 299, 48, 352, 8, 365, 16],
		"s":["rigid", "compartmentalization.", "Its", "command", "processor", "is", "en-"],
		"ss":"rigid compartmentalization. Its command processor is en-"},
		{"l":423, "t":226, "r":720, "b":236,
		"q":[423, 20, 449, 27, 482, 32, 520, 26, 552, 23, 581, 14, 601, 65, 672, 17, 695, 6, 707, 13],
		"s":["The", "Tesla", "C1060", "GPU", "used", "for", "development", "has", "4", "gi-"],
		"ss":"The Tesla C1060 GPU used for development has 4 gi-"},
		{"l":73, "t":236, "r":381, "b":246,
		"q":[73, 27, 105, 43, 153, 24, 182, 16, 203, 35, 243, 46, 294, 30, 329, 8, 342, 39],
		"s":["tirely", "separate", "from", "the", "virtual", "machine,", "which", "is", "entirely"],
		"ss":"tirely separate from the virtual machine, which is entirely"},
		{"l":412, "t":239, "r":720, "b":250,
		"q":[412, 39, 456, 10, 471, 31, 507, 44, 556, 22, 584, 35, 624, 16, 646, 30, 681, 24, 710, 10],
		"s":["gabytes", "of", "global", "memory,", "thus", "setting", "the", "upper", "limit", "of"],
		"ss":"gabytes of global memory, thus setting the upper limit of"},
		{"l":73, "t":249, "r":381, "b":260,
		"q":[73, 43, 122, 24, 152, 17, 174, 21, 201, 15, 222, 23, 251, 19, 277, 16, 299, 42, 347, 34],
		"s":["separate", "from", "the", "disk", "i/o", "code", "and", "the", "memory", "alloca-"],
		"ss":"separate from the disk i/o code and the memory alloca-"},
		{"l":412, "t":253, "r":720, "b":263,
		"q":[412, 23, 439, 15, 458, 19, 480, 40, 525, 38, 567, 23, 594, 13, 611, 19, 634, 13, 651, 16, 672, 22, 698, 22],
		"s":["data", "set", "size", "without", "moving", "data", "on", "and", "oﬀ", "the", "card", "dur-"],
		"ss":"data set size without moving data on and oﬀ the card dur-"},
		{"l":73, "t":263, "r":381, "b":273,
		"q":[73, 20, 99, 27, 132, 23, 160, 22, 188, 18, 212, 10, 227, 26, 259, 30, 295, 18, 319, 12, 337, 44],
		"s":["tion", "code,", "such", "that", "any", "of", "these", "pieces", "can", "be", "swapped"],
		"ss":"tion code, such that any of these pieces can be swapped"},
		{"l":412, "t":266, "r":720, "b":276,
		"q":[412, 16, 432, 29, 465, 52, 525, 25, 554, 22, 580, 10, 595, 43, 642, 11, 657, 16, 678, 23, 705, 15],
		"s":["ing", "query", "execution.", "Note", "that", "in", "addition", "to", "the", "data", "set"],
		"ss":"ing query execution. Note that in addition to the data set"},
		{"l":73, "t":276, "r":381, "b":287,
		"q":[73, 17, 93, 14, 111, 37, 152, 27, 184, 51, 238, 19, 261, 32, 297, 8, 308, 41, 353, 11, 367, 14],
		"s":["out", "for", "custom", "code.", "Critically,", "this", "makes", "it", "possible", "to", "re-"],
		"ss":"out for custom code. Critically, this makes it possible to re-"},
		{"l":412, "t":280, "r":720, "b":290,
		"q":[412, 34, 450, 13, 467, 16, 489, 30, 523, 26, 554, 25, 585, 12, 601, 40, 646, 42, 693, 27],
		"s":["loaded", "on", "the", "GPU,", "there", "must", "be", "another", "memory", "block"],
		"ss":"loaded on the GPU, there must be another memory block"},
		{"l":73, "t":290, "r":381, "b":300,
		"q":[73, 54, 131, 17, 152, 35, 191, 43, 238, 11, 253, 18, 276, 16, 297, 36, 337, 44],
		"s":["implement", "the", "virtual", "machine", "to", "run", "the", "opcode", "program"],
		"ss":"implement the virtual machine to run the opcode program"},
		{"l":412, "t":293, "r":720, "b":303,
		"q":[412, 46, 462, 11, 476, 25, 504, 16, 524, 29, 557, 18, 580, 26, 609, 10, 622, 26, 652, 32, 687, 16, 707, 13],
		"s":["allocated", "to", "store", "the", "result", "set.", "Both", "of", "these", "blocks", "are", "al-"],
		"ss":"allocated to store the result set. Both of these blocks are al-"},
		{"l":73, "t":303, "r":171, "b":314,
		"q":[73, 13, 89, 26, 119, 51],
		"s":["on", "GPU", "hardware."],
		"ss":"on GPU hardware."},
		{"l":412, "t":307, "r":720, "b":317,
		"q":[412, 37, 452, 34, 489, 16, 509, 65, 578, 10, 591, 16, 611, 47, 663, 11, 677, 43],
		"s":["located", "during", "the", "initialization", "of", "the", "program.", "In", "addition"],
		"ss":"located during the initialization of the program. In addition"},
		{"l":84, "t":317, "r":381, "b":327,
		"q":[84, 9, 96, 51, 149, 10, 162, 36, 201, 8, 212, 22, 236, 13, 251, 48, 303, 32, 338, 32, 373, 8],
		"s":["A", "limitation", "of", "SQLite", "is", "that", "its", "serverless", "design", "means", "it"],
		"ss":"A limitation of SQLite is that its serverless design means it"},
		{"l":412, "t":320, "r":720, "b":330,
		"q":[412, 11, 427, 54, 486, 26, 516, 23, 544, 23, 572, 11, 587, 16, 609, 19, 632, 10, 646, 16, 668, 31, 703, 16],
		"s":["to", "allocation,", "meta", "data", "such", "as", "the", "size", "of", "the", "block,", "the"],
		"ss":"to allocation, meta data such as the size of the block, the"},
		{"l":73, "t":330, "r":381, "b":341,
		"q":[73, 8, 84, 17, 105, 66, 175, 11, 189, 22, 214, 52, 270, 10, 283, 43, 329, 29, 363, 18],
		"s":["is", "not", "implemented", "to", "take", "advantage", "of", "multiple", "cores.", "Be-"],
		"ss":"is not implemented to take advantage of multiple cores. Be-"},
		{"l":412, "t":334, "r":720, "b":344,
		"q":[412, 39, 454, 10, 467, 23, 494, 10, 507, 16, 527, 31, 561, 16, 581, 29, 614, 10, 627, 16, 647, 31, 681, 19, 703, 16],
		"s":["number", "of", "rows", "in", "the", "block,", "the", "stride", "of", "the", "block,", "and", "the"],
		"ss":"number of rows in the block, the stride of the block, and the"},
		{"l":73, "t":344, "r":381, "b":354,
		"q":[73, 28, 104, 8, 115, 29, 148, 29, 180, 11, 194, 6, 204, 22, 229, 10, 242, 40, 285, 52, 340, 41],
		"s":["cause", "it", "exists", "solely", "as", "a", "part", "of", "another", "program’s", "process,"],
		"ss":"cause it exists solely as a part of another program’s process,"},
		{"l":412, "t":347, "r":662, "b":357,
		"q":[412, 19, 434, 10, 448, 23, 474, 38, 516, 25, 545, 12, 561, 47, 613, 49],
		"s":["size", "of", "each", "column", "must", "be", "explicitly", "managed."],
		"ss":"size of each column must be explicitly managed."},
		{"l":73, "t":357, "r":381, "b":368,
		"q":[73, 49, 125, 8, 136, 51, 190, 39, 231, 37, 271, 40, 314, 36, 353, 8, 364, 17],
		"s":["threading", "is", "controlled", "entirely", "outside", "SQLite,", "though", "it", "has"],
		"ss":"threading is controlled entirely outside SQLite, though it has"},
		{"l":73, "t":371, "r":381, "b":381,
		"q":[73, 24, 101, 38, 143, 11, 157, 12, 174, 60, 240, 23, 268, 51, 322, 32, 359, 22],
		"s":["been", "written", "to", "be", "thread-safe.", "This", "limitation", "means", "that"],
		"ss":"been written to be thread-safe. This limitation means that"},
		{"l":412, "t":371, "r":551, "b":385,
		"q":[412, 19, 446, 56, 507, 45],
		"s":["4.3", "Memory", "Spaces"],
		"ss":"4.3 Memory Spaces"},
		{"l":73, "t":384, "r":381, "b":395,
		"q":[73, 26, 103, 8, 115, 13, 132, 33, 169, 20, 193, 11, 207, 44, 255, 36, 296, 36, 336, 45],
		"s":["there", "is", "no", "simple", "way", "to", "compare", "SQLite", "queries", "executed"],
		"ss":"there is no simple way to compare SQLite queries executed"},
		{"l":423, "t":391, "r":720, "b":401,
		"q":[423, 23, 450, 37, 491, 46, 541, 11, 556, 32, 592, 16, 612, 42, 658, 48, 710, 10],
		"s":["This", "project", "attempts", "to", "utilize", "the", "memory", "heirarchy", "of"],
		"ss":"This project attempts to utilize the memory heirarchy of"},
		{"l":73, "t":398, "r":381, "b":408,
		"q":[73, 13, 90, 6, 101, 29, 135, 21, 160, 11, 176, 36, 217, 36, 258, 51, 313, 14, 332, 48],
		"s":["on", "a", "single", "core", "to", "SQLite", "queries", "optimized", "for", "multicore"],
		"ss":"on a single core to SQLite queries optimized for multicore"},
		{"l":412, "t":404, "r":720, "b":415,
		"q":[412, 16, 433, 35, 473, 69, 547, 31, 584, 11, 599, 13, 617, 17, 638, 36, 679, 41],
		"s":["the", "CUDA", "programming", "model", "to", "its", "full", "extent,", "employ-"],
		"ss":"the CUDA programming model to its full extent, employ-"},
		{"l":73, "t":411, "r":291, "b":422,
		"q":[73, 50, 128, 23, 155, 8, 167, 13, 184, 22, 210, 14, 228, 31, 263, 28],
		"s":["machines.", "This", "is", "an", "area", "for", "future", "work."],
		"ss":"machines. This is an area for future work."},
		{"l":412, "t":418, "r":720, "b":428,
		"q":[412, 16, 431, 42, 476, 37, 516, 47, 566, 27, 597, 19, 619, 31, 653, 42, 698, 22],
		"s":["ing", "register,", "shared,", "constant,", "local,", "and", "global", "memory", "[19]."],
		"ss":"ing register, shared, constant, local, and global memory [19]."},
		{"l":412, "t":431, "r":720, "b":441,
		"q":[412, 42, 458, 42, 504, 27, 536, 75, 615, 42, 661, 23, 688, 11, 703, 17],
		"s":["Register", "memory", "holds", "thread-speciﬁc", "memory", "such", "as", "oﬀ-"],
		"ss":"Register memory holds thread-speciﬁc memory such as oﬀ-"},
		{"l":73, "t":448, "r":244, "b":462,
		"q":[73, 12, 100, 144],
		"s":["4.", "IMPLEMENTATION"],
		"ss":"4. IMPLEMENTATION"},
		{"l":412, "t":445, "r":720, "b":455,
		"q":[412, 19, 435, 10, 450, 16, 471, 23, 498, 19, 522, 34, 560, 35, 602, 36, 642, 44, 691, 29],
		"s":["sets", "in", "the", "data", "and", "results", "blocks.", "Shared", "memory,", "mem-"],
		"ss":"sets in the data and results blocks. Shared memory, mem-"},
		{"l":412, "t":458, "r":720, "b":468,
		"q":[412, 17, 434, 34, 472, 34, 512, 13, 529, 38, 573, 10, 588, 16, 609, 34, 648, 31, 684, 8, 697, 23],
		"s":["ory", "shared", "among", "all", "threads", "in", "the", "thread", "block,", "is", "used"],
		"ss":"ory shared among all threads in the thread block, is used"},
		{"l":412, "t":472, "r":720, "b":482,
		"q":[412, 11, 426, 54, 484, 38, 525, 34, 562, 16, 582, 49, 635, 29, 667, 10, 680, 16, 700, 20],
		"s":["to", "coordinate", "threads", "during", "the", "reduction", "phase", "of", "the", "ker-"],
		"ss":"to coordinate threads during the reduction phase of the ker-"},
		{"l":73, "t":479, "r":146, "b":493,
		"q":[73, 19, 107, 39],
		"s":["4.1", "Scope"],
		"ss":"4.1 Scope"},
		{"l":412, "t":485, "r":720, "b":495,
		"q":[412, 15, 431, 52, 488, 10, 502, 30, 536, 23, 563, 34, 601, 23, 628, 6, 638, 29, 671, 19, 694, 25],
		"s":["nel", "execution,", "in", "which", "each", "thread", "with", "a", "result", "row", "must"],
		"ss":"nel execution, in which each thread with a result row must"},
		{"l":84, "t":498, "r":381, "b":509,
		"q":[84, 30, 117, 16, 137, 28, 168, 10, 180, 24, 207, 46, 255, 36, 294, 19, 316, 46, 364, 16],
		"s":["Given", "the", "range", "of", "both", "database", "queries", "and", "database", "ap-"],
		"ss":"Given the range of both database queries and database ap-"},
		{"l":412, "t":499, "r":720, "b":509,
		"q":[412, 23, 439, 22, 465, 11, 480, 6, 490, 35, 529, 41, 575, 10, 589, 16, 610, 29, 643, 23, 671, 18, 695, 25],
		"s":["emit", "that", "to", "a", "unique", "location", "in", "the", "result", "data", "set.", "Con-"],
		"ss":"emit that to a unique location in the result data set. Con-"},
		{"l":73, "t":512, "r":381, "b":522,
		"q":[73, 49, 127, 19, 151, 16, 172, 55, 232, 10, 247, 35, 287, 68, 360, 8, 373, 8],
		"s":["plications", "and", "the", "limitations", "of", "CUDA", "development,", "it", "is"],
		"ss":"plications and the limitations of CUDA development, it is"},
		{"l":412, "t":512, "r":720, "b":522,
		"q":[412, 26, 444, 42, 491, 8, 505, 60, 571, 30, 607, 14, 627, 19, 652, 37, 695, 25],
		"s":["stant", "memory", "is", "particularly", "useful", "for", "this", "project", "since"],
		"ss":"stant memory is particularly useful for this project since"},
		{"l":73, "t":525, "r":381, "b":536,
		"q":[73, 49, 124, 11, 138, 30, 171, 16, 191, 28, 222, 10, 234, 10, 247, 19, 269, 40, 314, 16, 333, 47],
		"s":["necessary", "to", "deﬁne", "the", "scope", "of", "of", "this", "project.", "We", "explicitly"],
		"ss":"necessary to deﬁne the scope of of this project. We explicitly"},
		{"l":412, "t":525, "r":720, "b":536,
		"q":[412, 8, 425, 8, 438, 23, 466, 11, 482, 25, 512, 16, 534, 36, 576, 44, 624, 45, 675, 13, 693, 27],
		"s":["it", "is", "used", "to", "store", "the", "opcode", "program", "executed", "by", "every"],
		"ss":"it is used to store the opcode program executed by every"},
		{"l":73, "t":539, "r":381, "b":549,
		"q":[73, 31, 107, 62, 172, 22, 197, 18, 218, 47, 268, 36, 307, 43, 353, 28],
		"s":["target", "applications", "that", "run", "SELECT", "queries", "multiple", "times"],
		"ss":"target applications that run SELECT queries multiple times"},
		{"l":412, "t":539, "r":720, "b":549,
		"q":[412, 37, 456, 9, 469, 8, 482, 20, 506, 23, 534, 11, 549, 25, 579, 23, 607, 15, 626, 26, 656, 64],
		"s":["thread.", "It", "is", "also", "used", "to", "store", "data", "set", "meta", "information,"],
		"ss":"thread. It is also used to store data set meta information,"},
		{"l":73, "t":552, "r":381, "b":563,
		"q":[73, 13, 89, 16, 110, 26, 139, 42, 186, 23, 213, 18, 236, 20, 261, 47, 312, 29, 345, 36],
		"s":["on", "the", "same", "mid-size", "data", "set.", "The", "SELECT", "query", "qualiﬁ-"],
		"ss":"on the same mid-size data set. The SELECT query qualiﬁ-"},
		{"l":412, "t":552, "r":720, "b":563,
		"q":[412, 47, 463, 38, 505, 27, 536, 19, 559, 38, 602, 27, 633, 16, 653, 44, 701, 19],
		"s":["including", "column", "types", "and", "widths.", "Since", "the", "program", "and"],
		"ss":"including column types and widths. Since the program and"},
		{"l":73, "t":566, "r":381, "b":576,
		"q":[73, 32, 108, 32, 144, 22, 169, 16, 189, 26, 219, 8, 230, 23, 257, 14, 274, 48, 326, 26, 358, 23],
		"s":["cation", "means", "that", "the", "GPU", "is", "used", "for", "read-only", "data.", "This"],
		"ss":"cation means that the GPU is used for read-only data. This"},
		{"l":412, "t":566, "r":720, "b":576,
		"q":[412, 19, 435, 23, 463, 15, 482, 60, 546, 8, 559, 43, 606, 22, 632, 52, 689, 31],
		"s":["this", "data", "set", "information", "is", "accessed", "very", "frequently", "across"],
		"ss":"this data set information is accessed very frequently across"},
		{"l":73, "t":579, "r":381, "b":590,
		"q":[73, 38, 115, 16, 137, 26, 168, 11, 184, 49, 238, 13, 256, 55, 316, 14, 335, 19, 360, 21],
		"s":["enables", "the", "GPU", "to", "maximize", "its", "bandwidth", "for", "this", "case"],
		"ss":"enables the GPU to maximize its bandwidth for this case"},
		{"l":412, "t":579, "r":720, "b":590,
		"q":[412, 13, 428, 42, 473, 44, 521, 42, 567, 62, 632, 38, 674, 16, 694, 25],
		"s":["all", "threads,", "constant", "memory", "signiﬁcantly", "reduces", "the", "over-"],
		"ss":"all threads, constant memory signiﬁcantly reduces the over-"},
		{"l":73, "t":593, "r":381, "b":603,
		"q":[73, 19, 97, 52, 154, 36, 194, 46, 245, 24, 273, 10, 288, 60, 354, 27],
		"s":["and", "predicates", "storing", "database", "rows", "in", "row-column", "form."],
		"ss":"and predicates storing database rows in row-column form."},
		{"l":412, "t":593, "r":720, "b":603,
		"q":[412, 24, 440, 22, 467, 31, 502, 12, 518, 43, 565, 7, 577, 19, 600, 60, 665, 19, 688, 32],
		"s":["head", "that", "would", "be", "incurred", "if", "this", "information", "was", "stored"],
		"ss":"head that would be incurred if this information was stored"},
		{"l":73, "t":606, "r":381, "b":617,
		"q":[73, 20, 96, 46, 145, 31, 178, 64, 245, 32, 280, 22, 305, 16, 324, 37, 364, 17],
		"s":["The", "’multiple", "times’", "qualiﬁcation", "means", "that", "the", "project", "has"],
		"ss":"The ’multiple times’ qualiﬁcation means that the project has"},
		{"l":412, "t":606, "r":505, "b":617,
		"q":[412, 10, 426, 31, 460, 44],
		"s":["in", "global", "memory."],
		"ss":"in global memory."},
		{"l":73, "t":620, "r":381, "b":630,
		"q":[73, 24, 101, 44, 150, 23, 177, 22, 203, 23, 231, 36, 271, 16, 291, 45, 341, 13, 358, 23],
		"s":["been", "designed", "such", "that", "SQL", "queries", "are", "executed", "on", "data"],
		"ss":"been designed such that SQL queries are executed on data"},
		{"l":423, "t":620, "r":720, "b":630,
		"q":[423, 34, 463, 42, 509, 8, 522, 55, 582, 23, 610, 11, 626, 25, 656, 17, 677, 23, 705, 15],
		"s":["Global", "memory", "is", "necessarily", "used", "to", "store", "the", "data", "set"],
		"ss":"Global memory is necessarily used to store the data set"},
		{"l":73, "t":633, "r":381, "b":644,
		"q":[73, 38, 115, 41, 161, 13, 178, 16, 199, 26, 232, 9, 246, 31, 281, 54, 339, 11, 355, 26],
		"s":["already", "resident", "on", "the", "card.", "A", "major", "bottleneck", "to", "GPU"],
		"ss":"already resident on the card. A major bottleneck to GPU"},
		{"l":412, "t":633, "r":720, "b":644,
		"q":[412, 13, 428, 30, 462, 16, 482, 29, 514, 8, 526, 28, 558, 56, 619, 34, 657, 42, 703, 17],
		"s":["on", "which", "the", "query", "is", "being", "performed.", "Global", "memory", "has"],
		"ss":"on which the query is being performed. Global memory has"},
		{"l":73, "t":647, "r":381, "b":657,
		"q":[73, 23, 100, 53, 158, 8, 171, 16, 192, 21, 218, 10, 232, 38, 274, 23, 302, 42, 349, 32],
		"s":["data", "processing", "is", "the", "cost", "of", "moving", "data", "between", "device"],
		"ss":"data processing is the cost of moving data between device"},
		{"l":412, "t":647, "r":720, "b":657,
		"q":[412, 62, 478, 32, 515, 37, 557, 24, 585, 38, 628, 11, 643, 44, 691, 29],
		"s":["signiﬁcantly", "higher", "latency", "than", "register", "or", "constant", "mem-"],
		"ss":"signiﬁcantly higher latency than register or constant mem-"},
		{"l":73, "t":660, "r":381, "b":671,
		"q":[73, 19, 95, 22, 121, 44, 170, 15, 189, 38, 230, 6, 240, 27, 271, 10, 284, 23, 311, 20, 334, 16, 355, 26],
		"s":["and", "host", "memory.", "By", "moving", "a", "block", "of", "data", "into", "the", "GPU"],
		"ss":"and host memory. By moving a block of data into the GPU"},
		{"l":412, "t":660, "r":720, "b":671,
		"q":[412, 19, 436, 22, 464, 13, 481, 60, 547, 27, 579, 24, 608, 16, 629, 29, 664, 23, 692, 15, 712, 8],
		"s":["ory,", "thus", "no", "information", "other", "than", "the", "entire", "data", "set", "is"],
		"ss":"ory, thus no information other than the entire data set is"},
		{"l":73, "t":674, "r":381, "b":684,
		"q":[73, 42, 119, 19, 142, 49, 195, 43, 241, 39, 285, 16, 305, 21, 330, 10, 343, 38],
		"s":["memory", "and", "executing", "multiple", "queries,", "the", "cost", "of", "loading"],
		"ss":"memory and executing multiple queries, the cost of loading"},
		{"l":412, "t":674, "r":720, "b":684,
		"q":[412, 32, 447, 10, 461, 31, 495, 44, 543, 23, 570, 18, 591, 39, 634, 52, 692, 28],
		"s":["stored", "in", "global", "memory,", "with", "one", "esoteric", "exception.", "Local"],
		"ss":"stored in global memory, with one esoteric exception. Local"},
		{"l":73, "t":687, "r":381, "b":698,
		"q":[73, 23, 100, 8, 113, 51, 169, 51, 225, 11, 240, 14, 258, 39, 301, 26, 331, 19, 355, 26],
		"s":["data", "is", "eﬀectively", "amortized", "as", "we", "execute", "more", "and", "more"],
		"ss":"data is eﬀectively amortized as we execute more and more"},
		{"l":412, "t":687, "r":720, "b":698,
		"q":[412, 42, 457, 8, 468, 13, 484, 58, 545, 10, 558, 16, 578, 35, 616, 69, 689, 31],
		"s":["memory", "is", "an", "abstraction", "in", "the", "CUDA", "programming", "model"],
		"ss":"memory is an abstraction in the CUDA programming model"},
		{"l":73, "t":701, "r":381, "b":711,
		"q":[73, 39, 116, 22, 142, 16, 162, 21, 186, 8, 198, 35, 236, 42, 283, 39, 326, 6, 335, 46],
		"s":["queries,", "thus", "the", "cost", "is", "mostly", "ignored.", "Finally,", "a", "’mid-size"],
		"ss":"queries, thus the cost is mostly ignored. Finally, a ’mid-size"},
		{"l":412, "t":701, "r":720, "b":711,
		"q":[412, 22, 437, 32, 473, 42, 518, 33, 555, 17, 574, 28, 606, 10, 619, 6, 628, 29, 661, 34, 698, 22],
		"s":["that", "means", "memory", "within", "the", "scope", "of", "a", "single", "thread", "that"],
		"ss":"that means memory within the scope of a single thread that"},
		{"l":73, "t":714, "r":381, "b":725,
		"q":[73, 23, 101, 18, 124, 8, 137, 37, 179, 23, 207, 11, 222, 32, 259, 16, 280, 46, 331, 10, 346, 35],
		"s":["data", "set’", "is", "enough", "data", "to", "ignore", "the", "overhead", "of", "setting"],
		"ss":"data set’ is enough data to ignore the overhead of setting"},
		{"l":412, "t":714, "r":720, "b":725,
		"q":[412, 8, 424, 32, 461, 10, 475, 16, 496, 31, 532, 42, 578, 31, 616, 26, 647, 35, 686, 34],
		"s":["is", "stored", "in", "the", "global", "memory", "space.", "Each", "CUDA", "thread"],
		"ss":"is stored in the global memory space. Each CUDA thread"},
		{"l":73, "t":728, "r":381, "b":738,
		"q":[73, 13, 91, 19, 114, 34, 153, 6, 163, 35, 203, 31, 239, 18, 261, 18, 284, 24, 312, 16, 334, 33, 371, 10],
		"s":["up", "and", "calling", "a", "CUDA", "kernel", "but", "less", "than", "the", "ceiling", "of"],
		"ss":"up and calling a CUDA kernel but less than the ceiling of"},
		{"l":412, "t":728, "r":720, "b":738,
		"q":[412, 27, 442, 8, 452, 36, 491, 11, 505, 12, 519, 46, 568, 10, 580, 38, 621, 45, 671, 27, 701, 19],
		"s":["block", "is", "limited", "to", "16", "kilobytes", "of", "register", "memory:", "when", "this"],
		"ss":"block is limited to 16 kilobytes of register memory: when this"},
		{"l":73, "t":741, "r":381, "b":752,
		"q":[73, 24, 102, 26, 132, 44, 184, 11, 199, 44, 248, 19, 272, 37, 313, 19, 337, 44],
		"s":["total", "GPU", "memory.", "In", "practice,", "this", "project", "was", "designed"],
		"ss":"total GPU memory. In practice, this project was designed"},
		{"l":412, "t":741, "r":720, "b":752,
		"q":[412, 24, 440, 35, 480, 16, 501, 44, 549, 71, 625, 31, 660, 45, 710, 10],
		"s":["limit", "broken", "the", "compiler", "automatically", "places", "variables", "in"],
		"ss":"limit broken the compiler automatically places variables in"},
		{"l":73, "t":755, "r":340, "b":765,
		"q":[73, 19, 96, 31, 131, 27, 162, 18, 183, 19, 207, 18, 228, 36, 268, 19, 291, 23, 318, 23],
		"s":["and", "tested", "using", "one", "and", "ﬁve", "million", "row", "data", "sets."],
		"ss":"and tested using one and ﬁve million row data sets."},
		{"l":412, "t":755, "r":720, "b":765,
		"q":[412, 24, 441, 44, 494, 28, 528, 42, 575, 8, 588, 20, 613, 23, 642, 14, 661, 32, 698, 22],
		"s":["local", "memory.", "Local", "memory", "is", "also", "used", "for", "arrays", "that"],
		"ss":"local memory. Local memory is also used for arrays that"},
		{"l":84, "t":768, "r":381, "b":779,
		"q":[84, 23, 113, 37, 155, 22, 182, 59, 246, 40, 292, 14, 311, 41, 358, 23],
		"s":["This", "project", "only", "implements", "support", "for", "numeric", "data"],
		"ss":"This project only implements support for numeric data"},
		{"l":412, "t":768, "r":720, "b":779,
		"q":[412, 16, 432, 43, 479, 13, 496, 45, 546, 17, 567, 34, 605, 11, 620, 40, 664, 26, 697, 23],
		"s":["are", "accessed", "by", "variables", "not", "known", "at", "compile", "time.", "This"],
		"ss":"are accessed by variables not known at compile time. This"},
		{"l":73, "t":782, "r":381, "b":792,
		"q":[73, 31, 109, 40, 152, 30, 186, 19, 209, 22, 235, 27, 266, 16, 286, 45, 335, 22, 360, 21],
		"s":["types.", "Though", "string", "and", "blob", "types", "are", "certainly", "very", "use-"],
		"ss":"types. Though string and blob types are certainly very use-"},
		{"l":412, "t":782, "r":720, "b":792,
		"q":[412, 8, 424, 6, 435, 52, 492, 51, 547, 25, 576, 16, 597, 36, 638, 35, 677, 43],
		"s":["is", "a", "signiﬁcant", "limitation", "since", "the", "SQLite", "virtual", "machine"],
		"ss":"is a signiﬁcant limitation since the SQLite virtual machine"},
		{"l":73, "t":795, "r":381, "b":806,
		"q":[73, 14, 90, 45, 139, 10, 152, 27, 183, 10, 197, 41, 241, 35, 281, 23, 308, 36, 347, 13, 364, 17],
		"s":["ful", "elements", "of", "SQL,", "in", "practice", "serious", "data", "mining", "on", "un-"],
		"ss":"ful elements of SQL, in practice serious data mining on un-"},
		{"l":412, "t":795, "r":720, "b":806,
		"q":[412, 43, 459, 16, 478, 32, 514, 10, 528, 13, 544, 29, 579, 23, 606, 51, 660, 8, 672, 48],
		"s":["registers", "are", "stored", "in", "an", "array.", "This", "limitation", "is", "discussed"],
		"ss":"registers are stored in an array. This limitation is discussed"},
		{"l":73, "t":809, "r":381, "b":819,
		"q":[73, 54, 131, 23, 159, 8, 173, 26, 204, 29, 238, 11, 254, 54, 313, 23, 341, 40],
		"s":["structured", "data", "is", "often", "easier", "to", "implement", "with", "another"],
		"ss":"structured data is often easier to implement with another"},
		{"l":412, "t":809, "r":531, "b":819,
		"q":[412, 10, 426, 36, 465, 29, 498, 33],
		"s":["in", "further", "detail", "below."],
		"ss":"in further detail below."},
		{"l":73, "t":822, "r":381, "b":833,
		"q":[73, 52, 132, 36, 173, 20, 198, 29, 231, 17, 252, 66, 323, 30, 358, 23],
		"s":["paradigm.", "Strings", "also", "break", "the", "ﬁxed-column", "width", "data"],
		"ss":"paradigm. Strings also break the ﬁxed-column width data"},
		{"l":423, "t":822, "r":720, "b":833,
		"q":[423, 25, 452, 22, 477, 37, 518, 42, 563, 8, 575, 17, 596, 23, 623, 14, 640, 23, 667, 15, 685, 34],
		"s":["Note", "that", "texture", "memory", "is", "not", "used", "for", "data", "set", "access."],
		"ss":"Note that texture memory is not used for data set access."},
		{"l":73, "t":836, "r":381, "b":846,
		"q":[73, 65, 142, 23, 169, 14, 188, 19, 211, 40, 255, 19, 279, 60, 344, 37],
		"s":["arrangement", "used", "for", "this", "project,", "and", "transferring", "charac-"],
		"ss":"arrangement used for this project, and transferring charac-"},
		{"l":412, "t":836, "r":720, "b":846,
		"q":[412, 40, 457, 42, 504, 21, 529, 11, 545, 6, 556, 18, 579, 11, 594, 26, 626, 61, 692, 28],
		"s":["Texture", "memory", "acts", "as", "a", "one", "to", "three", "dimensional", "cache"],
		"ss":"Texture memory acts as a one to three dimensional cache"},
		{"l":73, "t":849, "r":381, "b":860,
		"q":[73, 15, 92, 42, 138, 24, 166, 16, 187, 22, 213, 11, 228, 32, 264, 8, 277, 6, 287, 37, 328, 52],
		"s":["ter", "pointers", "from", "the", "host", "to", "device", "is", "a", "tedious", "operation."],
		"ss":"ter pointers from the host to device is a tedious operation."},
		{"l":412, "t":849, "r":720, "b":860,
		"q":[412, 14, 429, 47, 480, 31, 514, 42, 560, 19, 582, 18, 604, 62, 669, 51],
		"s":["for", "accessing", "global", "memory", "and", "can", "signiﬁcantly", "accelerate"],
		"ss":"for accessing global memory and can signiﬁcantly accelerate"},
		{"l":73, "t":863, "r":381, "b":873,
		"q":[73, 20, 98, 41, 144, 23, 171, 27, 204, 52, 260, 37, 302, 12, 318, 15, 338, 43],
		"s":["The", "numeric", "data", "types", "supported", "include", "32", "bit", "integers,"],
		"ss":"The numeric data types supported include 32 bit integers,"},
		{"l":412, "t":863, "r":720, "b":873,
		"q":[412, 36, 452, 84, 544, 87, 635, 58, 698, 22],
		"s":["certain", "applications[19].", "Experimentation", "determined", "that"],
		"ss":"certain applications[19]. Experimentation determined that"},
		{"l":73, "t":876, "r":381, "b":887,
		"q":[73, 12, 89, 15, 108, 29, 141, 18, 164, 39, 207, 27, 239, 35, 278, 12, 295, 15, 314, 43, 362, 19],
		"s":["32", "bit", "IEEE", "754", "ﬂoating", "point", "values,", "64", "bit", "integers,", "and"],
		"ss":"32 bit IEEE 754 ﬂoating point values, 64 bit integers, and"},
		{"l":412, "t":876, "r":720, "b":887,
		"q":[412, 27, 443, 37, 485, 42, 531, 19, 554, 13, 571, 27, 602, 13, 619, 29, 653, 67],
		"s":["using", "texture", "memory", "had", "no", "eﬀect", "on", "query", "performance."],
		"ss":"using texture memory had no eﬀect on query performance."},
		{"l":73, "t":890, "r":381, "b":900,
		"q":[73, 12, 88, 15, 107, 29, 139, 18, 160, 34, 198, 46, 248, 35, 288, 45, 337, 26, 367, 14],
		"s":["64", "bit", "IEEE", "754", "double", "precision", "values.", "Relaxing", "these", "re-"],
		"ss":"64 bit IEEE 754 double precision values. Relaxing these re-"},
		{"l":412, "t":890, "r":720, "b":900,
		"q":[412, 30, 446, 16, 465, 35, 504, 38, 546, 14, 564, 22, 591, 28, 623, 16, 644, 31, 678, 23, 705, 15],
		"s":["There", "are", "several", "reasons", "for", "this.", "First,", "the", "global", "data", "set"],
		"ss":"There are several reasons for this. First, the global data set"},
		{"l":73, "t":903, "r":260, "b":914,
		"q":[73, 48, 124, 8, 136, 13, 153, 22, 178, 14, 196, 31, 232, 28],
		"s":["strictions", "is", "an", "area", "for", "future", "work."],
		"ss":"strictions is an area for future work."},
		{"l":412, "t":903, "r":720, "b":914,
		"q":[412, 8, 423, 43, 469, 48, 519, 64, 587, 23, 613, 8, 624, 34, 660, 20, 683, 36],
		"s":["is", "accessed", "relatively", "infrequently,", "data", "is", "loaded", "into", "SQLite"],
		"ss":"is accessed relatively infrequently, data is loaded into SQLite"},
		{"l":412, "t":917, "r":720, "b":927,
		"q":[412, 43, 460, 32, 497, 8, 510, 8, 524, 68, 601, 28, 635, 37, 678, 42],
		"s":["registers", "before", "it", "is", "manipulated.", "Next,", "texture", "memory"],
		"ss":"registers before it is manipulated. Next, texture memory"},
		{"l":402, "t":1010, "r":414, "b":1020,
		"q":[402, 12],
		"s":["97"],
		"ss":"97"}
	]},
	{"pageNum":5, "pageWidth":816, "pageHeight":1056,
	"blocks":[
		{"l":73, "t":74, "r":381, "b":84,
		"q":[73, 8, 86, 51, 143, 14, 163, 18, 187, 61, 254, 42, 303, 27, 335, 16, 358, 23],
		"s":["is", "optimized", "for", "two", "dimensional", "caching,", "while", "the", "data"],
		"ss":"is optimized for two dimensional caching, while the data"},
		{"l":412, "t":74, "r":720, "b":85,
		"q":[412, 44, 467, 23, 496, 23, 524, 10, 540, 54, 600, 23, 628, 17, 651, 28, 685, 23, 714, 6],
		"s":["opcodes.", "This", "type", "of", "divergence", "does", "not", "occur", "with", "a"],
		"ss":"opcodes. This type of divergence does not occur with a"},
		{"l":73, "t":88, "r":381, "b":98,
		"q":[73, 15, 92, 8, 104, 43, 151, 11, 166, 18, 188, 61, 254, 23, 282, 10, 296, 6, 306, 29, 340, 27, 371, 10],
		"s":["set", "is", "accessed", "as", "one", "dimensional", "data", "in", "a", "single", "block", "of"],
		"ss":"set is accessed as one dimensional data in a single block of"},
		{"l":412, "t":88, "r":539, "b":98,
		"q":[412, 55, 471, 10, 485, 55],
		"s":["query-plan", "of", "primitives."],
		"ss":"query-plan of primitives."},
		{"l":73, "t":101, "r":381, "b":111,
		"q":[73, 44, 122, 39, 165, 16, 185, 60, 249, 23, 276, 35, 314, 38, 356, 25],
		"s":["memory.", "Finally,", "the", "row-column", "data", "format", "enables", "most"],
		"ss":"memory. Finally, the row-column data format enables most"},
		{"l":73, "t":115, "r":381, "b":125,
		"q":[73, 31, 108, 42, 155, 41, 200, 11, 215, 12, 232, 51, 287, 44, 336, 16, 357, 24],
		"s":["global", "memory", "accesses", "to", "be", "coalesced,", "reducing", "the", "need"],
		"ss":"global memory accesses to be coalesced, reducing the need"},
		{"l":412, "t":112, "r":654, "b":126,
		"q":[412, 19, 446, 47, 498, 57, 559, 95],
		"s":["4.5", "Virtual", "Machine", "Infrastructure"],
		"ss":"4.5 Virtual Machine Infrastructure"},
		{"l":73, "t":128, "r":133, "b":138,
		"q":[73, 14, 91, 42],
		"s":["for", "caching."],
		"ss":"for caching."},
		{"l":423, "t":131, "r":720, "b":142,
		"q":[423, 20, 449, 23, 477, 10, 492, 19, 516, 37, 558, 8, 571, 16, 593, 91, 689, 10, 703, 16],
		"s":["The", "crux", "of", "this", "project", "is", "the", "reimplementation", "of", "the"],
		"ss":"The crux of this project is the reimplementation of the"},
		{"l":412, "t":145, "r":720, "b":155,
		"q":[412, 36, 453, 35, 493, 43, 540, 23, 569, 38, 612, 20, 638, 35, 677, 43],
		"s":["SQLite", "virtual", "machine", "with", "CUDA.", "The", "virtual", "machine"],
		"ss":"SQLite virtual machine with CUDA. The virtual machine"},
		{"l":73, "t":158, "r":208, "b":172,
		"q":[73, 19, 107, 45, 156, 51],
		"s":["4.4", "Parsed", "Queries"],
		"ss":"4.4 Parsed Queries"},
		{"l":412, "t":158, "r":720, "b":169,
		"q":[412, 8, 426, 66, 498, 11, 514, 6, 526, 35, 567, 31, 604, 22, 632, 43, 681, 16, 703, 16],
		"s":["is", "implemented", "as", "a", "CUDA", "kernel", "that", "executes", "the", "op-"],
		"ss":"is implemented as a CUDA kernel that executes the op-"},
		{"l":412, "t":172, "r":720, "b":182,
		"q":[412, 23, 440, 54, 504, 20, 530, 37, 572, 17, 595, 66, 666, 36, 708, 12],
		"s":["code", "procedure.", "The", "project", "has", "implemented", "around", "40"],
		"ss":"code procedure. The project has implemented around 40"},
		{"l":84, "t":178, "r":381, "b":188,
		"q":[84, 14, 103, 48, 155, 33, 193, 36, 234, 32, 271, 6, 282, 23, 310, 29, 343, 20, 368, 13],
		"s":["As", "discussed", "above,", "SQLite", "parses", "a", "SQL", "query", "into", "an"],
		"ss":"As discussed above, SQLite parses a SQL query into an"},
		{"l":412, "t":185, "r":720, "b":196,
		"q":[412, 41, 457, 22, 483, 14, 501, 30, 535, 27, 566, 16, 586, 59, 649, 44, 697, 23],
		"s":["opcodes", "thus", "far", "which", "cover", "the", "comparison", "opcodes,", "such"],
		"ss":"opcodes thus far which cover the comparison opcodes, such"},
		{"l":73, "t":191, "r":381, "b":202,
		"q":[73, 36, 112, 44, 159, 22, 184, 49, 237, 46, 286, 27, 318, 23, 344, 37],
		"s":["opcode", "program", "that", "resembles", "assembly", "code.", "This", "project"],
		"ss":"opcode program that resembles assembly code. This project"},
		{"l":412, "t":199, "r":422, "b":209,
		"q":[412, 11],
		"s":["as"],
		"ss":"as"},
		{"l":428, "t":199, "r":440, "b":209,
		"q":[428, 12],
		"s":["Ge"],
		"ss":"Ge"},
		{"l":445, "t":199, "r":720, "b":209,
		"q":[445, 41, 492, 24, 521, 11, 537, 35, 578, 17, 600, 71, 676, 44],
		"s":["(greater", "than", "or", "equal),", "the", "mathematical", "opcodes,"],
		"ss":"(greater than or equal), the mathematical opcodes,"},
		{"l":73, "t":205, "r":381, "b":215,
		"q":[73, 22, 101, 16, 123, 36, 165, 50, 220, 48, 274, 19, 298, 41, 345, 16, 367, 14],
		"s":["calls", "the", "SQLite", "command", "processor", "and", "extracts", "the", "re-"],
		"ss":"calls the SQLite command processor and extracts the re-"},
		{"l":412, "t":212, "r":451, "b":223,
		"q":[412, 23, 440, 11],
		"s":["such", "as"],
		"ss":"such as"},
		{"l":457, "t":213, "r":475, "b":223,
		"q":[457, 18],
		"s":["Add"],
		"ss":"Add"},
		{"l":475, "t":212, "r":634, "b":223,
		"q":[475, 3, 484, 17, 506, 33, 545, 44, 595, 23, 624, 11],
		"s":[",", "the", "logical", "opcodes,", "such", "as"],
		"ss":", the logical opcodes, such as"},
		{"l":640, "t":213, "r":652, "b":223,
		"q":[640, 12],
		"s":["Or"],
		"ss":"Or"},
		{"l":652, "t":212, "r":720, "b":223,
		"q":[652, 3, 662, 17, 684, 36],
		"s":[",", "the", "bitwise"],
		"ss":", the bitwise"},
		{"l":73, "t":218, "r":381, "b":229,
		"q":[73, 27, 103, 47, 153, 23, 178, 58, 240, 11, 253, 16, 272, 32, 307, 10, 319, 23, 345, 36],
		"s":["sults,", "removing", "data", "superﬂuous", "to", "the", "subset", "of", "SQL", "queries"],
		"ss":"sults, removing data superﬂuous to the subset of SQL queries"},
		{"l":412, "t":226, "r":498, "b":236,
		"q":[412, 44, 460, 23, 487, 11],
		"s":["opcodes,", "such", "as"],
		"ss":"opcodes, such as"},
		{"l":502, "t":226, "r":538, "b":236,
		"q":[502, 36],
		"s":["BitAnd"],
		"ss":"BitAnd"},
		{"l":538, "t":226, "r":720, "b":236,
		"q":[538, 3, 546, 19, 569, 35, 608, 27, 639, 36, 679, 41],
		"s":[",", "and", "several", "other", "critical", "opcodes"],
		"ss":", and several other critical opcodes"},
		{"l":73, "t":232, "r":381, "b":242,
		"q":[73, 66, 142, 10, 155, 19, 178, 40, 223, 9, 235, 53, 291, 29, 323, 8, 335, 20, 358, 23],
		"s":["implemented", "in", "this", "project.", "A", "processing", "phase", "is", "also", "used"],
		"ss":"implemented in this project. A processing phase is also used"},
		{"l":412, "t":239, "r":450, "b":250,
		"q":[412, 23, 439, 11],
		"s":["such", "as"],
		"ss":"such as"},
		{"l":455, "t":240, "r":509, "b":250,
		"q":[455, 55],
		"s":["ResultRow"],
		"ss":"ResultRow"},
		{"l":509, "t":239, "r":720, "b":250,
		"q":[509, 3, 521, 20, 546, 41, 592, 16, 613, 32, 649, 10, 664, 18, 687, 33],
		"s":[".", "The", "opcodes", "are", "stored", "in", "two", "switch"],
		"ss":". The opcodes are stored in two switch"},
		{"l":73, "t":245, "r":381, "b":256,
		"q":[73, 11, 88, 29, 121, 16, 143, 36, 184, 44, 232, 14, 251, 40, 296, 11, 311, 16, 333, 30, 367, 14],
		"s":["to", "ready", "the", "opcode", "program", "for", "transfer", "to", "the", "GPU,", "in-"],
		"ss":"to ready the opcode program for transfer to the GPU, in-"},
		{"l":412, "t":253, "r":471, "b":263,
		"q":[412, 59],
		"s":["statements."],
		"ss":"statements."},
		{"l":73, "t":259, "r":381, "b":269,
		"q":[73, 38, 113, 68, 184, 42, 228, 19, 250, 36, 289, 16, 308, 31, 342, 39],
		"s":["cluding", "dereferencing", "pointers", "and", "storing", "the", "target", "directly"],
		"ss":"cluding dereferencing pointers and storing the target directly"},
		{"l":423, "t":266, "r":720, "b":276,
		"q":[423, 20, 448, 21, 473, 33, 511, 51, 567, 10, 581, 16, 602, 35, 641, 43, 688, 31],
		"s":["The", "ﬁrst", "switch", "statement", "of", "the", "virtual", "machine", "allows"],
		"ss":"The ﬁrst switch statement of the virtual machine allows"},
		{"l":73, "t":272, "r":381, "b":283,
		"q":[73, 10, 86, 16, 106, 36, 146, 47, 197, 9, 210, 36, 249, 44, 296, 8, 307, 37, 348, 33],
		"s":["in", "the", "opcode", "program.", "A", "sample", "program", "is", "printed", "below,"],
		"ss":"in the opcode program. A sample program is printed below,"},
		{"l":412, "t":280, "r":720, "b":290,
		"q":[412, 48, 464, 36, 505, 52, 562, 27, 593, 16, 614, 34, 653, 41, 698, 22],
		"s":["divergent", "opcode", "execution,", "while", "the", "second", "requires", "con-"],
		"ss":"divergent opcode execution, while the second requires con-"},
		{"l":73, "t":286, "r":381, "b":296,
		"q":[73, 35, 112, 13, 128, 16, 149, 50, 203, 48, 255, 14, 273, 29, 306, 6, 316, 10, 330, 50],
		"s":["output", "by", "the", "command", "processor", "for", "query", "1", "in", "Appendix"],
		"ss":"output by the command processor for query 1 in Appendix"},
		{"l":412, "t":293, "r":720, "b":303,
		"q":[412, 37, 454, 36, 495, 52, 555, 11, 571, 27, 602, 33, 641, 16, 662, 21, 687, 33],
		"s":["current", "opcode", "execution.", "In", "other", "words,", "the", "ﬁrst", "switch"],
		"ss":"current opcode execution. In other words, the ﬁrst switch"},
		{"l":73, "t":299, "r":85, "b":310,
		"q":[73, 12],
		"s":["A."],
		"ss":"A."},
		{"l":97, "t":310, "r":274, "b":321,
		"q":[97, 12, 129, 30, 216, 6, 242, 6, 268, 6],
		"s":["0:", "Trace", "0", "0", "0"],
		"ss":"0: Trace 0 0 0"},
		{"l":412, "t":307, "r":720, "b":317,
		"q":[412, 51, 468, 31, 504, 43, 553, 38, 596, 11, 612, 39, 655, 43, 703, 16],
		"s":["statement", "allows", "diﬀerent", "threads", "to", "execute", "diﬀerent", "op-"],
		"ss":"statement allows diﬀerent threads to execute diﬀerent op-"},
		{"l":97, "t":324, "r":274, "b":334,
		"q":[97, 12, 129, 42, 216, 12, 242, 6, 268, 6],
		"s":["1:", "Integer", "60", "1", "0"],
		"ss":"1: Integer 60 1 0"},
		{"l":412, "t":320, "r":720, "b":330,
		"q":[412, 28, 446, 67, 519, 19, 544, 16, 566, 34, 607, 23, 635, 20, 667, 31, 703, 17],
		"s":["codes", "concurrently,", "and", "the", "second", "does", "not.", "When", "the"],
		"ss":"codes concurrently, and the second does not. When the"},
		{"l":97, "t":337, "r":274, "b":348,
		"q":[97, 12, 129, 42, 216, 6, 242, 6, 268, 6],
		"s":["2:", "Integer", "0", "2", "0"],
		"ss":"2: Integer 0 2 0"},
		{"l":412, "t":334, "r":436, "b":344,
		"q":[412, 24],
		"s":["Next"],
		"ss":"Next"},
		{"l":440, "t":334, "r":720, "b":344,
		"q":[440, 36, 480, 8, 492, 66, 562, 49, 616, 16, 636, 18, 659, 10, 672, 16, 693, 27],
		"s":["opcode", "is", "encountered,", "signifying", "the", "end", "of", "the", "data-"],
		"ss":"opcode is encountered, signifying the end of the data-"},
		{"l":97, "t":351, "r":274, "b":361,
		"q":[97, 12, 129, 24, 216, 6, 242, 12, 268, 6],
		"s":["3:", "Goto", "0", "17", "0"],
		"ss":"3: Goto 0 17 0"},
		{"l":412, "t":347, "r":720, "b":357,
		"q":[412, 53, 469, 59, 533, 16, 554, 35, 593, 43, 639, 31, 675, 24, 703, 16],
		"s":["dependent", "parallelism,", "the", "virtual", "machine", "jumps", "from", "the"],
		"ss":"dependent parallelism, the virtual machine jumps from the"},
		{"l":97, "t":364, "r":274, "b":375,
		"q":[97, 12, 129, 48, 216, 6, 242, 6, 268, 6],
		"s":["4:", "OpenRead", "0", "2", "0"],
		"ss":"4: OpenRead 0 2 0"},
		{"l":412, "t":360, "r":720, "b":371,
		"q":[412, 48, 465, 27, 498, 11, 515, 16, 537, 55, 598, 31, 639, 20, 665, 55],
		"s":["divergent", "block", "to", "the", "concurrent", "block.", "The", "concurrent"],
		"ss":"divergent block to the concurrent block. The concurrent"},
		{"l":97, "t":378, "r":274, "b":388,
		"q":[97, 12, 129, 36, 216, 6, 242, 12, 268, 6],
		"s":["5:", "Rewind", "0", "15", "0"],
		"ss":"5: Rewind 0 15 0"},
		{"l":412, "t":374, "r":720, "b":384,
		"q":[412, 27, 443, 8, 454, 23, 481, 14, 499, 16, 519, 60, 583, 50, 637, 30, 671, 48],
		"s":["block", "is", "used", "for", "the", "aggregation", "functions,", "where", "coordina-"],
		"ss":"block is used for the aggregation functions, where coordina-"},
		{"l":97, "t":391, "r":274, "b":402,
		"q":[97, 12, 129, 36, 216, 6, 242, 6, 268, 6],
		"s":["6:", "Column", "0", "1", "3"],
		"ss":"6: Column 0 1 3"},
		{"l":412, "t":387, "r":588, "b":398,
		"q":[412, 20, 436, 31, 471, 13, 488, 38, 530, 8, 542, 47],
		"s":["tion", "across", "all", "threads", "is", "essential."],
		"ss":"tion across all threads is essential."},
		{"l":97, "t":405, "r":274, "b":415,
		"q":[97, 12, 129, 12, 216, 6, 242, 12, 268, 6],
		"s":["7:", "Le", "1", "14", "3"],
		"ss":"7: Le 1 14 3"},
		{"l":423, "t":401, "r":720, "b":411,
		"q":[423, 9, 436, 31, 471, 26, 500, 10, 514, 16, 534, 35, 573, 31, 608, 8, 620, 16, 640, 49, 693, 27],
		"s":["A", "major", "piece", "of", "the", "CUDA", "kernel", "is", "the", "reduction", "when"],
		"ss":"A major piece of the CUDA kernel is the reduction when"},
		{"l":97, "t":418, "r":274, "b":429,
		"q":[97, 12, 129, 36, 216, 6, 242, 6, 268, 6],
		"s":["8:", "Column", "0", "2", "3"],
		"ss":"8: Column 0 2 3"},
		{"l":412, "t":414, "r":428, "b":425,
		"q":[412, 16],
		"s":["the"],
		"ss":"the"},
		{"l":432, "t":415, "r":487, "b":425,
		"q":[432, 55],
		"s":["ResultRow"],
		"ss":"ResultRow"},
		{"l":491, "t":414, "r":720, "b":425,
		"q":[491, 36, 531, 8, 543, 30, 577, 13, 593, 43, 640, 38, 682, 11, 697, 23],
		"s":["opcode", "is", "called", "by", "multiple", "threads", "to", "emit"],
		"ss":"opcode is called by multiple threads to emit"},
		{"l":97, "t":432, "r":274, "b":442,
		"q":[97, 12, 129, 12, 216, 6, 242, 12, 268, 6],
		"s":["9:", "Ge", "2", "14", "3"],
		"ss":"9: Ge 2 14 3"},
		{"l":412, "t":428, "r":720, "b":438,
		"q":[412, 23, 439, 10, 451, 37, 494, 27, 524, 17, 544, 27, 575, 34, 612, 28, 643, 6, 653, 22, 678, 6, 687, 32],
		"s":["rows", "of", "results.", "Since", "not", "every", "thread", "emits", "a", "row,", "a", "reduc-"],
		"ss":"rows of results. Since not every thread emits a row, a reduc-"},
		{"l":97, "t":445, "r":274, "b":456,
		"q":[97, 18, 129, 36, 216, 6, 242, 6, 268, 6],
		"s":["10:", "Column", "0", "0", "5"],
		"ss":"10: Column 0 0 5"},
		{"l":412, "t":441, "r":720, "b":452,
		"q":[412, 20, 436, 49, 490, 25, 519, 12, 535, 53, 592, 11, 607, 33, 644, 22, 670, 16, 691, 29],
		"s":["tion", "operation", "must", "be", "performed", "to", "ensure", "that", "the", "result"],
		"ss":"tion operation must be performed to ensure that the result"},
		{"l":97, "t":459, "r":274, "b":469,
		"q":[97, 18, 129, 36, 216, 6, 242, 6, 268, 6],
		"s":["11:", "Column", "0", "1", "6"],
		"ss":"11: Column 0 1 6"},
		{"l":412, "t":455, "r":720, "b":465,
		"q":[412, 27, 444, 8, 457, 6, 468, 55, 528, 15, 548, 10, 562, 26, 597, 23, 625, 49, 679, 41],
		"s":["block", "is", "a", "contiguous", "set", "of", "data.", "This", "reduction", "involves"],
		"ss":"block is a contiguous set of data. This reduction involves"},
		{"l":97, "t":472, "r":274, "b":483,
		"q":[97, 18, 129, 36, 216, 6, 242, 6, 268, 6],
		"s":["12:", "Column", "0", "2", "7"],
		"ss":"12: Column 0 2 7"},
		{"l":412, "t":468, "r":720, "b":479,
		"q":[412, 62, 478, 19, 502, 89, 595, 82, 682, 11, 697, 23],
		"s":["inter-thread", "and", "inter-threadblock", "communication,", "as", "each"],
		"ss":"inter-thread and inter-threadblock communication, as each"},
		{"l":97, "t":486, "r":274, "b":496,
		"q":[97, 18, 129, 55, 216, 6, 242, 6, 268, 6],
		"s":["13:", "ResultRow", "5", "3", "0"],
		"ss":"13: ResultRow 5 3 0"},
		{"l":412, "t":482, "r":720, "b":492,
		"q":[412, 34, 449, 22, 475, 28, 508, 11, 522, 23, 549, 6, 560, 19, 582, 25, 612, 12, 628, 43, 675, 6, 685, 35],
		"s":["thread", "that", "needs", "to", "emit", "a", "row", "must", "be", "assigned", "a", "unique"],
		"ss":"thread that needs to emit a row must be assigned a unique"},
		{"l":97, "t":499, "r":274, "b":510,
		"q":[97, 18, 129, 24, 216, 6, 242, 6, 268, 6],
		"s":["14:", "Next", "0", "6", "0"],
		"ss":"14: Next 0 6 0"},
		{"l":412, "t":495, "r":720, "b":506,
		"q":[412, 22, 438, 10, 451, 16, 472, 29, 505, 15, 524, 23, 551, 31, 587, 48, 640, 16, 660, 29, 693, 15, 712, 8],
		"s":["area", "of", "the", "result", "set", "data", "block.", "Although", "the", "result", "set", "is"],
		"ss":"area of the result set data block. Although the result set is"},
		{"l":97, "t":513, "r":274, "b":523,
		"q":[97, 18, 129, 30, 216, 6, 242, 6, 268, 6],
		"s":["15:", "Close", "0", "0", "0"],
		"ss":"15: Close 0 0 0"},
		{"l":412, "t":509, "r":720, "b":519,
		"q":[412, 58, 474, 13, 490, 27, 520, 10, 533, 34, 570, 8, 582, 60, 647, 23, 674, 26, 703, 16],
		"s":["contiguous,", "no", "order", "of", "results", "is", "guaranteed.", "This", "saves", "the"],
		"ss":"contiguous, no order of results is guaranteed. This saves the"},
		{"l":97, "t":526, "r":274, "b":537,
		"q":[97, 18, 129, 24, 216, 6, 242, 6, 268, 6],
		"s":["16:", "Halt", "0", "0", "0"],
		"ss":"16: Halt 0 0 0"},
		{"l":412, "t":522, "r":720, "b":533,
		"q":[412, 31, 447, 46, 498, 10, 513, 56, 574, 71, 649, 27, 682, 38],
		"s":["major", "overhead", "of", "completely", "synchronizing", "when", "threads"],
		"ss":"major overhead of completely synchronizing when threads"},
		{"l":97, "t":540, "r":274, "b":550,
		"q":[97, 18, 129, 145],
		"s":["17:", "Transaction000"],
		"ss":"17: Transaction000"},
		{"l":412, "t":536, "r":607, "b":546,
		"q":[412, 19, 435, 66, 504, 46, 554, 52],
		"s":["and", "threadblocks", "complete", "execution."],
		"ss":"and threadblocks complete execution."},
		{"l":97, "t":553, "r":274, "b":564,
		"q":[97, 18, 129, 73, 216, 6, 242, 6, 268, 6],
		"s":["18:", "VerifyCookie", "0", "1", "0"],
		"ss":"18: VerifyCookie 0 1 0"},
		{"l":423, "t":549, "r":720, "b":560,
		"q":[423, 20, 449, 49, 504, 8, 517, 66, 589, 27, 622, 16, 644, 35, 685, 35],
		"s":["The", "reduction", "is", "implemented", "using", "the", "CUDA", "atomic"],
		"ss":"The reduction is implemented using the CUDA atomic"},
		{"l":97, "t":567, "r":274, "b":577,
		"q":[97, 18, 129, 55, 216, 6, 242, 6, 268, 6],
		"s":["19:", "TableLock", "0", "2", "0"],
		"ss":"19: TableLock 0 2 0"},
		{"l":412, "t":563, "r":461, "b":573,
		"q":[412, 49],
		"s":["operation"],
		"ss":"operation"},
		{"l":467, "t":563, "r":534, "b":574,
		"q":[467, 67],
		"s":["atomicAdd()"],
		"ss":"atomicAdd()"},
		{"l":534, "t":563, "r":720, "b":573,
		"q":[534, 3, 544, 30, 580, 13, 599, 18, 624, 26, 662, 28, 697, 23],
		"s":[",", "called", "on", "two", "tiers.", "First,", "each"],
		"ss":", called on two tiers. First, each"},
		{"l":97, "t":580, "r":274, "b":590,
		"q":[97, 18, 129, 24, 216, 6, 242, 6, 268, 6],
		"s":["20:", "Goto", "0", "4", "0"],
		"ss":"20: Goto 0 4 0"},
		{"l":412, "t":576, "r":572, "b":587,
		"q":[412, 34, 451, 23, 479, 6, 491, 29, 525, 19, 550, 22],
		"s":["thread", "with", "a", "result", "row", "calls"],
		"ss":"thread with a result row calls"},
		{"l":578, "t":577, "r":644, "b":587,
		"q":[578, 67],
		"s":["atomicAdd()"],
		"ss":"atomicAdd()"},
		{"l":650, "t":576, "r":720, "b":587,
		"q":[650, 13, 668, 6, 679, 41],
		"s":["on", "a", "variable"],
		"ss":"on a variable"},
		{"l":84, "t":593, "r":381, "b":603,
		"q":[84, 9, 96, 35, 134, 43, 179, 49, 231, 10, 244, 19, 266, 36, 305, 51, 359, 22],
		"s":["A", "virtual", "machine", "execution", "of", "this", "opcode", "procedure", "iter-"],
		"ss":"A virtual machine execution of this opcode procedure iter-"},
		{"l":412, "t":590, "r":720, "b":600,
		"q":[412, 10, 426, 34, 464, 44, 512, 22, 538, 46, 588, 13, 605, 57, 666, 33, 703, 16],
		"s":["in", "shared", "memory,", "thus", "receiving", "an", "assignment", "within", "the"],
		"ss":"in shared memory, thus receiving an assignment within the"},
		{"l":73, "t":606, "r":381, "b":617,
		"q":[73, 21, 97, 61, 161, 21, 186, 16, 206, 29, 239, 26, 268, 19, 290, 28, 322, 29, 354, 27],
		"s":["ates", "sequentially", "over", "the", "entire", "table", "and", "emits", "result", "rows."],
		"ss":"ates sequentially over the entire table and emits result rows."},
		{"l":412, "t":603, "r":720, "b":614,
		"q":[412, 34, 450, 31, 489, 20, 515, 19, 538, 34, 577, 10, 592, 16, 613, 27, 645, 23, 673, 22, 701, 19],
		"s":["thread", "block.", "The", "last", "thread", "in", "the", "block", "then", "calls", "this"],
		"ss":"thread block. The last thread in the block then calls this"},
		{"l":73, "t":620, "r":381, "b":630,
		"q":[73, 25, 100, 22, 125, 17, 146, 13, 161, 10, 174, 16, 193, 41, 237, 16, 256, 41, 300, 11, 314, 19, 336, 45],
		"s":["Note", "that", "not", "all", "of", "the", "opcodes", "are", "relevant", "to", "this", "project’s"],
		"ss":"Note that not all of the opcodes are relevant to this project’s"},
		{"l":412, "t":617, "r":720, "b":627,
		"q":[412, 43, 458, 13, 473, 6, 483, 43, 529, 31, 563, 41, 607, 30, 641, 59, 703, 16],
		"s":["function", "on", "a", "separate", "global", "variable", "which", "determine’s", "the"],
		"ss":"function on a separate global variable which determine’s the"},
		{"l":73, "t":633, "r":381, "b":644,
		"q":[73, 37, 114, 10, 128, 6, 138, 29, 171, 26, 201, 10, 215, 26, 245, 44, 294, 19, 317, 16, 337, 22, 364, 17],
		"s":["storage", "of", "a", "single", "table", "in", "GPU", "memory,", "and", "are", "thus", "not"],
		"ss":"storage of a single table in GPU memory, and are thus not"},
		{"l":412, "t":630, "r":720, "b":641,
		"q":[412, 34, 451, 35, 492, 41, 539, 10, 554, 16, 577, 42, 624, 31, 661, 30, 697, 23],
		"s":["thread", "block’s", "position", "in", "the", "memory", "space,", "which", "each"],
		"ss":"thread block’s position in the memory space, which each"},
		{"l":73, "t":647, "r":381, "b":657,
		"q":[73, 70, 153, 20, 179, 17, 203, 11, 219, 19, 244, 23, 273, 10, 288, 51, 345, 8, 359, 22],
		"s":["implemented.", "The", "key", "to", "this", "kind", "of", "procedure", "is", "that"],
		"ss":"implemented. The key to this kind of procedure is that"},
		{"l":412, "t":644, "r":720, "b":654,
		"q":[412, 34, 449, 23, 476, 21, 501, 11, 515, 51, 570, 13, 586, 27, 617, 31, 652, 19, 675, 29, 707, 13],
		"s":["thread", "then", "uses", "to", "determine", "its", "exact", "target", "row", "based", "on"],
		"ss":"thread then uses to determine its exact target row based on"},
		{"l":73, "t":660, "r":381, "b":671,
		"q":[73, 41, 118, 58, 181, 16, 202, 44, 250, 39, 293, 19, 317, 27, 348, 11, 363, 17],
		"s":["opcodes", "manipulate", "the", "program", "counter", "and", "jump", "to", "dif-"],
		"ss":"opcodes manipulate the program counter and jump to dif-"},
		{"l":412, "t":657, "r":720, "b":668,
		"q":[412, 16, 433, 43, 482, 57, 544, 33, 582, 16, 603, 34, 642, 31, 681, 38],
		"s":["the", "previous", "assignment", "within", "the", "thread", "block.", "Experi-"],
		"ss":"the previous assignment within the thread block. Experi-"},
		{"l":73, "t":674, "r":381, "b":684,
		"q":[73, 30, 108, 49, 163, 22, 190, 41, 237, 16, 258, 17, 281, 34, 320, 45, 371, 10],
		"s":["ferent", "locations,", "thus", "opcodes", "are", "not", "always", "executed", "in"],
		"ss":"ferent locations, thus opcodes are not always executed in"},
		{"l":412, "t":671, "r":720, "b":681,
		"q":[412, 52, 468, 17, 489, 29, 522, 22, 547, 19, 570, 39, 613, 10, 627, 49, 679, 8, 691, 29],
		"s":["mentation", "has", "found", "that", "this", "method", "of", "reduction", "is", "faster"],
		"ss":"mentation has found that this method of reduction is faster"},
		{"l":73, "t":687, "r":132, "b":698,
		"q":[73, 30, 112, 20],
		"s":["order.", "The"],
		"ss":"order. The"},
		{"l":138, "t":688, "r":162, "b":698,
		"q":[138, 24],
		"s":["Next"],
		"ss":"Next"},
		{"l":167, "t":687, "r":381, "b":698,
		"q":[167, 40, 212, 14, 231, 46, 283, 46, 334, 24, 363, 18],
		"s":["opcode,", "for", "example,", "advances", "from", "one"],
		"ss":"opcode, for example, advances from one"},
		{"l":412, "t":684, "r":720, "b":695,
		"q":[412, 24, 438, 32, 473, 14, 490, 19, 511, 51, 565, 23, 590, 10, 603, 54, 660, 60],
		"s":["than", "others", "for", "this", "particular", "type", "of", "assigment,", "particularly"],
		"ss":"than others for this particular type of assigment, particularly"},
		{"l":73, "t":701, "r":381, "b":711,
		"q":[73, 19, 97, 11, 112, 16, 134, 23, 161, 19, 186, 31, 222, 11, 238, 16, 259, 27, 291, 10, 305, 16, 327, 34, 366, 15],
		"s":["row", "to", "the", "next", "and", "jumps", "to", "the", "value", "of", "the", "second", "ar-"],
		"ss":"row to the next and jumps to the value of the second ar-"},
		{"l":412, "t":698, "r":530, "b":708,
		"q":[412, 23, 439, 32, 474, 29, 507, 23],
		"s":["with", "sparse", "result", "sets."],
		"ss":"with sparse result sets."},
		{"l":73, "t":714, "r":381, "b":725,
		"q":[73, 42, 121, 16, 141, 64, 208, 10, 222, 17, 243, 51, 299, 22, 325, 35, 364, 16],
		"s":["gument.", "An", "examination", "of", "the", "procedure", "thus", "reveals", "the"],
		"ss":"gument. An examination of the procedure thus reveals the"},
		{"l":423, "t":711, "r":720, "b":722,
		"q":[423, 23, 450, 37, 489, 20, 512, 45, 560, 23, 587, 60, 650, 47, 700, 20],
		"s":["This", "project", "also", "supports", "SQL", "aggregation", "functions", "(i.e."],
		"ss":"This project also supports SQL aggregation functions (i.e."},
		{"l":73, "t":728, "r":381, "b":738,
		"q":[73, 27, 104, 10, 118, 41, 163, 6, 173, 41, 218, 12, 234, 16, 254, 45, 303, 14, 322, 23, 348, 19, 371, 10],
		"s":["block", "of", "opcodes", "6", "through", "14", "are", "executed", "for", "each", "row", "of"],
		"ss":"block of opcodes 6 through 14 are executed for each row of"},
		{"l":412, "t":725, "r":720, "b":735,
		"q":[412, 47, 463, 30, 496, 27, 527, 32, 563, 19, 586, 33, 623, 36, 662, 22, 688, 14, 706, 14],
		"s":["COUNT,", "SUM,", "MIN,", "MAX,", "and", "AVG),", "though", "only", "for", "in-"],
		"ss":"COUNT, SUM, MIN, MAX, and AVG), though only for in-"},
		{"l":73, "t":741, "r":381, "b":752,
		"q":[73, 16, 94, 29, 133, 20, 158, 51, 215, 8, 228, 22, 256, 52, 313, 68],
		"s":["the", "table.", "The", "procedure", "is", "thus", "inherently", "parallelizable"],
		"ss":"the table. The procedure is thus inherently parallelizable"},
		{"l":412, "t":738, "r":720, "b":749,
		"q":[412, 26, 443, 35, 489, 54, 549, 27, 583, 17, 606, 24, 636, 28, 669, 11, 686, 34],
		"s":["teger", "values.", "Signiﬁcant", "eﬀort", "has", "been", "made", "to", "adhere"],
		"ss":"teger values. Signiﬁcant eﬀort has been made to adhere"},
		{"l":73, "t":755, "r":381, "b":765,
		"q":[73, 13, 89, 47, 140, 23, 166, 19, 189, 11, 203, 6, 212, 35, 251, 34, 289, 19, 312, 49, 364, 16],
		"s":["by", "assigning", "each", "row", "to", "a", "CUDA", "thread", "and", "executing", "the"],
		"ss":"by assigning each row to a CUDA thread and executing the"},
		{"l":412, "t":752, "r":720, "b":762,
		"q":[412, 11, 428, 16, 451, 74, 531, 29, 566, 22, 594, 40, 640, 43, 689, 31],
		"s":["to", "the", "SQLite-parsed", "query", "plan", "without", "multiple", "kernel"],
		"ss":"to the SQLite-parsed query plan without multiple kernel"},
		{"l":73, "t":768, "r":210, "b":779,
		"q":[73, 34, 111, 51, 166, 24, 194, 16],
		"s":["looped", "procedure", "until", "the"],
		"ss":"looped procedure until the"},
		{"l":214, "t":769, "r":239, "b":779,
		"q":[214, 24],
		"s":["Next"],
		"ss":"Next"},
		{"l":243, "t":768, "r":282, "b":779,
		"q":[243, 40],
		"s":["opcode."],
		"ss":"opcode."},
		{"l":412, "t":765, "r":720, "b":776,
		"q":[412, 47, 464, 27, 494, 89, 586, 68, 658, 23, 684, 11, 698, 22],
		"s":["launches.", "Since", "inter-threadblock", "coordination,", "such", "as", "that"],
		"ss":"launches. Since inter-threadblock coordination, such as that"},
		{"l":84, "t":782, "r":381, "b":792,
		"q":[84, 34, 124, 13, 141, 41, 188, 58, 251, 16, 272, 27, 305, 10, 319, 36, 361, 20],
		"s":["Nearly", "all", "opcodes", "manipulate", "the", "array", "of", "SQLite", "reg-"],
		"ss":"Nearly all opcodes manipulate the array of SQLite reg-"},
		{"l":412, "t":779, "r":720, "b":789,
		"q":[412, 23, 440, 14, 459, 60, 524, 50, 579, 8, 592, 40, 637, 40, 682, 27, 714, 6],
		"s":["used", "for", "aggregation", "functions,", "is", "diﬃcult", "without", "using", "a"],
		"ss":"used for aggregation functions, is diﬃcult without using a"},
		{"l":73, "t":795, "r":381, "b":806,
		"q":[73, 27, 104, 10, 119, 26, 149, 22, 179, 20, 204, 43, 251, 16, 272, 36, 312, 42, 359, 22],
		"s":["isters", "in", "some", "way.", "The", "registers", "are", "generic", "memory", "cells"],
		"ss":"isters in some way. The registers are generic memory cells"},
		{"l":412, "t":792, "r":720, "b":803,
		"q":[412, 31, 447, 34, 485, 11, 499, 6, 509, 31, 544, 38, 587, 35, 626, 47, 677, 16, 697, 23],
		"s":["kernel", "launch", "as", "a", "global", "barrier,", "atomic", "functions", "are", "used"],
		"ss":"kernel launch as a global barrier, atomic functions are used"},
		{"l":73, "t":809, "r":381, "b":819,
		"q":[73, 22, 98, 18, 119, 25, 148, 18, 170, 23, 196, 10, 210, 23, 236, 19, 259, 16, 278, 40, 322, 10, 335, 13, 351, 29],
		"s":["that", "can", "store", "any", "kind", "of", "data", "and", "are", "indexed", "in", "an", "array."],
		"ss":"that can store any kind of data and are indexed in an array."},
		{"l":412, "t":806, "r":720, "b":816,
		"q":[412, 14, 431, 68, 505, 18, 528, 26, 560, 18, 583, 22, 610, 12, 628, 23, 656, 23, 685, 35],
		"s":["for", "coordination,", "but", "these", "can", "only", "be", "used", "with", "integer"],
		"ss":"for coordination, but these can only be used with integer"},
		{"l":73, "t":822, "r":93, "b":833,
		"q":[73, 20],
		"s":["The"],
		"ss":"The"},
		{"l":98, "t":823, "r":134, "b":833,
		"q":[98, 36],
		"s":["Column"],
		"ss":"Column"},
		{"l":139, "t":822, "r":381, "b":833,
		"q":[139, 36, 181, 8, 194, 57, 256, 14, 275, 38, 318, 23, 346, 24, 375, 6],
		"s":["opcode", "is", "responsible", "for", "loading", "data", "from", "a"],
		"ss":"opcode is responsible for loading data from a"},
		{"l":412, "t":819, "r":720, "b":830,
		"q":[412, 31, 447, 10, 461, 38, 503, 23, 530, 51, 585, 8, 597, 45, 646, 11, 660, 12, 677, 43],
		"s":["values", "in", "CUDA.", "This", "limitation", "is", "expected", "to", "be", "removed"],
		"ss":"values in CUDA. This limitation is expected to be removed"},
		{"l":73, "t":836, "r":328, "b":846,
		"q":[73, 38, 114, 10, 128, 16, 148, 37, 190, 19, 213, 20, 237, 6, 246, 36, 286, 42],
		"s":["column", "in", "the", "current", "row", "into", "a", "certain", "register."],
		"ss":"column in the current row into a certain register."},
		{"l":412, "t":833, "r":720, "b":843,
		"q":[412, 10, 426, 81, 511, 51, 566, 19, 590, 16, 610, 64, 678, 23, 706, 14],
		"s":["in", "next-generation", "hardware,", "and", "the", "performance", "data", "for"],
		"ss":"in next-generation hardware, and the performance data for"},
		{"l":84, "t":849, "r":381, "b":860,
		"q":[84, 25, 113, 16, 134, 54, 192, 42, 239, 6, 249, 44, 297, 10, 311, 19, 335, 23, 362, 19],
		"s":["Note", "the", "diﬀerences", "between", "a", "program", "of", "this", "kind", "and"],
		"ss":"Note the diﬀerences between a program of this kind and"},
		{"l":412, "t":846, "r":720, "b":856,
		"q":[412, 35, 452, 54, 510, 8, 523, 27, 555, 6, 565, 25, 595, 75, 674, 10, 689, 31],
		"s":["integer", "aggregates", "is", "likely", "a", "good", "approximation", "of", "future"],
		"ss":"integer aggregates is likely a good approximation of future"},
		{"l":73, "t":863, "r":381, "b":873,
		"q":[73, 6, 84, 51, 140, 10, 155, 55, 216, 11, 232, 66, 303, 10, 318, 43, 367, 14],
		"s":["a", "procedure", "of", "primitives,", "as", "implemented", "in", "previous", "re-"],
		"ss":"a procedure of primitives, as implemented in previous re-"},
		{"l":412, "t":860, "r":559, "b":870,
		"q":[412, 64, 480, 14, 498, 27, 529, 31],
		"s":["performance", "for", "other", "types."],
		"ss":"performance for other types."},
		{"l":73, "t":876, "r":381, "b":887,
		"q":[73, 35, 117, 53, 176, 16, 197, 52, 254, 35, 295, 36, 336, 45],
		"s":["search.", "Primitives", "are", "individual", "CUDA", "kernels", "executed"],
		"ss":"search. Primitives are individual CUDA kernels executed"},
		{"l":73, "t":890, "r":381, "b":900,
		"q":[73, 39, 117, 27, 149, 16, 170, 29, 205, 36, 246, 51, 302, 8, 315, 45, 365, 16],
		"s":["serially,", "while", "the", "entire", "opcode", "procedure", "is", "executed", "en-"],
		"ss":"serially, while the entire opcode procedure is executed en-"},
		{"l":412, "t":884, "r":513, "b":897,
		"q":[412, 19, 446, 42, 492, 21],
		"s":["4.6", "Result", "Set"],
		"ss":"4.6 Result Set"},
		{"l":73, "t":903, "r":381, "b":914,
		"q":[73, 27, 105, 33, 144, 6, 155, 34, 199, 14, 218, 54, 277, 8, 291, 38, 334, 29, 368, 13],
		"s":["tirely", "within", "a", "kernel.", "As", "divergence", "is", "created", "based", "on"],
		"ss":"tirely within a kernel. As divergence is created based on"},
		{"l":423, "t":903, "r":720, "b":913,
		"q":[423, 26, 455, 16, 476, 35, 516, 43, 564, 17, 586, 24, 615, 48, 669, 16, 691, 29],
		"s":["Once", "the", "virtual", "machine", "has", "been", "executed,", "the", "result"],
		"ss":"Once the virtual machine has been executed, the result"},
		{"l":73, "t":917, "r":381, "b":927,
		"q":[73, 16, 94, 23, 122, 38, 165, 10, 179, 23, 206, 22, 233, 16, 254, 36, 295, 39, 338, 43],
		"s":["the", "data", "content", "of", "each", "row,", "the", "kernels", "execute", "diﬀerent"],
		"ss":"the data content of each row, the kernels execute diﬀerent"},
		{"l":412, "t":917, "r":720, "b":927,
		"q":[412, 15, 431, 10, 445, 6, 456, 29, 489, 19, 513, 34, 552, 13, 570, 16, 591, 30, 625, 40, 670, 16, 691, 29],
		"s":["set", "of", "a", "query", "still", "resides", "on", "the", "GPU.", "Though", "the", "speed"],
		"ss":"set of a query still resides on the GPU. Though the speed"},
		{"l":402, "t":1010, "r":414, "b":1020,
		"q":[402, 12],
		"s":["98"],
		"ss":"98"}
	]},
	{"pageNum":6, "pageWidth":816, "pageHeight":1056,
	"blocks":[
		{"l":73, "t":74, "r":381, "b":84,
		"q":[73, 10, 87, 29, 121, 49, 175, 18, 198, 12, 215, 49, 269, 34, 308, 13, 326, 34, 364, 16],
		"s":["of", "query", "execution", "can", "be", "measured", "simply", "by", "timing", "the"],
		"ss":"of query execution can be measured simply by timing the"},
		{"l":412, "t":71, "r":603, "b":85,
		"q":[412, 19, 446, 55, 505, 13, 522, 81],
		"s":["5.3", "Fairness", "of", "Comparison"],
		"ss":"5.3 Fairness of Comparison"},
		{"l":73, "t":88, "r":381, "b":98,
		"q":[73, 35, 111, 46, 160, 10, 174, 41, 218, 16, 238, 34, 276, 25, 305, 12, 320, 33, 357, 24],
		"s":["virtual", "machine,", "in", "practice", "the", "results", "must", "be", "moved", "back"],
		"ss":"virtual machine, in practice the results must be moved back"},
		{"l":423, "t":91, "r":720, "b":101,
		"q":[423, 30, 457, 27, 487, 17, 508, 24, 535, 28, 566, 11, 580, 41, 624, 59, 686, 34],
		"s":["Every", "eﬀort", "has", "been", "made", "to", "produce", "comparison", "results"],
		"ss":"Every eﬀort has been made to produce comparison results"},
		{"l":73, "t":101, "r":381, "b":111,
		"q":[73, 11, 88, 16, 110, 26, 141, 11, 156, 12, 174, 30, 209, 11, 224, 16, 246, 22, 273, 41, 322, 23, 351, 8, 364, 17],
		"s":["to", "the", "CPU", "to", "be", "useful", "to", "the", "host", "process.", "This", "is", "im-"],
		"ss":"to the CPU to be useful to the host process. This is im-"},
		{"l":412, "t":104, "r":597, "b":115,
		"q":[412, 22, 437, 16, 457, 11, 472, 63, 539, 11, 553, 44],
		"s":["that", "are", "as", "conservative", "as", "possible."],
		"ss":"that are as conservative as possible."},
		{"l":73, "t":115, "r":381, "b":125,
		"q":[73, 53, 131, 11, 146, 6, 157, 44, 206, 41, 254, 28, 288, 16, 309, 22, 336, 45],
		"s":["plemented", "as", "a", "two-step", "process.", "First,", "the", "host", "transfers"],
		"ss":"plemented as a two-step process. First, the host transfers"},
		{"l":73, "t":128, "r":381, "b":138,
		"q":[73, 6, 84, 27, 116, 10, 131, 60, 196, 30, 231, 16, 253, 29, 287, 15, 306, 24, 335, 24, 364, 17],
		"s":["a", "block", "of", "information", "about", "the", "result", "set", "back", "from", "the"],
		"ss":"a block of information about the result set back from the"},
		{"l":429, "t":128, "r":435, "b":143,
		"q":[429, 6],
		"s":["•"],
		"ss":"•"},
		{"l":441, "t":130, "r":720, "b":141,
		"q":[441, 26, 470, 13, 487, 16, 507, 26, 537, 20, 561, 17, 582, 24, 611, 47, 662, 34, 700, 20],
		"s":["Data", "on", "the", "CPU", "side", "has", "been", "explicitly", "loaded", "into"],
		"ss":"Data on the CPU side has been explicitly loaded into"},
		{"l":73, "t":141, "r":381, "b":152,
		"q":[73, 30, 107, 23, 135, 60, 200, 43, 248, 16, 269, 29, 303, 10, 317, 6, 328, 29, 362, 19],
		"s":["GPU.", "This", "information", "contains", "the", "stride", "of", "a", "result", "row"],
		"ss":"GPU. This information contains the stride of a result row"},
		{"l":441, "t":144, "r":720, "b":154,
		"q":[441, 44, 493, 22, 522, 58, 587, 53, 647, 21, 675, 44],
		"s":["memory,", "thus", "eliminating", "mid-query", "disk", "accesses."],
		"ss":"memory, thus eliminating mid-query disk accesses."},
		{"l":73, "t":155, "r":381, "b":165,
		"q":[73, 19, 96, 16, 118, 39, 162, 10, 176, 29, 210, 27, 244, 20, 269, 26, 299, 50, 354, 26],
		"s":["and", "the", "number", "of", "result", "rows.", "The", "CPU", "multiplies", "these"],
		"ss":"and the number of result rows. The CPU multiplies these"},
		{"l":441, "t":157, "r":720, "b":168,
		"q":[441, 36, 481, 17, 502, 66, 571, 11, 585, 36, 625, 6, 635, 54, 693, 27],
		"s":["SQLite", "has", "functionality", "to", "declare", "a", "temporary", "data-"],
		"ss":"SQLite has functionality to declare a temporary data-"},
		{"l":73, "t":168, "r":381, "b":179,
		"q":[73, 31, 108, 11, 123, 51, 178, 16, 199, 43, 246, 19, 269, 10, 283, 16, 303, 29, 336, 31, 373, 8],
		"s":["values", "to", "determine", "the", "absolute", "size", "of", "the", "result", "block.", "If"],
		"ss":"values to determine the absolute size of the result block. If"},
		{"l":441, "t":171, "r":720, "b":181,
		"q":[441, 22, 467, 22, 493, 29, 527, 22, 553, 10, 567, 44, 618, 26, 648, 51, 703, 16],
		"s":["base", "that", "exists", "only", "in", "memory.", "Once", "initalized,", "the"],
		"ss":"base that exists only in memory. Once initalized, the"},
		{"l":73, "t":182, "r":381, "b":192,
		"q":[73, 26, 103, 16, 124, 21, 149, 23, 177, 23, 205, 13, 222, 29, 255, 42, 301, 24, 329, 8, 342, 39],
		"s":["there", "are", "zero", "rows", "then", "no", "result", "memory", "copy", "is", "needed,"],
		"ss":"there are zero rows then no result memory copy is needed,"},
		{"l":441, "t":184, "r":720, "b":195,
		"q":[441, 23, 467, 15, 485, 8, 496, 45, 544, 19, 567, 38, 609, 44, 656, 19, 679, 21, 703, 16],
		"s":["data", "set", "is", "attached", "and", "named.", "Without", "this", "step", "the"],
		"ss":"data set is attached and named. Without this step the"},
		{"l":73, "t":195, "r":381, "b":206,
		"q":[73, 49, 126, 6, 136, 42, 182, 24, 210, 8, 222, 23, 250, 11, 264, 40, 309, 16, 330, 29, 363, 18],
		"s":["otherwise", "a", "memory", "copy", "is", "used", "to", "transfer", "the", "result", "set."],
		"ss":"otherwise a memory copy is used to transfer the result set."},
		{"l":441, "t":198, "r":720, "b":208,
		"q":[441, 26, 472, 81, 558, 8, 571, 29, 605, 11, 620, 27, 652, 32, 689, 18, 712, 8],
		"s":["GPU", "implementation", "is", "closer", "to", "200X", "faster,", "but", "it"],
		"ss":"GPU implementation is closer to 200X faster, but it"},
		{"l":73, "t":209, "r":381, "b":219,
		"q":[73, 25, 101, 22, 127, 40, 171, 14, 188, 27, 219, 37, 260, 21, 284, 25, 313, 16, 333, 29, 366, 15],
		"s":["Note", "that", "because", "we", "know", "exactly", "how", "large", "the", "result", "set"],
		"ss":"Note that because we know exactly how large the result set"},
		{"l":441, "t":211, "r":720, "b":222,
		"q":[441, 32, 478, 14, 497, 6, 508, 27, 541, 62, 611, 8, 624, 32, 662, 16, 684, 23, 712, 8],
		"s":["makes", "for", "a", "fairer", "comparison:", "it", "means", "the", "data", "is"],
		"ss":"makes for a fairer comparison: it means the data is"},
		{"l":73, "t":222, "r":381, "b":233,
		"q":[73, 11, 89, 14, 108, 13, 125, 17, 147, 23, 176, 11, 191, 40, 236, 16, 258, 29, 292, 27, 324, 10, 339, 42],
		"s":["is,", "we", "do", "not", "have", "to", "transfer", "the", "entire", "block", "of", "memory"],
		"ss":"is, we do not have to transfer the entire block of memory"},
		{"l":441, "t":225, "r":720, "b":235,
		"q":[441, 34, 478, 56, 537, 20, 561, 42, 606, 14, 624, 24, 652, 16, 672, 26, 701, 19],
		"s":["loaded", "completely", "into", "memory", "for", "both", "the", "CPU", "and"],
		"ss":"loaded completely into memory for both the CPU and"},
		{"l":73, "t":236, "r":336, "b":246,
		"q":[73, 46, 123, 14, 141, 16, 162, 29, 195, 18, 217, 32, 253, 52, 309, 26],
		"s":["allocated", "for", "the", "result", "set,", "saving", "signiﬁcant", "time."],
		"ss":"allocated for the result set, saving signiﬁcant time."},
		{"l":441, "t":238, "r":491, "b":249,
		"q":[441, 16, 461, 30],
		"s":["the", "GPU."],
		"ss":"the GPU."},
		{"l":73, "t":264, "r":221, "b":277,
		"q":[73, 12, 100, 122],
		"s":["5.", "PERFORMANCE"],
		"ss":"5. PERFORMANCE"},
		{"l":429, "t":260, "r":435, "b":275,
		"q":[429, 6],
		"s":["•"],
		"ss":"•"},
		{"l":441, "t":262, "r":720, "b":273,
		"q":[441, 36, 482, 17, 503, 24, 532, 46, 582, 23, 610, 16, 631, 24, 659, 9, 672, 47],
		"s":["SQLite", "has", "been", "compiled", "with", "the", "Intel", "C", "Compiler"],
		"ss":"SQLite has been compiled with the Intel C Compiler"},
		{"l":441, "t":276, "r":658, "b":286,
		"q":[441, 36, 480, 24, 510, 9, 522, 8, 534, 51, 588, 23, 615, 16, 635, 23],
		"s":["version", "11.1.", "It", "is", "optimized", "with", "the", "ﬂags"],
		"ss":"version 11.1. It is optimized with the ﬂags"},
		{"l":661, "t":276, "r":680, "b":287,
		"q":[661, 18],
		"s":["-O2"],
		"ss":"-O2"},
		{"l":679, "t":276, "r":720, "b":286,
		"q":[679, 3, 686, 16, 706, 14],
		"s":[",", "the", "fa-"],
		"ss":", the fa-"},
		{"l":73, "t":290, "r":163, "b":304,
		"q":[73, 19, 107, 32, 143, 21],
		"s":["5.1", "Data", "Set"],
		"ss":"5.1 Data Set"},
		{"l":441, "t":289, "r":720, "b":300,
		"q":[441, 30, 516, 26, 587, 65, 698, 22],
		"s":["miliar", "basic", "optimization", "ﬂag,"],
		"ss":"miliar basic optimization ﬂag,"},
		{"l":441, "t":303, "r":477, "b":314,
		"q":[441, 36],
		"s":["-xHost"],
		"ss":"-xHost"},
		{"l":477, "t":303, "r":720, "b":313,
		"q":[477, 3, 484, 30, 517, 38, 559, 89, 651, 69],
		"s":[",", "which", "enables", "processor-speciﬁc", "optimization,"],
		"ss":", which enables processor-speciﬁc optimization,"},
		{"l":84, "t":310, "r":381, "b":320,
		"q":[84, 20, 110, 23, 139, 23, 168, 14, 188, 64, 258, 35, 299, 17, 322, 18, 345, 36],
		"s":["The", "data", "used", "for", "performance", "testing", "has", "ﬁve", "million"],
		"ss":"The data used for performance testing has ﬁve million"},
		{"l":441, "t":316, "r":460, "b":327,
		"q":[441, 19],
		"s":["and"],
		"ss":"and"},
		{"l":466, "t":317, "r":490, "b":327,
		"q":[466, 24],
		"s":["-ipo"],
		"ss":"-ipo"},
		{"l":490, "t":316, "r":720, "b":327,
		"q":[490, 3, 500, 30, 536, 38, 579, 65, 650, 31, 687, 32],
		"s":[",", "which", "enables", "optimization", "across", "source"],
		"ss":", which enables optimization across source"},
		{"l":73, "t":323, "r":381, "b":334,
		"q":[73, 23, 101, 23, 129, 13, 147, 10, 162, 41, 208, 26, 239, 35, 279, 46, 330, 19, 354, 26],
		"s":["rows", "with", "an", "id", "column,", "three", "integer", "columns,", "and", "three"],
		"ss":"rows with an id column, three integer columns, and three"},
		{"l":441, "t":330, "r":720, "b":340,
		"q":[441, 23, 469, 23, 495, 29, 527, 36, 566, 11, 580, 12, 595, 11, 609, 19, 631, 11, 644, 44, 693, 27],
		"s":["ﬁles.", "This", "forces", "SQLite", "to", "be", "as", "fast", "as", "possible:", "with-"],
		"ss":"ﬁles. This forces SQLite to be as fast as possible: with-"},
		{"l":73, "t":337, "r":381, "b":347,
		"q":[73, 39, 117, 27, 149, 46, 204, 20, 230, 23, 258, 17, 281, 24, 310, 50, 366, 15],
		"s":["ﬂoating", "point", "columns.", "The", "data", "has", "been", "generated", "us-"],
		"ss":"ﬂoating point columns. The data has been generated us-"},
		{"l":441, "t":343, "r":719, "b":354,
		"q":[441, 17, 462, 65, 531, 36, 571, 46, 621, 62, 687, 32],
		"s":["out", "optimization", "SQLite", "performs", "signiﬁcantly", "worse."],
		"ss":"out optimization SQLite performs signiﬁcantly worse."},
		{"l":73, "t":350, "r":381, "b":361,
		"q":[73, 16, 93, 17, 113, 27, 144, 45, 193, 43, 240, 40, 283, 39, 327, 54],
		"s":["ing", "the", "GNU", "scientiﬁc", "library’s", "random", "number", "generation"],
		"ss":"ing the GNU scientiﬁc library’s random number generation"},
		{"l":73, "t":364, "r":381, "b":374,
		"q":[73, 68, 147, 21, 172, 38, 214, 10, 227, 23, 254, 23, 282, 23, 309, 17, 330, 6, 340, 41],
		"s":["functionality.", "One", "column", "of", "each", "data", "type", "has", "a", "uniform"],
		"ss":"functionality. One column of each data type has a uniform"},
		{"l":429, "t":364, "r":435, "b":379,
		"q":[429, 6],
		"s":["•"],
		"ss":"•"},
		{"l":441, "t":367, "r":720, "b":378,
		"q":[441, 51, 495, 16, 514, 31, 548, 11, 561, 36, 601, 11, 614, 40, 657, 23, 683, 11, 696, 24],
		"s":["Directives", "are", "issued", "to", "SQLite", "at", "compile", "time", "to", "omit"],
		"ss":"Directives are issued to SQLite at compile time to omit"},
		{"l":73, "t":377, "r":381, "b":388,
		"q":[73, 61, 137, 10, 150, 16, 170, 28, 202, 32, 237, 28, 268, 18, 289, 38, 330, 17, 350, 6, 360, 21],
		"s":["distribution", "in", "the", "range", "[-99.0,", "99.0],", "one", "column", "has", "a", "nor-"],
		"ss":"distribution in the range [-99.0, 99.0], one column has a nor-"},
		{"l":441, "t":381, "r":720, "b":391,
		"q":[441, 13, 458, 34, 497, 53, 554, 19, 579, 25, 609, 13, 626, 54, 685, 20, 710, 10],
		"s":["all", "thread", "protection", "and", "store", "all", "temporary", "ﬁles", "in"],
		"ss":"all thread protection and store all temporary ﬁles in"},
		{"l":73, "t":391, "r":381, "b":401,
		"q":[73, 19, 96, 61, 160, 23, 187, 6, 197, 30, 230, 10, 244, 9, 257, 19, 280, 16, 300, 19, 322, 38, 364, 17],
		"s":["mal", "distribution", "with", "a", "sigma", "of", "5,", "and", "the", "last", "column", "has"],
		"ss":"mal distribution with a sigma of 5, and the last column has"},
		{"l":441, "t":394, "r":720, "b":405,
		"q":[441, 42, 487, 32, 523, 24, 551, 13, 568, 24, 598, 30, 633, 49, 686, 34],
		"s":["memory", "rather", "than", "on", "disk.", "These", "directives", "reduce"],
		"ss":"memory rather than on disk. These directives reduce"},
		{"l":73, "t":404, "r":381, "b":415,
		"q":[73, 6, 82, 36, 122, 61, 187, 23, 214, 6, 224, 30, 257, 10, 270, 15, 291, 36, 331, 19, 354, 27],
		"s":["a", "normal", "distribution", "with", "a", "sigma", "of", "20.", "Integer", "and", "ﬂoat-"],
		"ss":"a normal distribution with a sigma of 20. Integer and ﬂoat-"},
		{"l":441, "t":408, "r":587, "b":418,
		"q":[441, 46, 490, 13, 507, 36, 547, 39],
		"s":["overhead", "on", "SQLite", "queries."],
		"ss":"overhead on SQLite queries."},
		{"l":73, "t":418, "r":381, "b":428,
		"q":[73, 16, 92, 27, 123, 23, 150, 27, 181, 23, 208, 34, 248, 20, 272, 40, 315, 65],
		"s":["ing", "point", "data", "types", "were", "tested.", "The", "random", "distributions"],
		"ss":"ing point data types were tested. The random distributions"},
		{"l":73, "t":431, "r":381, "b":442,
		"q":[73, 38, 114, 71, 187, 23, 213, 53, 270, 34, 306, 19, 328, 28, 359, 22],
		"s":["provide", "unpredictable", "data", "processing", "results", "and", "mean", "that"],
		"ss":"provide unpredictable data processing results and mean that"},
		{"l":429, "t":429, "r":435, "b":444,
		"q":[429, 6],
		"s":["•"],
		"ss":"•"},
		{"l":441, "t":432, "r":720, "b":442,
		"q":[441, 36, 481, 42, 527, 8, 539, 17, 561, 23, 588, 10, 602, 16, 623, 62, 690, 29],
		"s":["Pinned", "memory", "is", "not", "used", "in", "the", "comparison.", "Using"],
		"ss":"Pinned memory is not used in the comparison. Using"},
		{"l":73, "t":445, "r":381, "b":455,
		"q":[73, 16, 94, 19, 116, 10, 130, 16, 151, 29, 185, 15, 204, 29, 238, 29, 271, 13, 288, 16, 309, 37, 350, 10, 364, 16],
		"s":["the", "size", "of", "the", "result", "set", "varies", "based", "on", "the", "criteria", "of", "the"],
		"ss":"the size of the result set varies based on the criteria of the"},
		{"l":441, "t":445, "r":720, "b":456,
		"q":[441, 35, 479, 42, 524, 46, 574, 33, 610, 45, 658, 42, 703, 16],
		"s":["pinned", "memory", "generally", "speeds", "transfers", "between", "the"],
		"ss":"pinned memory generally speeds transfers between the"},
		{"l":73, "t":458, "r":155, "b":469,
		"q":[73, 47, 124, 31],
		"s":["SELECT", "query."],
		"ss":"SELECT query."},
		{"l":441, "t":459, "r":720, "b":469,
		"q":[441, 22, 465, 19, 487, 32, 522, 13, 537, 6, 546, 30, 579, 10, 591, 22, 618, 23, 644, 32, 679, 22, 703, 16],
		"s":["host", "and", "device", "by", "a", "factor", "of", "two.", "This", "means", "that", "the"],
		"ss":"host and device by a factor of two. This means that the"},
		{"l":84, "t":472, "r":381, "b":482,
		"q":[84, 14, 101, 19, 123, 16, 143, 64, 210, 10, 223, 16, 242, 84, 330, 12, 345, 36],
		"s":["To", "test", "the", "performance", "of", "the", "implementation,", "13", "queries"],
		"ss":"To test the performance of the implementation, 13 queries"},
		{"l":441, "t":472, "r":720, "b":483,
		"q":[441, 26, 471, 34, 509, 34, 546, 22, 572, 37, 613, 16, 634, 42, 680, 40],
		"s":["GPU", "timing", "results", "that", "include", "the", "memory", "transfer"],
		"ss":"GPU timing results that include the memory transfer"},
		{"l":73, "t":485, "r":381, "b":496,
		"q":[73, 23, 100, 41, 145, 48, 196, 10, 210, 50, 264, 12, 280, 22, 306, 10, 320, 16, 340, 41],
		"s":["were", "written,", "displayed", "in", "Appendix", "A.", "Five", "of", "the", "thirteen"],
		"ss":"were written, displayed in Appendix A. Five of the thirteen"},
		{"l":441, "t":486, "r":720, "b":496,
		"q":[441, 16, 459, 29, 491, 24, 518, 23, 544, 31, 577, 12, 593, 7, 603, 19, 625, 36, 664, 19, 686, 34],
		"s":["are", "worse", "than", "they", "would", "be", "if", "this", "feature", "was", "turned"],
		"ss":"are worse than they would be if this feature was turned"},
		{"l":73, "t":499, "r":381, "b":509,
		"q":[73, 29, 107, 35, 147, 35, 188, 18, 211, 29, 245, 39, 289, 27, 322, 35, 362, 19],
		"s":["query", "integer", "values,", "ﬁve", "query", "ﬂoating", "point", "values,", "and"],
		"ss":"query integer values, ﬁve query ﬂoating point values, and"},
		{"l":441, "t":499, "r":456, "b":510,
		"q":[441, 16],
		"s":["on."],
		"ss":"on."},
		{"l":73, "t":512, "r":381, "b":523,
		"q":[73, 16, 93, 22, 120, 6, 129, 19, 153, 16, 173, 60, 237, 50, 293, 20, 317, 36, 357, 23],
		"s":["the", "ﬁnal", "3", "test", "the", "aggregation", "functions.", "The", "queries", "were"],
		"ss":"the ﬁnal 3 test the aggregation functions. The queries were"},
		{"l":73, "t":526, "r":381, "b":536,
		"q":[73, 45, 123, 41, 170, 16, 192, 26, 223, 36, 266, 35, 306, 46, 358, 23],
		"s":["executed", "through", "the", "CPU", "SQLite", "virtual", "machine,", "then"],
		"ss":"executed through the CPU SQLite virtual machine, then"},
		{"l":429, "t":520, "r":435, "b":535,
		"q":[429, 6],
		"s":["•"],
		"ss":"•"},
		{"l":441, "t":523, "r":720, "b":533,
		"q":[441, 38, 483, 24, 511, 16, 531, 22, 557, 29, 590, 16, 610, 17, 631, 31, 668, 11, 683, 36],
		"s":["Results", "from", "the", "host", "query", "are", "not", "saved.", "In", "SQLite"],
		"ss":"Results from the host query are not saved. In SQLite"},
		{"l":73, "t":539, "r":381, "b":550,
		"q":[73, 41, 119, 16, 140, 26, 171, 35, 211, 46, 262, 19, 286, 16, 308, 40, 353, 28],
		"s":["through", "the", "GPU", "virtual", "machine,", "and", "the", "running", "times"],
		"ss":"through the GPU virtual machine, and the running times"},
		{"l":441, "t":537, "r":723, "b":547,
		"q":[441, 34, 477, 16, 495, 44, 542, 13, 557, 38, 598, 6, 606, 42, 651, 43, 696, 28],
		"s":["results", "are", "returned", "by", "passing", "a", "callback", "function", "along"],
		"ss":"results are returned by passing a callback function along"},
		{"l":73, "t":553, "r":381, "b":563,
		"q":[73, 23, 101, 53, 163, 23, 190, 54, 249, 19, 273, 16, 295, 23, 323, 43, 370, 11],
		"s":["were", "compared.", "Also", "considered", "was", "the", "time", "required", "to"],
		"ss":"were compared. Also considered was the time required to"},
		{"l":441, "t":550, "r":720, "b":560,
		"q":[441, 23, 468, 16, 489, 23, 516, 31, 553, 23, 581, 8, 593, 15, 612, 11, 626, 23, 653, 30, 687, 32],
		"s":["with", "the", "SQL", "query.", "This", "is", "set", "to", "null,", "which", "means"],
		"ss":"with the SQL query. This is set to null, which means"},
		{"l":73, "t":566, "r":381, "b":577,
		"q":[73, 40, 118, 16, 141, 26, 173, 29, 207, 15, 228, 24, 257, 16, 280, 32, 317, 11, 334, 16, 356, 25],
		"s":["transfer", "the", "GPU", "result", "set", "from", "the", "device", "to", "the", "host."],
		"ss":"transfer the GPU result set from the device to the host."},
		{"l":441, "t":564, "r":720, "b":574,
		"q":[441, 22, 467, 22, 493, 29, 527, 34, 565, 16, 585, 37, 626, 26, 656, 27, 688, 32],
		"s":["that", "host", "query", "results", "are", "thrown", "away", "while", "device"],
		"ss":"that host query results are thrown away while device"},
		{"l":73, "t":580, "r":381, "b":590,
		"q":[73, 20, 98, 19, 121, 10, 135, 16, 157, 29, 190, 15, 210, 10, 224, 23, 252, 14, 271, 23, 299, 29, 333, 8, 345, 35],
		"s":["The", "size", "of", "the", "result", "set", "in", "rows", "for", "each", "query", "is", "shown,"],
		"ss":"The size of the result set in rows for each query is shown,"},
		{"l":441, "t":577, "r":720, "b":587,
		"q":[441, 29, 476, 34, 515, 16, 537, 47, 591, 28, 625, 11, 641, 44, 697, 23],
		"s":["query", "results", "are", "explicitly", "saved", "to", "memory.", "This"],
		"ss":"query results are explicitly saved to memory. This"},
		{"l":73, "t":593, "r":381, "b":604,
		"q":[73, 11, 87, 19, 111, 62, 177, 33, 214, 29, 247, 67, 320, 20, 345, 36],
		"s":["as", "this", "signiﬁcantly", "aﬀects", "query", "performance.", "The", "queries"],
		"ss":"as this signiﬁcantly aﬀects query performance. The queries"},
		{"l":441, "t":591, "r":643, "b":601,
		"q":[441, 32, 476, 16, 497, 16, 517, 36, 558, 49, 611, 32],
		"s":["makes", "the", "the", "SQLite", "execution", "faster."],
		"ss":"makes the the SQLite execution faster."},
		{"l":73, "t":607, "r":381, "b":617,
		"q":[73, 23, 101, 34, 140, 11, 155, 64, 224, 16, 245, 48, 298, 10, 312, 47, 364, 17],
		"s":["were", "chosen", "to", "demonstrate", "the", "ﬂexibility", "of", "currently", "im-"],
		"ss":"were chosen to demonstrate the ﬂexibility of currently im-"},
		{"l":73, "t":620, "r":381, "b":631,
		"q":[73, 53, 129, 29, 162, 58, 224, 19, 246, 11, 261, 38, 302, 6, 312, 24, 339, 28, 371, 10],
		"s":["plemented", "query", "capabilities", "and", "to", "provide", "a", "wide", "range", "of"],
		"ss":"plemented query capabilities and to provide a wide range of"},
		{"l":412, "t":614, "r":494, "b":628,
		"q":[412, 19, 446, 48],
		"s":["5.4", "Results"],
		"ss":"5.4 Results"},
		{"l":73, "t":634, "r":296, "b":644,
		"q":[73, 74, 151, 45, 200, 19, 223, 29, 256, 15, 274, 22],
		"s":["computational", "intensity", "and", "result", "set", "size."],
		"ss":"computational intensity and result set size."},
		{"l":423, "t":633, "r":720, "b":644,
		"q":[423, 29, 455, 6, 464, 30, 497, 16, 517, 28, 548, 34, 584, 14, 602, 16, 621, 18, 642, 35, 681, 39],
		"s":["Table", "1", "shows", "the", "mean", "results", "for", "the", "ﬁve", "integer", "queries,"],
		"ss":"Table 1 shows the mean results for the ﬁve integer queries,"},
		{"l":84, "t":647, "r":381, "b":657,
		"q":[84, 17, 105, 23, 132, 13, 148, 33, 185, 11, 199, 35, 238, 34, 276, 31, 310, 35, 350, 31],
		"s":["We", "have", "no", "reason", "to", "believe", "results", "would", "change", "signif-"],
		"ss":"We have no reason to believe results would change signif-"},
		{"l":412, "t":647, "r":720, "b":657,
		"q":[412, 16, 431, 18, 453, 39, 495, 27, 525, 39, 568, 16, 588, 26, 617, 60, 681, 39],
		"s":["the", "ﬁve", "ﬂoating", "point", "queries,", "the", "three", "aggregation", "queries,"],
		"ss":"the ﬁve ﬂoating point queries, the three aggregation queries,"},
		{"l":73, "t":661, "r":381, "b":671,
		"q":[73, 35, 111, 23, 138, 40, 182, 23, 209, 23, 235, 25, 264, 13, 281, 23, 308, 16, 327, 40, 371, 10],
		"s":["icantly", "with", "realistic", "data", "sets,", "since", "all", "rows", "are", "checked", "in"],
		"ss":"icantly with realistic data sets, since all rows are checked in"},
		{"l":412, "t":660, "r":720, "b":671,
		"q":[412, 19, 435, 13, 453, 10, 467, 16, 488, 39, 535, 20, 560, 24, 588, 38, 630, 25, 660, 16, 681, 39],
		"s":["and", "all", "of", "the", "queries.", "The", "rows", "column", "gives", "the", "average"],
		"ss":"and all of the queries. The rows column gives the average"},
		{"l":73, "t":674, "r":381, "b":684,
		"q":[73, 6, 84, 28, 117, 52, 175, 19, 200, 16, 222, 64, 291, 8, 304, 42, 351, 30],
		"s":["a", "select", "operation,", "and", "the", "performance", "is", "strongly", "corre-"],
		"ss":"a select operation, and the performance is strongly corre-"},
		{"l":412, "t":674, "r":720, "b":684,
		"q":[412, 39, 454, 10, 466, 24, 492, 35, 530, 11, 543, 16, 562, 29, 594, 15, 611, 34, 647, 6, 656, 31, 690, 30],
		"s":["number", "of", "rows", "output", "to", "the", "result", "set", "during", "a", "query,", "which"],
		"ss":"number of rows output to the result set during a query, which"},
		{"l":73, "t":688, "r":381, "b":698,
		"q":[73, 26, 103, 23, 130, 16, 151, 39, 194, 10, 208, 24, 236, 48, 290, 20, 315, 66],
		"s":["lated", "with", "the", "number", "of", "rows", "returned.", "The", "implemented"],
		"ss":"lated with the number of rows returned. The implemented"},
		{"l":412, "t":687, "r":720, "b":698,
		"q":[412, 8, 424, 6, 434, 14, 452, 16, 473, 49, 526, 47, 578, 26, 608, 40, 652, 16, 673, 47],
		"s":["is", "1", "for", "the", "aggregate", "functions", "data,", "because", "the", "functions"],
		"ss":"is 1 for the aggregate functions data, because the functions"},
		{"l":73, "t":701, "r":381, "b":711,
		"q":[73, 53, 130, 13, 146, 43, 193, 23, 219, 22, 245, 38, 287, 44, 335, 46],
		"s":["reductions", "all", "function", "such", "that", "strange", "selection", "patterns,"],
		"ss":"reductions all function such that strange selection patterns,"},
		{"l":412, "t":701, "r":720, "b":711,
		"q":[412, 66, 481, 34, 518, 27, 549, 11, 562, 6, 571, 29, 604, 27, 634, 31, 668, 13, 684, 24, 710, 10],
		"s":["implemented", "reduce", "down", "to", "a", "single", "value", "across", "all", "rows", "of"],
		"ss":"implemented reduce down to a single value across all rows of"},
		{"l":73, "t":715, "r":381, "b":725,
		"q":[73, 23, 99, 11, 113, 44, 161, 27, 192, 23, 218, 22, 244, 11, 258, 44, 306, 23, 333, 23, 359, 22],
		"s":["such", "as", "selecting", "every", "even", "row,", "or", "selecting", "rows", "such", "that"],
		"ss":"such as selecting every even row, or selecting rows such that"},
		{"l":412, "t":714, "r":720, "b":725,
		"q":[412, 16, 432, 23, 459, 18, 482, 20, 506, 28, 537, 42, 583, 31, 617, 13, 634, 36, 673, 19, 696, 24],
		"s":["the", "data", "set.", "The", "mean", "speedup", "across", "all", "queries", "was", "50X,"],
		"ss":"the data set. The mean speedup across all queries was 50X,"},
		{"l":73, "t":728, "r":381, "b":738,
		"q":[73, 22, 99, 16, 120, 21, 144, 38, 187, 10, 201, 6, 211, 61, 276, 35, 315, 6, 325, 29, 359, 22],
		"s":["only", "the", "ﬁrst", "threads", "in", "a", "threadblock", "output", "a", "result", "row,"],
		"ss":"only the ﬁrst threads in a threadblock output a result row,"},
		{"l":412, "t":728, "r":720, "b":738,
		"q":[412, 30, 445, 19, 466, 40, 509, 11, 523, 21, 546, 27, 576, 16, 596, 34, 632, 40, 675, 23, 701, 19],
		"s":["which", "was", "reduced", "to", "36X", "when", "the", "results", "transfer", "time", "was"],
		"ss":"which was reduced to 36X when the results transfer time was"},
		{"l":73, "t":741, "r":381, "b":752,
		"q":[73, 27, 104, 13, 120, 49, 174, 10, 188, 67, 260, 75, 340, 14, 357, 23],
		"s":["make", "no", "diﬀerence", "in", "performance.", "Unfortunately,", "we", "have"],
		"ss":"make no diﬀerence in performance. Unfortunately, we have"},
		{"l":412, "t":741, "r":720, "b":752,
		"q":[412, 47, 465, 23, 492, 32, 529, 22, 555, 13, 572, 42, 618, 40, 663, 16, 684, 36],
		"s":["included.", "This", "means", "that", "on", "average,", "running", "the", "queries"],
		"ss":"included. This means that on average, running the queries"},
		{"l":73, "t":755, "r":381, "b":765,
		"q":[73, 17, 95, 16, 116, 24, 145, 21, 171, 11, 186, 15, 206, 13, 224, 19, 248, 23, 276, 19, 301, 11, 316, 41, 362, 19],
		"s":["not", "yet", "been", "able", "to", "set", "up", "real", "data", "sets", "to", "validate", "this"],
		"ss":"not yet been able to set up real data sets to validate this"},
		{"l":412, "t":755, "r":720, "b":765,
		"q":[412, 13, 428, 16, 449, 38, 491, 38, 533, 34, 570, 13, 587, 11, 602, 16, 622, 26, 653, 19, 676, 44],
		"s":["on", "the", "dataset", "already", "loaded", "on", "to", "the", "GPU", "and", "transfer-"],
		"ss":"on the dataset already loaded on to the GPU and transfer-"},
		{"l":73, "t":768, "r":381, "b":779,
		"q":[73, 58, 135, 19, 159, 19, 183, 8, 196, 53, 253, 17, 275, 14, 294, 31, 330, 28, 363, 18],
		"s":["hypothesis,", "and", "this", "is", "something", "left", "for", "future", "work,", "but"],
		"ss":"hypothesis, and this is something left for future work, but"},
		{"l":412, "t":768, "r":720, "b":779,
		"q":[412, 20, 437, 16, 458, 29, 492, 15, 511, 24, 539, 19, 563, 21, 588, 29, 621, 24, 650, 49, 703, 16],
		"s":["ring", "the", "result", "set", "back", "was", "36X", "faster", "than", "executing", "the"],
		"ss":"ring the result set back was 36X faster than executing the"},
		{"l":73, "t":782, "r":381, "b":792,
		"q":[73, 26, 103, 8, 114, 24, 142, 33, 179, 11, 193, 34, 230, 43, 276, 64, 344, 37],
		"s":["there", "is", "little", "reason", "to", "expect", "diﬀerent", "performance", "results."],
		"ss":"there is little reason to expect diﬀerent performance results."},
		{"l":412, "t":782, "r":720, "b":792,
		"q":[412, 29, 444, 13, 460, 16, 480, 26, 509, 41, 554, 40, 598, 20, 622, 44, 670, 14, 687, 16, 707, 13],
		"s":["query", "on", "the", "CPU", "through", "SQLite.", "The", "numbers", "for", "the", "all"],
		"ss":"query on the CPU through SQLite. The numbers for the all"},
		{"l":412, "t":795, "r":720, "b":806,
		"q":[412, 19, 434, 16, 453, 52, 508, 23, 535, 16, 555, 57, 615, 10, 628, 16, 648, 23, 674, 46],
		"s":["row", "are", "calculated", "with", "the", "summation", "of", "the", "time", "columns,"],
		"ss":"row are calculated with the summation of the time columns,"},
		{"l":73, "t":803, "r":174, "b":816,
		"q":[73, 19, 107, 67],
		"s":["5.2", "Hardware"],
		"ss":"5.2 Hardware"},
		{"l":412, "t":809, "r":556, "b":819,
		"q":[412, 19, 435, 16, 455, 22, 481, 76],
		"s":["and", "are", "thus", "time-weighted."],
		"ss":"and are thus time-weighted."},
		{"l":84, "t":822, "r":381, "b":833,
		"q":[84, 20, 108, 64, 174, 34, 211, 23, 237, 45, 285, 24, 312, 13, 327, 24, 354, 27],
		"s":["The", "performance", "results", "were", "gathered", "from", "an", "Intel", "Xeon"],
		"ss":"The performance results were gathered from an Intel Xeon"},
		{"l":423, "t":822, "r":720, "b":833,
		"q":[423, 33, 460, 6, 470, 57, 530, 30, 564, 16, 584, 42, 629, 19, 651, 42, 697, 23],
		"s":["Figure", "1", "graphically", "shows", "the", "speedup", "and", "speedup", "with"],
		"ss":"Figure 1 graphically shows the speedup and speedup with"},
		{"l":73, "t":836, "r":381, "b":846,
		"q":[73, 33, 108, 43, 153, 40, 196, 30, 228, 34, 267, 20, 290, 48, 341, 8, 351, 6, 360, 21],
		"s":["X5550", "machine", "running", "Linux", "2.6.24.", "The", "processor", "is", "a", "2.66"],
		"ss":"X5550 machine running Linux 2.6.24. The processor is a 2.66"},
		{"l":412, "t":836, "r":720, "b":846,
		"q":[412, 40, 456, 23, 484, 10, 498, 16, 519, 31, 555, 39, 601, 22, 628, 51, 684, 36],
		"s":["transfer", "time", "of", "the", "tested", "queries.", "Odd", "numbered", "queries"],
		"ss":"transfer time of the tested queries. Odd numbered queries"},
		{"l":73, "t":849, "r":381, "b":860,
		"q":[73, 23, 101, 12, 119, 15, 138, 54, 198, 56, 259, 25, 289, 48, 343, 38],
		"s":["GHz", "64", "bit", "quad-core,", "supporting", "eight", "hardware", "threads"],
		"ss":"GHz 64 bit quad-core, supporting eight hardware threads"},
		{"l":412, "t":849, "r":720, "b":860,
		"q":[412, 16, 431, 35, 469, 39, 512, 23, 538, 51, 592, 36, 632, 16, 651, 39, 693, 27],
		"s":["are", "integer", "queries,", "even", "numbered", "queries", "are", "ﬂoating", "point"],
		"ss":"are integer queries, even numbered queries are ﬂoating point"},
		{"l":73, "t":863, "r":381, "b":873,
		"q":[73, 23, 102, 51, 159, 59, 224, 10, 240, 12, 258, 42, 312, 20, 338, 43],
		"s":["with", "maximum", "throughput", "of", "32", "GB/sec.", "The", "machine"],
		"ss":"with maximum throughput of 32 GB/sec. The machine"},
		{"l":412, "t":863, "r":720, "b":873,
		"q":[412, 39, 456, 19, 480, 16, 501, 22, 529, 6, 539, 36, 580, 16, 601, 60, 666, 26, 699, 20],
		"s":["queries,", "and", "the", "ﬁnal", "3", "queries", "are", "aggregation", "calls.", "The"],
		"ss":"queries, and the ﬁnal 3 queries are aggregation calls. The"},
		{"l":73, "t":876, "r":381, "b":886,
		"q":[73, 17, 95, 6, 106, 48, 159, 10, 174, 44, 226, 20, 252, 43, 300, 22, 327, 23, 355, 8, 368, 13],
		"s":["has", "5", "gigabytes", "of", "memory.", "The", "graphics", "card", "used", "is", "an"],
		"ss":"has 5 gigabytes of memory. The graphics card used is an"},
		{"l":412, "t":876, "r":720, "b":887,
		"q":[412, 30, 448, 30, 484, 16, 507, 52, 565, 52, 624, 10, 640, 42, 688, 31],
		"s":["graph", "shows", "the", "signiﬁcant", "deviations", "in", "speedup", "values"],
		"ss":"graph shows the signiﬁcant deviations in speedup values"},
		{"l":73, "t":890, "r":381, "b":900,
		"q":[73, 44, 121, 27, 152, 36, 195, 20, 219, 27, 251, 17, 272, 18, 294, 51, 350, 31],
		"s":["NVIDIA", "Tesla", "C1060.", "The", "Tesla", "has", "240", "streaming", "multi-"],
		"ss":"NVIDIA Tesla C1060. The Tesla has 240 streaming multi-"},
		{"l":412, "t":890, "r":720, "b":900,
		"q":[412, 53, 470, 13, 489, 16, 511, 37, 554, 31, 596, 20, 622, 36, 664, 10, 679, 16, 701, 18],
		"s":["depending", "on", "the", "speciﬁc", "query.", "The", "pairing", "of", "the", "two"],
		"ss":"depending on the speciﬁc query. The pairing of the two"},
		{"l":73, "t":903, "r":381, "b":913,
		"q":[73, 56, 133, 12, 149, 18, 171, 10, 185, 31, 220, 44, 269, 19, 292, 45, 341, 6, 351, 29],
		"s":["processors,", "16", "GB", "of", "global", "memory,", "and", "supports", "a", "maxi-"],
		"ss":"processors, 16 GB of global memory, and supports a maxi-"},
		{"l":412, "t":903, "r":720, "b":914,
		"q":[412, 42, 461, 73, 541, 20, 568, 69, 644, 17, 667, 52],
		"s":["speedup", "measurements", "also", "demonstrates", "the", "signiﬁcant"],
		"ss":"speedup measurements also demonstrates the signiﬁcant"},
		{"l":73, "t":917, "r":243, "b":927,
		"q":[73, 26, 103, 59, 165, 10, 179, 18, 201, 42],
		"s":["mum", "throughput", "of", "102", "GB/sec."],
		"ss":"mum throughput of 102 GB/sec."},
		{"l":412, "t":917, "r":720, "b":927,
		"q":[412, 39, 456, 10, 470, 23, 498, 22, 524, 26, 555, 39, 599, 23, 626, 11, 642, 29, 676, 9, 690, 30],
		"s":["amount", "of", "time", "that", "some", "queries,", "such", "as", "query", "6,", "spend"],
		"ss":"amount of time that some queries, such as query 6, spend"},
		{"l":402, "t":1010, "r":414, "b":1020,
		"q":[402, 12],
		"s":["99"],
		"ss":"99"}
	]},
	{"pageNum":7, "pageWidth":816, "pageHeight":1056,
	"blocks":[
		{"l":267, "t":82, "r":526, "b":92,
		"q":[267, 33, 304, 11, 321, 75, 401, 29, 434, 14, 453, 37, 495, 31],
		"s":["Table", "1:", "Performance", "Data", "by", "Query", "Type"],
		"ss":"Table 1: Performance Data by Query Type"},
		{"l":114, "t":96, "r":703, "b":106,
		"q":[114, 39, 167, 44, 224, 44, 272, 15, 291, 43, 348, 26, 377, 23, 404, 14, 432, 26, 462, 23, 489, 14, 517, 43, 564, 27, 595, 14, 623, 28, 654, 48],
		"s":["Queries", "Speedup", "Speedup", "w/", "Transfer", "CPU", "time", "(s)", "GPU", "time", "(s)", "Transfer", "Time", "(s)", "Rows", "Returned"],
		"ss":"Queries Speedup Speedup w/ Transfer CPU time (s) GPU time (s) Transfer Time (s) Rows Returned"},
		{"l":138, "t":110, "r":673, "b":120,
		"q":[138, 15, 167, 27, 224, 27, 348, 33, 432, 33, 517, 51, 623, 51],
		"s":["Int", "42.11", "28.89", "2.3843", "0.0566", "0.0259148", "1950104.4"],
		"ss":"Int 42.11 28.89 2.3843 0.0566 0.0259148 1950104.4"},
		{"l":125, "t":124, "r":673, "b":134,
		"q":[125, 28, 167, 27, 224, 27, 348, 33, 432, 33, 517, 51, 623, 51],
		"s":["Float", "59.16", "43.68", "3.5273", "0.0596", "0.0211238", "1951015.8"],
		"ss":"Float 59.16 43.68 3.5273 0.0596 0.0211238 1951015.8"},
		{"l":90, "t":138, "r":629, "b":148,
		"q":[90, 63, 167, 27, 224, 27, 348, 33, 432, 33, 517, 51, 623, 6],
		"s":["Aggregation", "36.22", "36.19", "1.0569", "0.0292", "0.0000237", "1"],
		"ss":"Aggregation 36.22 36.19 1.0569 0.0292 0.0000237 1"},
		{"l":137, "t":152, "r":679, "b":163,
		"q":[137, 15, 167, 27, 224, 27, 348, 33, 432, 33, 517, 51, 623, 57],
		"s":["All", "50.85", "36.20", "2.2737", "0.0447", "0.0180920", "1500431.08"],
		"ss":"All 50.85 36.20 2.2737 0.0447 0.0180920 1500431.08"},
		{"l":73, "t":420, "r":720, "b":430,
		"q":[73, 39, 116, 11, 132, 23, 160, 49, 213, 11, 229, 34, 267, 57, 329, 14, 348, 19, 371, 31, 406, 17, 427, 26, 458, 11, 474, 19, 497, 14, 515, 42, 562, 67, 633, 28, 665, 55],
		"s":["Figure", "1:", "The", "speedup", "of", "query", "execution", "on", "the", "GPU", "for", "each", "of", "the", "13", "queries", "considered,", "both", "including"],
		"ss":"Figure 1: The speedup of query execution on the GPU for each of the 13 queries considered, both including"},
		{"l":73, "t":434, "r":306, "b":444,
		"q":[73, 22, 99, 57, 160, 19, 184, 39, 228, 47, 279, 27],
		"s":["and", "excluding", "the", "results", "transfer", "time"],
		"ss":"and excluding the results transfer time"},
		{"l":73, "t":472, "r":381, "b":482,
		"q":[73, 60, 138, 16, 159, 29, 193, 18, 218, 11, 233, 27, 265, 39, 309, 23, 337, 11, 352, 29],
		"s":["transferring", "the", "result", "set.", "In", "other", "queries,", "such", "as", "query"],
		"ss":"transferring the result set. In other queries, such as query"},
		{"l":412, "t":472, "r":720, "b":482,
		"q":[412, 52, 469, 39, 515, 47, 569, 16, 591, 45, 643, 10, 658, 23, 687, 33],
		"s":["individual", "queries,", "including", "the", "diﬃculty", "of", "each", "opera-"],
		"ss":"individual queries, including the diﬃculty of each opera-"},
		{"l":73, "t":485, "r":381, "b":496,
		"q":[73, 9, 86, 26, 116, 8, 128, 22, 154, 24, 182, 52, 240, 20, 264, 60, 328, 36, 368, 13],
		"s":["2,", "there", "is", "very", "little", "diﬀerence.", "The", "aggregation", "queries", "all"],
		"ss":"2, there is very little diﬀerence. The aggregation queries all"},
		{"l":412, "t":485, "r":720, "b":496,
		"q":[412, 20, 437, 19, 461, 35, 501, 22, 531, 40, 576, 39, 620, 30, 656, 18, 678, 11, 694, 26],
		"s":["tion", "and", "output", "size.", "Though", "modern", "CPUs", "run", "at", "clock"],
		"ss":"tion and output size. Though modern CPUs run at clock"},
		{"l":73, "t":499, "r":381, "b":509,
		"q":[73, 19, 97, 27, 129, 39, 173, 34, 211, 18, 234, 31, 271, 34, 309, 40, 354, 26],
		"s":["had", "fairly", "average", "results", "but", "trivial", "results", "transfer", "time,"],
		"ss":"had fairly average results but trivial results transfer time,"},
		{"l":412, "t":499, "r":720, "b":509,
		"q":[412, 33, 450, 10, 464, 31, 500, 10, 515, 6, 525, 23, 554, 19, 577, 32, 614, 51, 669, 51],
		"s":["speeds", "in", "excess", "of", "2", "GHz", "and", "utilize", "extremely", "optimized"],
		"ss":"speeds in excess of 2 GHz and utilize extremely optimized"},
		{"l":73, "t":512, "r":381, "b":523,
		"q":[73, 25, 102, 16, 123, 60, 187, 47, 238, 23, 266, 13, 282, 40, 327, 11, 342, 6, 352, 29],
		"s":["since", "the", "aggregation", "functions", "used", "all", "reduced", "to", "a", "single"],
		"ss":"since the aggregation functions used all reduced to a single"},
		{"l":412, "t":512, "r":720, "b":523,
		"q":[412, 19, 435, 33, 473, 47, 525, 33, 563, 16, 584, 19, 609, 22, 635, 26, 666, 54],
		"s":["and", "deeply", "pipelined", "ALUs,", "the", "fact", "that", "these", "operations"],
		"ss":"and deeply pipelined ALUs, the fact that these operations"},
		{"l":73, "t":526, "r":381, "b":536,
		"q":[73, 32, 115, 30, 151, 47, 204, 23, 233, 18, 256, 21, 283, 17, 305, 29, 340, 41],
		"s":["result.", "These", "functions", "were", "run", "over", "the", "entire", "dataset,"],
		"ss":"result. These functions were run over the entire dataset,"},
		{"l":412, "t":526, "r":720, "b":536,
		"q":[412, 16, 433, 59, 497, 21, 523, 18, 546, 51, 602, 80, 687, 32],
		"s":["are", "parallelized", "over", "240", "streaming", "multiprocessors", "means"],
		"ss":"are parallelized over 240 streaming multiprocessors means"},
		{"l":73, "t":539, "r":381, "b":550,
		"q":[73, 22, 99, 16, 119, 42, 165, 52, 221, 16, 242, 23, 269, 8, 280, 26, 311, 11, 325, 34, 363, 18],
		"s":["thus", "the", "speedup", "represents", "the", "time", "it", "takes", "to", "reduce", "ﬁve"],
		"ss":"thus the speedup represents the time it takes to reduce ﬁve"},
		{"l":412, "t":539, "r":720, "b":550,
		"q":[412, 22, 438, 16, 460, 26, 491, 34, 530, 58, 593, 10, 608, 19, 632, 25, 662, 36, 703, 16],
		"s":["that", "the", "GPU", "should", "outperform", "in", "this", "area,", "despite", "the"],
		"ss":"that the GPU should outperform in this area, despite the"},
		{"l":73, "t":553, "r":227, "b":563,
		"q":[73, 36, 112, 24, 140, 11, 154, 6, 164, 29, 197, 30],
		"s":["million", "rows", "to", "a", "single", "value."],
		"ss":"million rows to a single value."},
		{"l":412, "t":553, "r":720, "b":563,
		"q":[412, 19, 435, 22, 461, 16, 481, 22, 507, 16, 527, 28, 559, 18, 581, 51, 635, 13, 652, 13, 668, 52],
		"s":["fact", "that", "the", "SMs", "are", "much", "less", "optimized", "on", "an", "individual"],
		"ss":"fact that the SMs are much less optimized on an individual"},
		{"l":84, "t":566, "r":381, "b":577,
		"q":[84, 20, 109, 23, 137, 11, 151, 40, 196, 16, 217, 23, 244, 15, 263, 24, 292, 16, 313, 22, 339, 42],
		"s":["The", "time", "to", "transfer", "the", "data", "set", "from", "the", "host", "memory"],
		"ss":"The time to transfer the data set from the host memory"},
		{"l":412, "t":566, "r":720, "b":577,
		"q":[412, 26, 446, 75, 527, 8, 540, 8, 553, 40, 597, 11, 613, 42, 660, 16, 682, 38],
		"s":["level.", "Unfortunately,", "it", "is", "diﬃcult", "to", "measure", "the", "compu-"],
		"ss":"level. Unfortunately, it is diﬃcult to measure the compu-"},
		{"l":73, "t":580, "r":381, "b":590,
		"q":[73, 10, 86, 36, 126, 11, 140, 16, 160, 32, 195, 42, 240, 8, 252, 36, 292, 15, 310, 42, 358, 23],
		"s":["of", "SQLite", "to", "the", "device", "memory", "is", "around", "2.8", "seconds.", "This"],
		"ss":"of SQLite to the device memory is around 2.8 seconds. This"},
		{"l":412, "t":580, "r":720, "b":590,
		"q":[412, 40, 457, 45, 507, 10, 522, 6, 534, 31, 571, 18, 594, 8, 607, 34, 646, 12, 664, 29, 698, 22],
		"s":["tational", "intensity", "of", "a", "query,", "but", "it", "should", "be", "noted", "that"],
		"ss":"tational intensity of a query, but it should be noted that"},
		{"l":73, "t":593, "r":381, "b":604,
		"q":[73, 49, 126, 8, 137, 11, 152, 49, 205, 40, 249, 16, 269, 23, 296, 8, 307, 46, 357, 24],
		"s":["operation", "is", "so", "expensive", "because", "the", "data", "is", "retrieved", "from"],
		"ss":"operation is so expensive because the data is retrieved from"},
		{"l":412, "t":593, "r":720, "b":604,
		"q":[412, 36, 454, 6, 466, 19, 491, 9, 507, 30, 543, 36, 585, 72, 663, 57],
		"s":["queries", "7", "and", "8,", "which", "involve", "multiplication", "operations,"],
		"ss":"queries 7 and 8, which involve multiplication operations,"},
		{"l":73, "t":607, "r":381, "b":617,
		"q":[73, 36, 114, 41, 159, 6, 169, 29, 203, 19, 227, 33, 264, 20, 289, 60, 354, 27],
		"s":["SQLite", "through", "a", "query", "and", "placed", "into", "row-column", "form,"],
		"ss":"SQLite through a query and placed into row-column form,"},
		{"l":412, "t":607, "r":720, "b":617,
		"q":[412, 53, 470, 13, 487, 17, 510, 23, 538, 16, 560, 27, 592, 39, 637, 36, 679, 16, 700, 19],
		"s":["performed", "on", "par", "with", "the", "other", "queries,", "despite", "the", "fact"],
		"ss":"performed on par with the other queries, despite the fact"},
		{"l":73, "t":620, "r":381, "b":630,
		"q":[73, 22, 100, 8, 113, 8, 126, 33, 165, 35, 205, 31, 245, 23, 274, 8, 287, 49, 341, 40],
		"s":["thus", "it", "is", "copied", "several", "times.", "This", "is", "necessary", "because"],
		"ss":"thus it is copied several times. This is necessary because"},
		{"l":412, "t":620, "r":672, "b":631,
		"q":[412, 22, 437, 72, 513, 8, 525, 6, 535, 27, 566, 50, 620, 52],
		"s":["that", "multiplication", "is", "a", "fairly", "expensive", "operation."],
		"ss":"that multiplication is a fairly expensive operation."},
		{"l":73, "t":634, "r":381, "b":644,
		"q":[73, 36, 112, 30, 145, 23, 172, 10, 185, 35, 223, 27, 254, 27, 284, 19, 307, 45, 354, 26],
		"s":["SQLite", "stores", "data", "in", "B-Tree", "form,", "while", "this", "project’s", "GPU"],
		"ss":"SQLite stores data in B-Tree form, while this project’s GPU"},
		{"l":423, "t":634, "r":720, "b":644,
		"q":[423, 9, 436, 26, 466, 52, 522, 63, 589, 10, 602, 29, 635, 42, 681, 19, 703, 16],
		"s":["A", "more", "signiﬁcant", "determinant", "of", "query", "speedup", "was", "the"],
		"ss":"A more signiﬁcant determinant of query speedup was the"},
		{"l":73, "t":647, "r":381, "b":657,
		"q":[73, 35, 112, 43, 159, 38, 201, 23, 229, 10, 243, 60, 308, 27, 342, 8, 354, 26],
		"s":["virtual", "machine", "expects", "data", "in", "row-column", "form.", "If", "these"],
		"ss":"virtual machine expects data in row-column form. If these"},
		{"l":412, "t":647, "r":720, "b":658,
		"q":[412, 19, 435, 10, 450, 16, 472, 29, 506, 18, 529, 10, 544, 27, 577, 33, 616, 16, 637, 39, 682, 10, 696, 24],
		"s":["size", "of", "the", "result", "set,", "in", "other", "words,", "the", "number", "of", "rows"],
		"ss":"size of the result set, in other words, the number of rows"},
		{"l":73, "t":661, "r":381, "b":671,
		"q":[73, 18, 95, 29, 128, 23, 155, 47, 206, 23, 233, 28, 265, 12, 281, 57, 341, 39],
		"s":["two", "forms", "were", "identical,", "data", "could", "be", "transferred", "directly"],
		"ss":"two forms were identical, data could be transferred directly"},
		{"l":412, "t":661, "r":720, "b":671,
		"q":[412, 22, 437, 6, 447, 29, 479, 48, 532, 23, 559, 40, 602, 40, 646, 6, 655, 32, 691, 29],
		"s":["that", "a", "query", "returned.", "This", "matters", "because", "a", "bigger", "result"],
		"ss":"that a query returned. This matters because a bigger result"},
		{"l":73, "t":674, "r":381, "b":684,
		"q":[73, 24, 101, 16, 122, 22, 148, 11, 163, 16, 184, 32, 220, 23, 248, 6, 258, 23, 286, 59, 349, 11, 364, 16],
		"s":["from", "the", "host", "to", "the", "device", "with", "a", "time", "comparable", "to", "the"],
		"ss":"from the host to the device with a time comparable to the"},
		{"l":412, "t":674, "r":720, "b":685,
		"q":[412, 15, 431, 46, 481, 16, 502, 46, 553, 10, 567, 16, 588, 49, 642, 21, 667, 25, 697, 23],
		"s":["set", "increases", "the", "overhead", "of", "the", "reduction", "step", "since", "each"],
		"ss":"set increases the overhead of the reduction step since each"},
		{"l":73, "t":688, "r":381, "b":698,
		"q":[73, 29, 106, 40, 151, 26, 184, 25, 213, 22, 239, 7, 251, 19, 274, 23, 302, 16, 323, 24, 352, 28],
		"s":["result", "transfer", "time.", "Note", "that", "if", "this", "were", "the", "case,", "many"],
		"ss":"result transfer time. Note that if this were the case, many"},
		{"l":412, "t":688, "r":498, "b":698,
		"q":[412, 34, 450, 25, 480, 18],
		"s":["thread", "must", "call"],
		"ss":"thread must call"},
		{"l":503, "t":688, "r":569, "b":698,
		"q":[503, 67],
		"s":["atomicAdd()"],
		"ss":"atomicAdd()"},
		{"l":569, "t":688, "r":720, "b":698,
		"q":[569, 3, 580, 9, 593, 20, 618, 39, 662, 33, 699, 21],
		"s":[".", "It", "also", "directly", "aﬀects", "how"],
		"ss":". It also directly aﬀects how"},
		{"l":73, "t":701, "r":381, "b":711,
		"q":[73, 26, 102, 36, 142, 31, 176, 12, 191, 29, 223, 24, 251, 26, 279, 36, 319, 23, 345, 36],
		"s":["GPU", "queries", "would", "be", "faster", "than", "CPU", "queries", "even", "includ-"],
		"ss":"GPU queries would be faster than CPU queries even includ-"},
		{"l":412, "t":701, "r":720, "b":712,
		"q":[412, 22, 438, 8, 450, 26, 481, 11, 496, 24, 524, 16, 545, 29, 579, 15, 598, 24, 627, 32, 663, 42, 709, 11],
		"s":["long", "it", "takes", "to", "copy", "the", "result", "set", "from", "device", "memory", "to"],
		"ss":"long it takes to copy the result set from device memory to"},
		{"l":73, "t":714, "r":381, "b":725,
		"q":[73, 16, 94, 16, 115, 23, 143, 40, 188, 26, 220, 29, 254, 49, 308, 26, 340, 19, 364, 16],
		"s":["ing", "the", "data", "transfer", "time,", "query", "execution", "time,", "and", "the"],
		"ss":"ing the data transfer time, query execution time, and the"},
		{"l":412, "t":715, "r":720, "b":725,
		"q":[412, 22, 438, 44, 490, 30, 525, 35, 565, 16, 586, 59, 649, 23, 677, 29, 711, 9],
		"s":["host", "memory.", "These", "factors", "are", "illuminated", "with", "ﬁgure", "2."],
		"ss":"host memory. These factors are illuminated with ﬁgure 2."},
		{"l":73, "t":728, "r":381, "b":738,
		"q":[73, 34, 111, 40, 156, 26, 190, 14, 209, 48, 261, 33, 299, 14, 317, 37, 359, 22],
		"s":["results", "transfer", "time.", "As", "discussed", "above,", "we", "assume", "that"],
		"ss":"results transfer time. As discussed above, we assume that"},
		{"l":412, "t":728, "r":720, "b":739,
		"q":[412, 9, 424, 15, 442, 10, 454, 12, 470, 36, 509, 23, 536, 45, 584, 10, 597, 30, 630, 23, 657, 10, 670, 23, 696, 23],
		"s":["A", "set", "of", "21", "queries", "were", "executed", "in", "which", "rows", "of", "data", "were"],
		"ss":"A set of 21 queries were executed in which rows of data were"},
		{"l":73, "t":741, "r":381, "b":752,
		"q":[73, 43, 120, 36, 160, 16, 181, 28, 213, 53, 270, 13, 287, 16, 308, 26, 339, 23, 366, 15],
		"s":["multiple", "queries", "are", "being", "performed", "on", "the", "same", "data", "set"],
		"ss":"multiple queries are being performed on the same data set"},
		{"l":412, "t":742, "r":507, "b":752,
		"q":[412, 44, 460, 27, 491, 16],
		"s":["returned", "when", "the"],
		"ss":"returned when the"},
		{"l":511, "t":742, "r":559, "b":752,
		"q":[511, 48],
		"s":["uniformi"],
		"ss":"uniformi"},
		{"l":563, "t":742, "r":720, "b":752,
		"q":[563, 38, 605, 19, 627, 18, 649, 24, 677, 9, 690, 30],
		"s":["column", "was", "less", "than", "x,", "where"],
		"ss":"column was less than x, where"},
		{"l":73, "t":755, "r":381, "b":765,
		"q":[73, 19, 97, 32, 133, 19, 157, 49, 211, 28, 244, 11, 259, 14, 277, 32, 314, 16, 335, 46],
		"s":["and", "ignore", "this", "overhead,", "much", "as", "we", "ignore", "the", "overhead"],
		"ss":"and ignore this overhead, much as we ignore the overhead"},
		{"l":412, "t":755, "r":720, "b":765,
		"q":[412, 5, 422, 19, 445, 6, 454, 27, 485, 10, 498, 16, 518, 28, 550, 28, 583, 21, 607, 63, 674, 13, 690, 12, 706, 14],
		"s":["x", "was", "a", "value", "in", "the", "range", "[-100,", "100]", "incremented", "by", "10", "for"],
		"ss":"x was a value in the range [-100, 100] incremented by 10 for"},
		{"l":73, "t":768, "r":378, "b":779,
		"q":[73, 10, 86, 38, 128, 16, 148, 46, 198, 15, 217, 24, 245, 21, 270, 20, 294, 36, 334, 44],
		"s":["of", "loading", "the", "database", "ﬁle", "from", "disk", "into", "SQLite", "memory."],
		"ss":"of loading the database ﬁle from disk into SQLite memory."},
		{"l":412, "t":769, "r":581, "b":779,
		"q":[412, 23, 438, 57, 498, 31, 534, 27, 565, 16],
		"s":["each", "subsequent", "query.", "Since", "the"],
		"ss":"each subsequent query. Since the"},
		{"l":585, "t":769, "r":633, "b":779,
		"q":[585, 48],
		"s":["uniformi"],
		"ss":"uniformi"},
		{"l":636, "t":769, "r":720, "b":779,
		"q":[636, 38, 677, 43],
		"s":["column", "contains"],
		"ss":"column contains"},
		{"l":84, "t":782, "r":381, "b":792,
		"q":[84, 67, 154, 16, 174, 39, 215, 27, 245, 36, 284, 19, 306, 6, 314, 38, 354, 26],
		"s":["Interestingly,", "the", "ﬂoating", "point", "queries", "had", "a", "slightly", "high-"],
		"ss":"Interestingly, the ﬂoating point queries had a slightly high-"},
		{"l":412, "t":782, "r":720, "b":792,
		"q":[412, 6, 422, 41, 468, 61, 533, 10, 547, 40, 592, 42, 639, 16, 659, 19, 683, 15, 703, 16],
		"s":["a", "uniform", "distribution", "of", "integers", "between", "-99", "and", "99,", "the"],
		"ss":"a uniform distribution of integers between -99 and 99, the"},
		{"l":73, "t":795, "r":381, "b":806,
		"q":[73, 10, 86, 42, 131, 24, 158, 16, 178, 35, 217, 39, 261, 23, 288, 8, 299, 27, 330, 6, 339, 29, 371, 10],
		"s":["er", "speedup", "than", "the", "integer", "queries.", "This", "is", "likely", "a", "result", "of"],
		"ss":"er speedup than the integer queries. This is likely a result of"},
		{"l":412, "t":796, "r":720, "b":806,
		"q":[412, 45, 462, 19, 485, 10, 499, 16, 520, 29, 553, 15, 572, 48, 624, 13, 641, 33, 678, 14, 697, 23],
		"s":["expected", "size", "of", "the", "result", "set", "increased", "by", "25,000", "for", "each"],
		"ss":"expected size of the result set increased by 25,000 for each"},
		{"l":73, "t":809, "r":381, "b":819,
		"q":[73, 16, 93, 34, 132, 51, 187, 10, 201, 43, 250, 31, 285, 16, 306, 26, 336, 45],
		"s":["the", "GPU’s", "treatment", "of", "integers.", "While", "the", "GPU", "supports"],
		"ss":"the GPU’s treatment of integers. While the GPU supports"},
		{"l":412, "t":809, "r":594, "b":819,
		"q":[412, 31, 447, 39, 490, 24, 518, 6, 528, 11, 542, 51],
		"s":["query,", "ranging", "from", "0", "to", "5,000,000."],
		"ss":"query, ranging from 0 to 5,000,000."},
		{"l":73, "t":822, "r":381, "b":833,
		"q":[73, 28, 105, 18, 126, 51, 181, 39, 223, 27, 254, 57, 315, 35, 354, 27],
		"s":["IEEE", "754", "compliant", "ﬂoating", "point", "operations,", "integer", "math"],
		"ss":"IEEE 754 compliant ﬂoating point operations, integer math"},
		{"l":423, "t":823, "r":720, "b":833,
		"q":[423, 20, 447, 25, 476, 39, 519, 28, 551, 10, 564, 19, 587, 30, 620, 8, 632, 22, 658, 16, 678, 42],
		"s":["The", "most", "striking", "trend", "of", "this", "graph", "is", "that", "the", "speedup"],
		"ss":"The most striking trend of this graph is that the speedup"},
		{"l":73, "t":836, "r":381, "b":846,
		"q":[73, 8, 84, 24, 112, 23, 138, 6, 148, 30, 182, 24, 210, 22, 235, 30, 269, 35, 308, 54, 365, 16],
		"s":["is", "done", "with", "a", "24-bit", "unit,", "thus", "32-bit", "integer", "operations", "are"],
		"ss":"is done with a 24-bit unit, thus 32-bit integer operations are"},
		{"l":412, "t":836, "r":720, "b":846,
		"q":[412, 10, 425, 26, 455, 29, 487, 49, 540, 48, 591, 28, 622, 23, 648, 16, 668, 19, 690, 10, 703, 16],
		"s":["of", "GPU", "query", "execution", "increased", "along", "with", "the", "size", "of", "the"],
		"ss":"of GPU query execution increased along with the size of the"},
		{"l":73, "t":849, "r":381, "b":860,
		"q":[73, 53, 130, 69, 205, 20, 229, 45, 278, 49, 332, 10, 346, 35],
		"s":["essentially", "emulated[19].", "The", "resulting", "diﬀerence", "in", "perfor-"],
		"ss":"essentially emulated[19]. The resulting diﬀerence in perfor-"},
		{"l":412, "t":850, "r":720, "b":860,
		"q":[412, 29, 446, 18, 470, 36, 511, 16, 533, 49, 587, 49, 646, 23, 674, 46],
		"s":["result", "set,", "despite", "the", "reduction", "overhead.", "This", "indicates"],
		"ss":"result set, despite the reduction overhead. This indicates"},
		{"l":73, "t":863, "r":381, "b":873,
		"q":[73, 33, 110, 8, 122, 50, 176, 18, 198, 17, 219, 16, 239, 37, 280, 11, 295, 35, 335, 16, 355, 26],
		"s":["mance", "is", "nontrivial", "but", "not", "big", "enough", "to", "change", "the", "mag-"],
		"ss":"mance is nontrivial but not big enough to change the mag-"},
		{"l":412, "t":863, "r":720, "b":873,
		"q":[412, 22, 437, 16, 456, 26, 486, 81, 569, 8, 580, 26, 609, 40, 652, 11, 666, 45, 714, 6],
		"s":["that", "the", "GPU", "implementation", "is", "more", "eﬃcient", "at", "handling", "a"],
		"ss":"that the GPU implementation is more eﬃcient at handling a"},
		{"l":73, "t":876, "r":381, "b":887,
		"q":[73, 33, 110, 10, 124, 16, 145, 45, 196, 25, 226, 54, 284, 44, 333, 48],
		"s":["nitude", "of", "the", "speedup.", "Next", "generation", "NVIDIA", "hardware"],
		"ss":"nitude of the speedup. Next generation NVIDIA hardware"},
		{"l":412, "t":876, "r":720, "b":887,
		"q":[412, 29, 444, 19, 467, 24, 494, 16, 514, 26, 543, 84, 631, 46, 680, 40],
		"s":["result", "row", "than", "the", "CPU", "implementation,", "probably", "because"],
		"ss":"result row than the CPU implementation, probably because"},
		{"l":73, "t":890, "r":348, "b":900,
		"q":[73, 8, 85, 45, 134, 11, 148, 40, 192, 21, 217, 30, 252, 35, 291, 57],
		"s":["is", "expected", "to", "support", "true", "32-bit", "integer", "operations."],
		"ss":"is expected to support true 32-bit integer operations."},
		{"l":412, "t":890, "r":720, "b":900,
		"q":[412, 10, 424, 16, 443, 26, 472, 59, 534, 10, 546, 16, 565, 35, 605, 20, 629, 46, 677, 10, 689, 30],
		"s":["of", "the", "sheer", "throughput", "of", "the", "device.", "The", "overhead", "of", "trans-"],
		"ss":"of the sheer throughput of the device. The overhead of trans-"},
		{"l":84, "t":903, "r":381, "b":914,
		"q":[84, 30, 119, 16, 139, 35, 179, 31, 214, 35, 253, 22, 280, 28, 312, 16, 333, 34, 371, 10],
		"s":["There", "are", "several", "major", "factors", "that", "aﬀect", "the", "results", "of"],
		"ss":"There are several major factors that aﬀect the results of"},
		{"l":412, "t":903, "r":720, "b":914,
		"q":[412, 34, 449, 16, 468, 29, 500, 15, 518, 24, 544, 8, 555, 71, 629, 10, 641, 16, 661, 34, 698, 22],
		"s":["ferring", "the", "result", "set", "back", "is", "demonstrated", "in", "the", "second", "line,"],
		"ss":"ferring the result set back is demonstrated in the second line,"},
		{"l":399, "t":1010, "r":417, "b":1020,
		"q":[399, 18],
		"s":["100"],
		"ss":"100"}
	]},
	{"pageNum":8, "pageWidth":816, "pageHeight":1056,
	"blocks":[
		{"l":412, "t":74, "r":720, "b":84,
		"q":[412, 62, 477, 17, 497, 22, 523, 11, 538, 32, 573, 42, 619, 40, 663, 57],
		"s":["importantly", "the", "host", "to", "device", "memory", "transfer", "bottleneck,"],
		"ss":"importantly the host to device memory transfer bottleneck,"},
		{"l":412, "t":88, "r":720, "b":98,
		"q":[412, 22, 437, 31, 470, 34, 507, 16, 527, 51, 581, 10, 594, 23, 620, 13, 636, 84],
		"s":["that", "would", "reduce", "the", "usefulness", "of", "such", "an", "implementation."],
		"ss":"that would reduce the usefulness of such an implementation."},
		{"l":423, "t":101, "r":720, "b":111,
		"q":[423, 20, 447, 32, 482, 10, 495, 41, 539, 47, 589, 36, 628, 66, 698, 22],
		"s":["The", "subset", "of", "possible", "SELECT", "queries", "implemented", "thus"],
		"ss":"The subset of possible SELECT queries implemented thus"},
		{"l":412, "t":115, "r":720, "b":125,
		"q":[412, 14, 429, 48, 480, 35, 518, 52, 573, 19, 595, 52, 650, 23, 676, 44],
		"s":["far", "precludes", "several", "important", "and", "frequently", "used", "features."],
		"ss":"far precludes several important and frequently used features."},
		{"l":412, "t":128, "r":720, "b":138,
		"q":[412, 25, 443, 19, 468, 48, 523, 19, 548, 37, 591, 23, 620, 17, 643, 54, 703, 16],
		"s":["First", "and", "foremost,", "this", "project", "does", "not", "implement", "the"],
		"ss":"First and foremost, this project does not implement the"},
		{"l":412, "t":142, "r":720, "b":152,
		"q":[412, 29, 445, 53, 504, 23, 532, 11, 548, 19, 572, 43, 619, 46, 670, 30, 705, 15],
		"s":["JOIN", "command,", "used", "to", "join", "multiple", "database", "tables", "to-"],
		"ss":"JOIN command, used to join multiple database tables to-"},
		{"l":412, "t":155, "r":720, "b":165,
		"q":[412, 32, 449, 11, 465, 22, 492, 10, 507, 6, 519, 47, 571, 31, 612, 20, 638, 37, 680, 19, 704, 16],
		"s":["gether", "as", "part", "of", "a", "SELECT", "query.", "The", "project", "was", "de-"],
		"ss":"gether as part of a SELECT query. The project was de-"},
		{"l":412, "t":168, "r":720, "b":179,
		"q":[412, 32, 447, 11, 460, 20, 484, 64, 551, 67, 621, 60, 684, 36],
		"s":["signed", "to", "give", "performance", "improvement", "formultiple", "queries"],
		"ss":"signed to give performance improvement formultiple queries"},
		{"l":412, "t":182, "r":720, "b":192,
		"q":[412, 18, 433, 13, 450, 23, 476, 22, 502, 17, 523, 24, 551, 33, 588, 11, 602, 16, 622, 30, 656, 22, 682, 38],
		"s":["run", "on", "data", "that", "has", "been", "moved", "to", "the", "GPU,", "thus", "encour-"],
		"ss":"run on data that has been moved to the GPU, thus encour-"},
		{"l":412, "t":195, "r":720, "b":206,
		"q":[412, 28, 443, 40, 487, 13, 503, 49, 556, 29, 589, 49, 641, 32, 677, 16, 697, 23],
		"s":["aging", "running", "an", "expensive", "JOIN", "operation", "before", "the", "data"],
		"ss":"aging running an expensive JOIN operation before the data"},
		{"l":412, "t":209, "r":720, "b":219,
		"q":[412, 8, 423, 40, 467, 38, 509, 25, 537, 23, 563, 8, 574, 56, 634, 11, 648, 16, 667, 26, 697, 23],
		"s":["is", "primed.", "Indeed,", "since", "data", "is", "transferred", "to", "the", "GPU", "with"],
		"ss":"is primed. Indeed, since data is transferred to the GPU with"},
		{"l":412, "t":222, "r":720, "b":233,
		"q":[412, 6, 421, 47, 472, 29, 505, 10, 518, 19, 541, 84, 628, 23, 655, 13, 671, 49],
		"s":["a", "SELECT", "query", "in", "this", "implementation,", "such", "an", "operation"],
		"ss":"a SELECT query in this implementation, such an operation"},
		{"l":412, "t":236, "r":720, "b":246,
		"q":[412, 8, 423, 35, 463, 44, 511, 17, 532, 54, 590, 16, 609, 20, 633, 42, 680, 40],
		"s":["is", "trivial.", "GROUP", "BY", "operations", "are", "also", "ignored.", "Though"],
		"ss":"is trivial. GROUP BY operations are also ignored. Though"},
		{"l":412, "t":249, "r":720, "b":260,
		"q":[412, 17, 435, 11, 451, 43, 500, 11, 516, 19, 541, 57, 605, 23, 633, 16, 655, 6, 667, 53],
		"s":["not", "as", "complex", "as", "join", "operations,", "they", "are", "a", "commonly"],
		"ss":"not as complex as join operations, they are a commonly"},
		{"l":412, "t":263, "r":720, "b":273,
		"q":[412, 66, 483, 36, 523, 22, 550, 12, 567, 44, 615, 10, 630, 31, 666, 54],
		"s":["implemented", "feature", "may", "be", "included", "in", "future", "implemen-"],
		"ss":"implemented feature may be included in future implemen-"},
		{"l":412, "t":276, "r":720, "b":287,
		"q":[412, 39, 457, 20, 481, 23, 509, 46, 558, 42, 604, 28, 637, 27, 668, 52],
		"s":["tations.", "The", "SQL", "standard", "includes", "many", "other", "operators,"],
		"ss":"tations. The SQL standard includes many other operators,"},
		{"l":412, "t":290, "r":720, "b":300,
		"q":[412, 24, 440, 53, 498, 23, 526, 19, 550, 35, 589, 83, 677, 19, 701, 19],
		"s":["both", "commonly", "used", "and", "largely", "unimplemented,", "and", "this"],
		"ss":"both commonly used and largely unimplemented, and this"},
		{"l":412, "t":303, "r":704, "b":314,
		"q":[412, 52, 467, 10, 481, 38, 523, 41, 568, 8, 579, 14, 598, 24, 626, 79],
		"s":["discussion", "of", "missing", "features", "is", "far", "from", "comprehensive."],
		"ss":"discussion of missing features is far from comprehensive."},
		{"l":423, "t":317, "r":720, "b":327,
		"q":[423, 39, 468, 35, 508, 34, 548, 37, 590, 6, 602, 48, 656, 64],
		"s":["Further", "testing", "should", "include", "a", "multicore", "implementa-"],
		"ss":"Further testing should include a multicore implementa-"},
		{"l":412, "t":330, "r":720, "b":341,
		"q":[412, 20, 437, 10, 451, 36, 493, 14, 512, 31, 548, 59, 612, 37, 653, 16, 675, 26, 706, 14],
		"s":["tion", "of", "SQLite", "for", "better", "comparison", "against", "the", "GPU", "re-"],
		"ss":"tion of SQLite for better comparison against the GPU re-"},
		{"l":412, "t":344, "r":720, "b":354,
		"q":[412, 24, 440, 52, 500, 25, 529, 13, 546, 81, 632, 31, 667, 12, 684, 21, 709, 11],
		"s":["sults", "presented.", "Such", "an", "implementation", "would", "be", "able", "to"],
		"ss":"sults presented. Such an implementation would be able to"},
		{"l":412, "t":357, "r":720, "b":368,
		"q":[412, 37, 453, 6, 464, 51, 520, 10, 534, 22, 560, 7, 571, 28, 604, 29, 637, 49, 690, 13, 707, 13],
		"s":["achieve", "a", "maximum", "of", "only", "n", "times", "faster", "execution", "on", "an"],
		"ss":"achieve a maximum of only n times faster execution on an"},
		{"l":73, "t":366, "r":381, "b":376,
		"q":[73, 39, 118, 11, 138, 23, 168, 32, 206, 11, 224, 19, 249, 34, 290, 17, 313, 22, 341, 14, 362, 19],
		"s":["Figure", "2:", "The", "eﬀect", "of", "the", "result", "set", "size", "on", "the"],
		"ss":"Figure 2: The eﬀect of the result set size on the"},
		{"l":412, "t":371, "r":720, "b":381,
		"q":[412, 32, 447, 46, 497, 18, 519, 6, 529, 59, 592, 23, 619, 16, 640, 46, 690, 10, 703, 17],
		"s":["n-core", "machine,", "but", "a", "comparison", "with", "the", "overhead", "of", "the"],
		"ss":"n-core machine, but a comparison with the overhead of the"},
		{"l":73, "t":379, "r":381, "b":390,
		"q":[73, 49, 125, 11, 141, 31, 175, 34, 213, 61, 278, 55, 337, 22, 363, 18],
		"s":["speedup", "of", "GPU", "query", "execution,", "including", "and", "ex-"],
		"ss":"speedup of GPU query execution, including and ex-"},
		{"l":412, "t":384, "r":720, "b":395,
		"q":[412, 34, 449, 42, 494, 31, 529, 32, 564, 16, 583, 35, 622, 31, 657, 31, 691, 12, 706, 14],
		"s":["shared", "memory", "model", "versus", "the", "CUDA", "model", "would", "be", "in-"],
		"ss":"shared memory model versus the CUDA model would be in-"},
		{"l":73, "t":393, "r":266, "b":403,
		"q":[73, 43, 120, 19, 144, 39, 188, 47, 239, 27],
		"s":["cluding", "the", "results", "transfer", "time"],
		"ss":"cluding the results transfer time"},
		{"l":412, "t":398, "r":720, "b":408,
		"q":[412, 45, 461, 19, 484, 46, 536, 67, 607, 36, 647, 35, 686, 34],
		"s":["teresting", "and", "valuable.", "Additionally,", "further", "testing", "should"],
		"ss":"teresting and valuable. Additionally, further testing should"},
		{"l":412, "t":411, "r":720, "b":422,
		"q":[412, 44, 460, 26, 491, 34, 530, 37, 572, 27, 604, 25, 634, 32, 671, 19, 695, 25],
		"s":["compare", "these", "results", "against", "other", "open", "source", "and", "com-"],
		"ss":"compare these results against other open source and com-"},
		{"l":412, "t":425, "r":720, "b":435,
		"q":[412, 38, 453, 50, 508, 22, 534, 13, 550, 32, 586, 43, 633, 29, 667, 52],
		"s":["mercial", "databases", "that", "do", "utilize", "multiple", "cores.", "Anecdotal"],
		"ss":"mercial databases that do utilize multiple cores. Anecdotal"},
		{"l":73, "t":433, "r":381, "b":443,
		"q":[73, 30, 107, 48, 160, 42, 206, 24, 235, 16, 256, 21, 281, 18, 304, 19, 327, 32, 364, 16],
		"s":["which", "gradually", "diverges", "from", "the", "ﬁrst", "but", "still", "trends", "up,"],
		"ss":"which gradually diverges from the ﬁrst but still trends up,"},
		{"l":412, "t":438, "r":720, "b":449,
		"q":[412, 44, 458, 42, 504, 22, 529, 36, 568, 64, 635, 8, 646, 39, 688, 32],
		"s":["evidence", "suggests", "that", "SQLite", "performance", "is", "roughly", "equiv-"],
		"ss":"evidence suggests that SQLite performance is roughly equiv-"},
		{"l":73, "t":446, "r":381, "b":457,
		"q":[73, 41, 117, 22, 143, 16, 163, 26, 193, 81, 277, 8, 289, 19, 312, 26, 341, 40],
		"s":["showing", "that", "the", "GPU", "implementation", "is", "still", "more", "eﬃcient"],
		"ss":"showing that the GPU implementation is still more eﬃcient"},
		{"l":412, "t":452, "r":720, "b":462,
		"q":[412, 25, 440, 11, 454, 27, 485, 50, 539, 13, 555, 6, 564, 29, 596, 24, 624, 18, 646, 36, 685, 35],
		"s":["alent", "to", "other", "databases", "on", "a", "single", "core,", "but", "further", "testing"],
		"ss":"alent to other databases on a single core, but further testing"},
		{"l":73, "t":460, "r":381, "b":470,
		"q":[73, 27, 105, 16, 127, 23, 156, 11, 172, 40, 217, 6, 229, 19, 253, 24, 282, 8, 296, 57, 363, 17],
		"s":["when", "the", "time", "to", "transfer", "a", "row", "back", "is", "considered.", "For"],
		"ss":"when the time to transfer a row back is considered. For"},
		{"l":412, "t":465, "r":563, "b":476,
		"q":[412, 31, 446, 28, 478, 19, 501, 62],
		"s":["would", "prove", "this", "equivalence."],
		"ss":"would prove this equivalence."},
		{"l":73, "t":473, "r":381, "b":484,
		"q":[73, 26, 103, 27, 133, 16, 154, 58, 216, 39, 258, 23, 284, 11, 299, 40, 342, 6, 352, 29],
		"s":["these", "tests,", "the", "unweighted", "average", "time", "to", "transfer", "a", "single"],
		"ss":"these tests, the unweighted average time to transfer a single"},
		{"l":73, "t":487, "r":381, "b":497,
		"q":[73, 12, 89, 22, 115, 19, 138, 52, 194, 26, 224, 60, 288, 19, 311, 42, 357, 24],
		"s":["16", "byte", "row", "(including", "meta", "information", "and", "memory", "copy"],
		"ss":"16 byte row (including meta information and memory copy"},
		{"l":412, "t":493, "r":594, "b":506,
		"q":[412, 19, 446, 67, 517, 76],
		"s":["6.2", "Hardware", "Limitations"],
		"ss":"6.2 Hardware Limitations"},
		{"l":73, "t":500, "r":381, "b":511,
		"q":[73, 28, 105, 50, 160, 19, 183, 21, 209, 15, 231, 25, 260, 22, 286, 16, 307, 23, 335, 27, 367, 14],
		"s":["setup", "overhead)", "was", "7.67", "ns.", "Note", "that", "the", "data", "point", "for"],
		"ss":"setup overhead) was 7.67 ns. Note that the data point for"},
		{"l":73, "t":514, "r":381, "b":524,
		"q":[73, 6, 83, 44, 132, 23, 160, 8, 173, 13, 190, 37, 235, 23, 263, 8, 276, 40, 320, 60],
		"s":["0", "returned", "rows", "is", "an", "outlier.", "This", "is", "because", "transferring"],
		"ss":"0 returned rows is an outlier. This is because transferring"},
		{"l":423, "t":512, "r":720, "b":522,
		"q":[423, 30, 459, 24, 488, 31, 523, 55, 584, 10, 598, 37, 641, 26, 672, 48],
		"s":["There", "exist", "major", "limitations", "of", "current", "GPU", "hardware"],
		"ss":"There exist major limitations of current GPU hardware"},
		{"l":73, "t":527, "r":381, "b":538,
		"q":[73, 34, 110, 24, 137, 8, 149, 6, 158, 18, 180, 21, 205, 41, 249, 11, 263, 49, 315, 10, 328, 16, 348, 32],
		"s":["results", "back", "is", "a", "two", "step", "process,", "as", "described", "in", "the", "imple-"],
		"ss":"results back is a two step process, as described in the imple-"},
		{"l":412, "t":525, "r":720, "b":536,
		"q":[412, 22, 438, 62, 504, 24, 532, 19, 556, 45, 605, 67, 676, 18, 698, 22],
		"s":["that", "signiﬁcantly", "limit", "this", "project’s", "performance,", "but", "may"],
		"ss":"that signiﬁcantly limit this project’s performance, but may"},
		{"l":73, "t":541, "r":381, "b":551,
		"q":[73, 52, 129, 39, 172, 19, 196, 16, 217, 34, 255, 21, 280, 8, 293, 17, 314, 36, 354, 27],
		"s":["mentation", "section,", "and", "the", "second", "step", "is", "not", "needed", "when"],
		"ss":"mentation section, and the second step is not needed when"},
		{"l":412, "t":539, "r":720, "b":549,
		"q":[412, 12, 428, 40, 472, 10, 486, 17, 506, 22, 532, 35, 572, 28, 604, 40, 648, 31, 683, 16, 703, 17],
		"s":["be", "reduced", "in", "the", "near", "future.", "First,", "indirect", "jumps", "are", "not"],
		"ss":"be reduced in the near future. First, indirect jumps are not"},
		{"l":73, "t":554, "r":381, "b":565,
		"q":[73, 26, 104, 16, 125, 13, 142, 29, 176, 27, 211, 23, 239, 27, 271, 22, 298, 30, 333, 21, 358, 22],
		"s":["there", "are", "no", "result", "rows.", "This", "point", "thus", "shows", "how", "high"],
		"ss":"there are no result rows. This point thus shows how high"},
		{"l":412, "t":552, "r":720, "b":563,
		"q":[412, 42, 461, 23, 489, 8, 502, 52, 559, 40, 604, 23, 631, 10, 646, 16, 667, 12, 684, 36],
		"s":["allowed.", "This", "is", "signiﬁcant", "because", "each", "of", "the", "35", "SQLite"],
		"ss":"allowed. This is signiﬁcant because each of the 35 SQLite"},
		{"l":73, "t":568, "r":381, "b":578,
		"q":[73, 16, 93, 46, 142, 8, 154, 14, 172, 27, 202, 35, 241, 54, 298, 10, 312, 16, 332, 49],
		"s":["the", "overhead", "is", "for", "using", "atomic", "operations", "in", "the", "reduction"],
		"ss":"the overhead is for using atomic operations in the reduction"},
		{"l":412, "t":566, "r":720, "b":576,
		"q":[412, 41, 455, 66, 524, 10, 537, 16, 556, 35, 594, 43, 639, 24, 666, 10, 678, 6, 687, 33],
		"s":["opcodes", "implemented", "in", "the", "virtual", "machine", "exist", "in", "a", "switch"],
		"ss":"opcodes implemented in the virtual machine exist in a switch"},
		{"l":73, "t":581, "r":381, "b":592,
		"q":[73, 29, 105, 19, 128, 47, 179, 6, 188, 42, 234, 24, 261, 49, 314, 10, 327, 16, 347, 34],
		"s":["phase", "and", "initiating", "a", "memory", "copy", "operation", "in", "the", "results"],
		"ss":"phase and initiating a memory copy operation in the results"},
		{"l":412, "t":579, "r":720, "b":590,
		"q":[412, 31, 447, 27, 478, 19, 501, 27, 531, 8, 543, 23, 569, 14, 587, 27, 618, 34, 655, 14, 673, 27, 703, 16],
		"s":["block.", "Since", "this", "block", "is", "used", "for", "every", "thread", "for", "every", "op-"],
		"ss":"block. Since this block is used for every thread for every op-"},
		{"l":73, "t":595, "r":149, "b":605,
		"q":[73, 40, 117, 32],
		"s":["transfer", "phase."],
		"ss":"transfer phase."},
		{"l":412, "t":593, "r":720, "b":603,
		"q":[412, 27, 443, 54, 501, 16, 522, 33, 559, 49, 612, 11, 627, 16, 648, 36, 689, 31],
		"s":["code,", "comparing", "the", "switch", "argument", "to", "the", "opcode", "values"],
		"ss":"code, comparing the switch argument to the opcode values"},
		{"l":84, "t":608, "r":381, "b":618,
		"q":[84, 17, 106, 23, 135, 17, 158, 16, 180, 66, 252, 6, 263, 38, 307, 36, 349, 10, 364, 16],
		"s":["We", "have", "not", "yet", "implemented", "a", "parallel", "version", "of", "the"],
		"ss":"We have not yet implemented a parallel version of the"},
		{"l":412, "t":606, "r":720, "b":617,
		"q":[412, 36, 453, 50, 509, 49, 569, 20, 595, 36, 637, 31, 674, 16, 696, 24],
		"s":["creates", "nontrivial", "overhead.", "The", "opcode", "values", "are", "arbi-"],
		"ss":"creates nontrivial overhead. The opcode values are arbi-"},
		{"l":73, "t":622, "r":381, "b":632,
		"q":[73, 26, 103, 36, 144, 66, 215, 14, 233, 48, 287, 34, 328, 23, 356, 8, 368, 13],
		"s":["same", "SQLite", "functionality", "for", "multicore", "CPUs.", "This", "is", "an"],
		"ss":"same SQLite functionality for multicore CPUs. This is an"},
		{"l":412, "t":620, "r":720, "b":630,
		"q":[412, 28, 445, 19, 469, 25, 499, 22, 526, 12, 543, 38, 586, 22, 613, 23, 640, 28, 673, 12, 690, 15, 709, 11],
		"s":["trary,", "and", "must", "only", "be", "unique,", "thus", "they", "could", "be", "set", "to"],
		"ss":"trary, and must only be unique, thus they could be set to"},
		{"l":73, "t":635, "r":381, "b":645,
		"q":[73, 52, 129, 33, 166, 10, 180, 31, 215, 28, 249, 11, 265, 16, 285, 54, 343, 16, 364, 17],
		"s":["important", "aspect", "of", "future", "work.", "In", "the", "meantime,", "the", "po-"],
		"ss":"important aspect of future work. In the meantime, the po-"},
		{"l":412, "t":633, "r":720, "b":644,
		"q":[412, 16, 431, 41, 475, 10, 487, 16, 506, 60, 569, 27, 599, 43, 644, 16, 663, 44, 709, 11],
		"s":["the", "location", "of", "the", "appropriate", "code,", "allowing", "the", "program", "to"],
		"ss":"the location of the appropriate code, allowing the program to"},
		{"l":73, "t":649, "r":381, "b":659,
		"q":[73, 33, 111, 42, 158, 23, 186, 43, 233, 26, 264, 25, 295, 12, 312, 22, 339, 10, 354, 26],
		"s":["tential", "speedup", "with", "multiple", "cores", "must", "be", "kept", "in", "mind"],
		"ss":"tential speedup with multiple cores must be kept in mind"},
		{"l":412, "t":647, "r":720, "b":657,
		"q":[412, 27, 442, 64, 510, 14, 528, 23, 554, 36, 594, 19, 617, 51, 672, 47],
		"s":["jump", "immediately", "for", "each", "opcode", "and", "eﬀectively", "removing"],
		"ss":"jump immediately for each opcode and eﬀectively removing"},
		{"l":73, "t":662, "r":381, "b":672,
		"q":[73, 27, 105, 61, 171, 16, 192, 26, 223, 47, 275, 14, 293, 35, 337, 44],
		"s":["when", "interpreting", "the", "GPU", "speedups", "we", "report.", "Speedup"],
		"ss":"when interpreting the GPU speedups we report. Speedup"},
		{"l":412, "t":660, "r":720, "b":671,
		"q":[412, 19, 435, 49, 489, 44, 537, 40, 581, 35, 619, 19, 643, 65, 712, 8],
		"s":["this", "overhead.", "Without", "indirect", "jumps,", "this", "optimization", "is"],
		"ss":"this overhead. Without indirect jumps, this optimization is"},
		{"l":73, "t":676, "r":381, "b":686,
		"q":[73, 23, 100, 48, 154, 31, 189, 23, 217, 13, 234, 30, 269, 33, 306, 10, 320, 16, 342, 39],
		"s":["with", "multicore", "would", "have", "an", "upper", "bound", "of", "the", "number"],
		"ss":"with multicore would have an upper bound of the number"},
		{"l":412, "t":674, "r":469, "b":684,
		"q":[412, 57],
		"s":["impossible."],
		"ss":"impossible."},
		{"l":73, "t":689, "r":381, "b":699,
		"q":[73, 10, 87, 48, 139, 38, 182, 55, 241, 6, 252, 13, 269, 16, 290, 27, 321, 33, 358, 23],
		"s":["of", "hardware", "threads", "supported,", "8", "on", "the", "Xeon", "X5550", "used"],
		"ss":"of hardware threads supported, 8 on the Xeon X5550 used"},
		{"l":423, "t":687, "r":720, "b":698,
		"q":[423, 20, 449, 23, 477, 51, 532, 8, 546, 22, 572, 63, 640, 43, 688, 32],
		"s":["The", "next", "limitation", "is", "that", "dynamically", "accessed", "arrays"],
		"ss":"The next limitation is that dynamically accessed arrays"},
		{"l":73, "t":703, "r":381, "b":713,
		"q":[73, 14, 90, 38, 132, 19, 154, 31, 188, 12, 204, 40, 247, 13, 263, 17, 283, 46, 332, 10, 345, 36],
		"s":["for", "testing,", "and", "would", "be", "reduced", "by", "the", "overhead", "of", "coordi-"],
		"ss":"for testing, and would be reduced by the overhead of coordi-"},
		{"l":412, "t":701, "r":720, "b":711,
		"q":[412, 16, 432, 32, 468, 10, 482, 24, 511, 42, 557, 32, 593, 24, 621, 38, 664, 42, 710, 10],
		"s":["are", "stored", "in", "local", "memory", "rather", "than", "register", "memory", "in"],
		"ss":"are stored in local memory rather than register memory in"},
		{"l":73, "t":716, "r":381, "b":726,
		"q":[73, 36, 112, 45, 160, 10, 172, 6, 181, 42, 226, 18, 247, 24, 273, 18, 294, 20, 318, 47, 367, 14],
		"s":["nation,", "resulting", "in", "a", "speedup", "less", "than", "8X.", "The", "speedups", "we"],
		"ss":"nation, resulting in a speedup less than 8X. The speedups we"},
		{"l":412, "t":714, "r":720, "b":725,
		"q":[412, 38, 454, 28, 485, 42, 531, 8, 542, 13, 558, 58, 620, 22, 645, 28, 677, 11, 691, 29],
		"s":["CUDA.", "Local", "memory", "is", "an", "abstraction", "that", "refers", "to", "mem-"],
		"ss":"CUDA. Local memory is an abstraction that refers to mem-"},
		{"l":73, "t":729, "r":381, "b":740,
		"q":[73, 45, 121, 23, 147, 16, 167, 26, 197, 66, 266, 34, 304, 26, 334, 47],
		"s":["observed", "with", "the", "GPU", "substantially", "exceed", "these", "numbers,"],
		"ss":"observed with the GPU substantially exceed these numbers,"},
		{"l":412, "t":728, "r":720, "b":738,
		"q":[412, 17, 432, 10, 445, 16, 464, 28, 495, 10, 508, 6, 517, 29, 549, 34, 586, 22, 611, 8, 622, 32, 656, 10, 669, 16, 689, 31],
		"s":["ory", "in", "the", "scope", "of", "a", "single", "thread", "that", "is", "stored", "in", "the", "global"],
		"ss":"ory in the scope of a single thread that is stored in the global"},
		{"l":73, "t":743, "r":379, "b":753,
		"q":[73, 41, 118, 22, 144, 16, 164, 26, 194, 17, 215, 6, 225, 24, 254, 66, 323, 55],
		"s":["showing", "that", "the", "GPU", "has", "a", "clear", "architectural", "advantage."],
		"ss":"showing that the GPU has a clear architectural advantage."},
		{"l":412, "t":741, "r":720, "b":752,
		"q":[412, 42, 457, 10, 470, 16, 490, 30, 523, 27, 553, 8, 565, 17, 585, 16, 605, 26, 634, 37, 675, 11, 689, 31],
		"s":["memory", "of", "the", "GPU.", "Since", "it", "has", "the", "same", "latency", "as", "global"],
		"ss":"memory of the GPU. Since it has the same latency as global"},
		{"l":412, "t":755, "r":720, "b":765,
		"q":[412, 44, 460, 24, 488, 42, 534, 8, 546, 18, 568, 11, 583, 18, 605, 28, 636, 32, 672, 24, 700, 20],
		"s":["memory,", "local", "memory", "is", "100", "to", "150", "times", "slower", "than", "reg-"],
		"ss":"memory, local memory is 100 to 150 times slower than reg-"},
		{"l":412, "t":768, "r":720, "b":779,
		"q":[412, 23, 438, 42, 484, 22, 511, 11, 526, 38, 568, 32, 604, 22, 630, 16, 650, 43, 697, 23],
		"s":["ister", "memory", "[19].", "In", "CUDA,", "arrays", "that", "are", "accessed", "with"],
		"ss":"ister memory [19]. In CUDA, arrays that are accessed with"},
		{"l":73, "t":774, "r":298, "b":788,
		"q":[73, 12, 100, 75, 178, 119],
		"s":["6.", "FURTHER", "IMPROVEMENT"],
		"ss":"6. FURTHER IMPROVEMENT"},
		{"l":412, "t":782, "r":720, "b":792,
		"q":[412, 13, 428, 13, 445, 28, 477, 22, 503, 8, 516, 47, 567, 11, 581, 40, 625, 23, 652, 16, 672, 47],
		"s":["an", "an", "index", "that", "is", "unknown", "at", "compile", "time", "are", "automat-"],
		"ss":"an an index that is unknown at compile time are automat-"},
		{"l":412, "t":795, "r":720, "b":806,
		"q":[412, 27, 444, 33, 483, 10, 498, 24, 528, 44, 582, 11, 598, 19, 623, 8, 637, 8, 650, 54, 709, 11],
		"s":["ically", "placed", "in", "local", "memory.", "In", "fact", "it", "is", "impossible", "to"],
		"ss":"ically placed in local memory. In fact it is impossible to"},
		{"l":73, "t":803, "r":273, "b":816,
		"q":[73, 19, 107, 105, 216, 57],
		"s":["6.1", "Unimplemented", "Features"],
		"ss":"6.1 Unimplemented Features"},
		{"l":412, "t":809, "r":720, "b":819,
		"q":[412, 25, 442, 26, 473, 10, 488, 38, 532, 44, 584, 20, 610, 46, 660, 35, 700, 20],
		"s":["store", "them", "in", "register", "memory.", "The", "database", "virtual", "ma-"],
		"ss":"store them in register memory. The database virtual ma-"},
		{"l":84, "t":822, "r":381, "b":833,
		"q":[84, 15, 102, 22, 127, 70, 201, 6, 210, 32, 246, 10, 259, 47, 309, 36, 349, 13, 364, 16],
		"s":["By", "only", "implementing", "a", "subset", "of", "SELECT", "queries", "on", "the"],
		"ss":"By only implementing a subset of SELECT queries on the"},
		{"l":412, "t":822, "r":720, "b":833,
		"q":[412, 27, 443, 8, 456, 42, 503, 37, 544, 22, 571, 27, 602, 41, 648, 10, 662, 19, 686, 34],
		"s":["chine", "is", "abstract", "enough", "that", "array", "accesses", "of", "this", "nature"],
		"ss":"chine is abstract enough that array accesses of this nature"},
		{"l":73, "t":836, "r":381, "b":846,
		"q":[73, 30, 105, 16, 124, 63, 191, 8, 201, 36, 241, 11, 254, 48, 305, 57, 367, 14],
		"s":["GPU,", "the", "programmer", "is", "limited", "to", "read-only", "operations.", "As"],
		"ss":"GPU, the programmer is limited to read-only operations. As"},
		{"l":412, "t":836, "r":720, "b":846,
		"q":[412, 16, 431, 43, 477, 19, 500, 22, 526, 46, 575, 10, 589, 19, 612, 21, 637, 23, 663, 16, 683, 36],
		"s":["are", "required", "and", "very", "frequent,", "in", "this", "case", "with", "the", "SQLite"],
		"ss":"are required and very frequent, in this case with the SQLite"},
		{"l":73, "t":849, "r":381, "b":860,
		"q":[73, 51, 127, 19, 149, 47, 198, 36, 237, 29, 268, 11, 282, 16, 301, 25, 329, 30, 362, 19],
		"s":["discussed,", "this", "approach", "applies", "speed", "to", "the", "most", "useful", "and"],
		"ss":"discussed, this approach applies speed to the most useful and"},
		{"l":412, "t":849, "r":720, "b":860,
		"q":[412, 38, 454, 29, 488, 26, 518, 16, 538, 42, 584, 23, 610, 36, 650, 23, 676, 11, 691, 29],
		"s":["register", "array.", "Even", "the", "simplest", "SQL", "queries", "such", "as", "query"],
		"ss":"register array. Even the simplest SQL queries such as query"},
		{"l":73, "t":863, "r":381, "b":873,
		"q":[73, 52, 130, 23, 158, 22, 185, 10, 200, 23, 229, 56, 294, 39, 339, 42],
		"s":["frequently", "used", "area", "of", "data", "processing.", "Further", "research"],
		"ss":"frequently used area of data processing. Further research"},
		{"l":412, "t":863, "r":720, "b":873,
		"q":[412, 6, 421, 37, 462, 10, 475, 50, 529, 14, 546, 36, 586, 36, 626, 12, 641, 36, 682, 38],
		"s":["1", "(shown", "in", "Appendix", "A)", "require", "around", "25", "SQLite", "register"],
		"ss":"1 (shown in Appendix A) require around 25 SQLite register"},
		{"l":73, "t":876, "r":381, "b":886,
		"q":[73, 28, 103, 43, 148, 16, 167, 31, 201, 10, 213, 16, 232, 26, 261, 10, 274, 35, 312, 19, 333, 47],
		"s":["could", "examine", "the", "power", "of", "the", "GPU", "in", "adding", "and", "removing"],
		"ss":"could examine the power of the GPU in adding and removing"},
		{"l":412, "t":876, "r":720, "b":887,
		"q":[412, 44, 460, 22, 486, 17, 507, 28, 539, 21, 564, 11, 578, 17, 598, 38, 640, 42, 686, 22, 712, 8],
		"s":["accesses,", "thus", "not", "being", "able", "to", "use", "register", "memory", "here", "is"],
		"ss":"accesses, thus not being able to use register memory here is"},
		{"l":73, "t":890, "r":381, "b":900,
		"q":[73, 23, 99, 24, 127, 16, 147, 86, 237, 23, 264, 18, 287, 40, 330, 8, 342, 8, 353, 27],
		"s":["data", "from", "the", "memory-resident", "data", "set.", "Though", "it", "is", "likely"],
		"ss":"data from the memory-resident data set. Though it is likely"},
		{"l":412, "t":890, "r":506, "b":900,
		"q":[412, 6, 422, 24, 450, 56],
		"s":["a", "huge", "restriction."],
		"ss":"a huge restriction."},
		{"l":73, "t":903, "r":381, "b":913,
		"q":[73, 22, 100, 16, 121, 26, 153, 31, 188, 58, 252, 16, 273, 26, 304, 10, 319, 19, 343, 22, 370, 11],
		"s":["that", "the", "GPU", "would", "outperform", "the", "CPU", "in", "this", "area", "as"],
		"ss":"that the GPU would outperform the CPU in this area as"},
		{"l":423, "t":903, "r":649, "b":914,
		"q":[423, 39, 466, 35, 505, 47, 556, 10, 570, 38, 612, 23, 639, 11],
		"s":["Finally,", "atomic", "functions", "in", "CUDA,", "such", "as"],
		"ss":"Finally, atomic functions in CUDA, such as"},
		{"l":653, "t":904, "r":720, "b":914,
		"q":[653, 67],
		"s":["atomicAdd()"],
		"ss":"atomicAdd()"},
		{"l":73, "t":917, "r":381, "b":927,
		"q":[73, 23, 101, 8, 113, 31, 149, 12, 165, 37, 207, 11, 223, 6, 233, 39, 277, 10, 291, 60, 356, 25],
		"s":["well,", "it", "would", "be", "subject", "to", "a", "number", "of", "constraints,", "most"],
		"ss":"well, it would be subject to a number of constraints, most"},
		{"l":412, "t":917, "r":720, "b":927,
		"q":[412, 16, 433, 66, 505, 22, 533, 14, 552, 35, 593, 35, 638, 82],
		"s":["are", "implemented", "only", "for", "integer", "values.", "Implementation"],
		"ss":"are implemented only for integer values. Implementation"},
		{"l":399, "t":1010, "r":417, "b":1020,
		"q":[399, 18],
		"s":["101"],
		"ss":"101"}
	]},
	{"pageNum":9, "pageWidth":816, "pageHeight":1056,
	"blocks":[
		{"l":73, "t":74, "r":381, "b":84,
		"q":[73, 14, 92, 27, 125, 23, 154, 27, 187, 31, 223, 12, 241, 51, 297, 30, 333, 14, 353, 28],
		"s":["for", "other", "data", "types", "would", "be", "extremely", "useful", "for", "inter-"],
		"ss":"for other data types would be extremely useful for inter-"},
		{"l":412, "t":74, "r":676, "b":84,
		"q":[412, 41, 456, 13, 473, 6, 483, 29, 516, 22, 541, 19, 564, 31, 600, 43, 646, 30],
		"s":["resident", "on", "a", "single", "host", "and", "across", "multiple", "hosts."],
		"ss":"resident on a single host and across multiple hosts."},
		{"l":73, "t":88, "r":381, "b":98,
		"q":[73, 61, 137, 82, 222, 60, 286, 27, 317, 17, 336, 45],
		"s":["threadblock", "communication,", "particularly", "given", "the", "architec-"],
		"ss":"threadblock communication, particularly given the architec-"},
		{"l":73, "t":101, "r":381, "b":111,
		"q":[73, 21, 98, 10, 111, 19, 134, 40, 178, 19, 201, 31, 235, 27, 266, 81, 351, 10, 364, 16],
		"s":["ture", "of", "this", "project,", "and", "would", "make", "implementation", "of", "the"],
		"ss":"ture of this project, and would make implementation of the"},
		{"l":412, "t":104, "r":552, "b":118,
		"q":[412, 12, 439, 113],
		"s":["7.", "CONCLUSIONS"],
		"ss":"7. CONCLUSIONS"},
		{"l":73, "t":115, "r":250, "b":125,
		"q":[73, 49, 126, 47, 177, 28, 209, 41],
		"s":["aggregate", "functions", "much", "simpler."],
		"ss":"aggregate functions much simpler."},
		{"l":84, "t":128, "r":381, "b":138,
		"q":[84, 15, 105, 26, 136, 10, 151, 26, 183, 55, 244, 16, 265, 45, 315, 11, 331, 50],
		"s":["All", "three", "of", "these", "limitations", "are", "expected", "to", "disappear"],
		"ss":"All three of these limitations are expected to disappear"},
		{"l":423, "t":123, "r":720, "b":134,
		"q":[423, 23, 452, 37, 495, 77, 577, 69, 651, 16, 674, 31, 710, 10],
		"s":["This", "project", "simultaneously", "demonstrates", "the", "power", "of"],
		"ss":"This project simultaneously demonstrates the power of"},
		{"l":73, "t":141, "r":381, "b":152,
		"q":[73, 23, 101, 33, 139, 16, 161, 23, 188, 54, 247, 10, 262, 52, 319, 62],
		"s":["with", "Fermi,", "the", "next", "generation", "of", "NVIDIA’s", "architecture"],
		"ss":"with Fermi, the next generation of NVIDIA’s architecture"},
		{"l":412, "t":137, "r":720, "b":147,
		"q":[412, 27, 443, 6, 453, 36, 493, 44, 541, 11, 556, 26, 586, 26, 616, 23, 643, 53, 701, 19],
		"s":["using", "a", "generic", "interface", "to", "drive", "GPU", "data", "processing", "and"],
		"ss":"using a generic interface to drive GPU data processing and"},
		{"l":73, "t":155, "r":381, "b":165,
		"q":[73, 22, 100, 54, 159, 32, 195, 16, 215, 28, 247, 28, 279, 11, 294, 27, 325, 16, 346, 35],
		"s":["[18].", "Signiﬁcant", "eﬀorts", "are", "being", "made", "to", "bring", "the", "CUDA"],
		"ss":"[18]. Signiﬁcant eﬀorts are being made to bring the CUDA"},
		{"l":412, "t":150, "r":720, "b":161,
		"q":[412, 43, 460, 36, 501, 44, 550, 10, 565, 16, 587, 63, 656, 10, 670, 49],
		"s":["provides", "further", "evidence", "of", "the", "eﬀectiveness", "of", "accelerat-"],
		"ss":"provides further evidence of the eﬀectiveness of accelerat-"},
		{"l":73, "t":168, "r":381, "b":179,
		"q":[73, 65, 141, 64, 208, 10, 221, 18, 243, 23, 269, 26, 298, 16, 318, 39, 360, 21],
		"s":["development", "environment", "in", "line", "with", "what", "the", "average", "pro-"],
		"ss":"development environment in line with what the average pro-"},
		{"l":412, "t":164, "r":720, "b":174,
		"q":[412, 16, 434, 46, 485, 54, 545, 13, 564, 50, 620, 36, 662, 11, 678, 6, 690, 30],
		"s":["ing", "database", "operations", "by", "oﬄoading", "queries", "to", "a", "GPU."],
		"ss":"ing database operations by oﬄoading queries to a GPU."},
		{"l":73, "t":182, "r":381, "b":192,
		"q":[73, 46, 123, 8, 136, 60, 200, 14, 218, 23, 246, 11, 261, 6, 271, 35, 310, 38, 353, 28],
		"s":["grammer", "is", "accustomed", "to,", "such", "as", "a", "uniﬁed", "address", "space"],
		"ss":"grammer is accustomed to, such as a uniﬁed address space"},
		{"l":412, "t":177, "r":720, "b":188,
		"q":[412, 40, 457, 22, 485, 6, 497, 32, 535, 10, 550, 13, 568, 41, 614, 23, 643, 36, 684, 18, 708, 12],
		"s":["Though", "only", "a", "subset", "of", "all", "possible", "SQL", "queries", "can", "be"],
		"ss":"Though only a subset of all possible SQL queries can be"},
		{"l":73, "t":195, "r":381, "b":206,
		"q":[73, 14, 90, 16, 111, 42, 156, 48, 208, 22, 233, 32, 268, 8, 280, 41, 324, 11, 338, 18, 360, 21],
		"s":["for", "the", "memory", "heirarchy", "that", "makes", "it", "possible", "to", "run", "true"],
		"ss":"for the memory heirarchy that makes it possible to run true"},
		{"l":412, "t":191, "r":720, "b":201,
		"q":[412, 26, 441, 16, 461, 34, 498, 16, 517, 51, 571, 19, 594, 26, 623, 8, 635, 33, 671, 11, 685, 35],
		"s":["used,", "the", "results", "are", "promising", "and", "there", "is", "reason", "to", "believe"],
		"ss":"used, the results are promising and there is reason to believe"},
		{"l":73, "t":209, "r":381, "b":219,
		"q":[73, 27, 104, 13, 121, 30, 155, 34, 196, 9, 209, 8, 222, 27, 253, 22, 280, 19, 303, 35, 342, 38],
		"s":["C++", "on", "Fermi", "GPUs.", "It", "is", "likely", "that", "this", "uniﬁed", "address"],
		"ss":"C++ on Fermi GPUs. It is likely that this uniﬁed address"},
		{"l":412, "t":204, "r":720, "b":215,
		"q":[412, 22, 438, 6, 449, 17, 470, 81, 555, 10, 570, 13, 587, 41, 632, 47, 684, 36],
		"s":["that", "a", "full", "implementation", "of", "all", "possible", "SELECT", "queries"],
		"ss":"that a full implementation of all possible SELECT queries"},
		{"l":73, "t":222, "r":381, "b":233,
		"q":[73, 28, 104, 18, 127, 33, 164, 44, 211, 32, 247, 10, 261, 38, 303, 44, 352, 28],
		"s":["space", "will", "enable", "dynamic", "arrays", "in", "register", "memory.", "Com-"],
		"ss":"space will enable dynamic arrays in register memory. Com-"},
		{"l":412, "t":218, "r":720, "b":228,
		"q":[412, 31, 447, 37, 488, 35, 527, 37, 570, 23, 598, 8, 610, 13, 627, 45, 676, 44],
		"s":["would", "achieve", "similar", "results.", "SQL", "is", "an", "excellent", "interface"],
		"ss":"would achieve similar results. SQL is an excellent interface"},
		{"l":73, "t":236, "r":381, "b":246,
		"q":[73, 28, 105, 23, 131, 16, 151, 37, 192, 64, 259, 72, 335, 10, 348, 33],
		"s":["bined", "with", "the", "general", "performance", "improvements", "of", "Fermi,"],
		"ss":"bined with the general performance improvements of Fermi,"},
		{"l":412, "t":231, "r":720, "b":242,
		"q":[412, 41, 456, 30, 490, 16, 510, 26, 540, 18, 561, 12, 577, 46, 628, 8, 639, 8, 651, 28, 682, 38],
		"s":["through", "which", "the", "GPU", "can", "be", "accessed:", "it", "is", "much", "simpler"],
		"ss":"through which the GPU can be accessed: it is much simpler"},
		{"l":73, "t":249, "r":381, "b":260,
		"q":[73, 8, 84, 8, 95, 41, 139, 22, 164, 6, 174, 38, 215, 44, 263, 81, 347, 18, 369, 12],
		"s":["it", "is", "possible", "that", "a", "slightly", "modiﬁed", "implementation", "will", "be"],
		"ss":"it is possible that a slightly modiﬁed implementation will be"},
		{"l":412, "t":245, "r":720, "b":255,
		"q":[412, 19, 435, 26, 466, 33, 503, 23, 531, 24, 559, 28, 592, 63, 663, 29, 697, 23],
		"s":["and", "more", "widely", "used", "than", "many", "alternatives.", "Using", "SQL"],
		"ss":"and more widely used than many alternatives. Using SQL"},
		{"l":73, "t":263, "r":300, "b":273,
		"q":[73, 62, 139, 29, 171, 13, 188, 19, 211, 20, 235, 65],
		"s":["signiﬁcantly", "faster", "on", "this", "new", "architecture."],
		"ss":"signiﬁcantly faster on this new architecture."},
		{"l":412, "t":258, "r":720, "b":269,
		"q":[412, 52, 468, 6, 479, 29, 512, 24, 541, 16, 562, 49, 616, 10, 630, 43, 678, 42],
		"s":["represents", "a", "break", "from", "the", "paradigm", "of", "previous", "research"],
		"ss":"represents a break from the paradigm of previous research"},
		{"l":84, "t":276, "r":381, "b":287,
		"q":[84, 20, 109, 25, 138, 52, 194, 48, 245, 51, 300, 24, 328, 17, 348, 32],
		"s":["The", "most", "important", "hardware", "limitation", "from", "the", "stand-"],
		"ss":"The most important hardware limitation from the stand-"},
		{"l":412, "t":272, "r":720, "b":282,
		"q":[412, 30, 447, 28, 481, 26, 513, 36, 555, 41, 602, 16, 624, 17, 646, 10, 662, 58],
		"s":["which", "drove", "GPU", "queries", "through", "the", "use", "of", "operational"],
		"ss":"which drove GPU queries through the use of operational"},
		{"l":73, "t":290, "r":381, "b":300,
		"q":[73, 27, 104, 10, 117, 6, 127, 46, 177, 8, 189, 16, 210, 48, 262, 27, 293, 39, 336, 10, 350, 31],
		"s":["point", "of", "a", "database", "is", "the", "relatively", "small", "amount", "of", "global"],
		"ss":"point of a database is the relatively small amount of global"},
		{"l":412, "t":285, "r":720, "b":296,
		"q":[412, 55, 472, 23, 500, 11, 516, 26, 548, 37, 591, 11, 607, 23, 639, 67, 712, 8],
		"s":["primitives,", "such", "as", "map,", "reduce,", "or", "sort.", "Additionally,", "it"],
		"ss":"primitives, such as map, reduce, or sort. Additionally, it"},
		{"l":73, "t":303, "r":381, "b":314,
		"q":[73, 42, 120, 13, 138, 37, 181, 54, 240, 44, 290, 34, 334, 20, 360, 20],
		"s":["memory", "on", "current", "generation", "NVIDIA", "GPUs.", "The", "cur-"],
		"ss":"memory on current generation NVIDIA GPUs. The cur-"},
		{"l":412, "t":299, "r":720, "b":309,
		"q":[412, 65, 482, 38, 526, 16, 549, 27, 582, 43, 630, 11, 646, 37, 689, 31],
		"s":["dramatically", "reduces", "the", "eﬀort", "required", "to", "employ", "GPUs"],
		"ss":"dramatically reduces the eﬀort required to employ GPUs"},
		{"l":73, "t":317, "r":381, "b":327,
		"q":[73, 21, 97, 17, 118, 10, 132, 16, 152, 18, 174, 47, 225, 16, 245, 44, 294, 27, 324, 36, 364, 17],
		"s":["rent", "top", "of", "the", "line", "GPGPU,", "the", "NVIDIA", "Tesla", "C1060,", "has"],
		"ss":"rent top of the line GPGPU, the NVIDIA Tesla C1060, has"},
		{"l":412, "t":312, "r":720, "b":323,
		"q":[412, 14, 430, 46, 480, 65, 550, 20, 574, 34, 612, 10, 626, 19, 649, 29, 682, 38],
		"s":["for", "database", "acceleration.", "The", "results", "of", "this", "paper", "suggest"],
		"ss":"for database acceleration. The results of this paper suggest"},
		{"l":73, "t":330, "r":381, "b":341,
		"q":[73, 21, 98, 48, 150, 10, 164, 44, 215, 40, 260, 19, 283, 8, 296, 25, 325, 37, 367, 14],
		"s":["four", "gigabytes", "of", "memory.", "Though", "this", "is", "large", "enough", "for"],
		"ss":"four gigabytes of memory. Though this is large enough for"},
		{"l":412, "t":326, "r":720, "b":336,
		"q":[412, 22, 438, 70, 513, 50, 567, 13, 584, 26, 615, 48, 667, 8, 680, 6, 690, 30],
		"s":["that", "implementing", "databases", "on", "GPU", "hardware", "is", "a", "fertile"],
		"ss":"that implementing databases on GPU hardware is a fertile"},
		{"l":73, "t":344, "r":381, "b":354,
		"q":[73, 40, 118, 47, 171, 10, 186, 40, 232, 10, 247, 23, 277, 10, 292, 26, 324, 10, 340, 41],
		"s":["literally", "hundreds", "of", "millions", "of", "rows", "of", "data,", "in", "practice"],
		"ss":"literally hundreds of millions of rows of data, in practice"},
		{"l":412, "t":339, "r":691, "b":349,
		"q":[412, 22, 437, 14, 456, 31, 491, 42, 537, 19, 560, 59, 623, 68],
		"s":["area", "for", "future", "research", "and", "commercial", "development."],
		"ss":"area for future research and commercial development."},
		{"l":73, "t":357, "r":381, "b":368,
		"q":[73, 28, 105, 50, 159, 16, 178, 10, 192, 16, 212, 43, 259, 11, 273, 23, 300, 45, 349, 32],
		"s":["many", "databases", "are", "in", "the", "terabyte", "or", "even", "petabyte", "range."],
		"ss":"many databases are in the terabyte or even petabyte range."},
		{"l":423, "t":353, "r":720, "b":363,
		"q":[423, 20, 448, 36, 488, 46, 537, 19, 560, 23, 587, 11, 602, 6, 612, 45, 660, 14, 678, 16, 699, 21],
		"s":["The", "SQLite", "database", "was", "used", "as", "a", "platform", "for", "the", "pro-"],
		"ss":"The SQLite database was used as a platform for the pro-"},
		{"l":73, "t":371, "r":381, "b":381,
		"q":[73, 23, 99, 53, 154, 44, 201, 46, 250, 42, 294, 13, 310, 16, 329, 30, 362, 19],
		"s":["This", "restriction", "hampers", "database", "research", "on", "the", "GPU,", "and"],
		"ss":"This restriction hampers database research on the GPU, and"},
		{"l":412, "t":366, "r":720, "b":376,
		"q":[412, 22, 437, 44, 484, 16, 504, 17, 524, 10, 536, 13, 552, 40, 595, 23, 622, 38, 663, 57],
		"s":["ject,", "enabling", "the", "use", "of", "an", "existing", "SQL", "parsing", "mechanism"],
		"ss":"ject, enabling the use of an existing SQL parsing mechanism"},
		{"l":73, "t":384, "r":381, "b":395,
		"q":[73, 32, 108, 18, 130, 51, 183, 57, 244, 40, 289, 30, 322, 18, 344, 37],
		"s":["makes", "any", "enterprise", "application", "limited.", "Fermi", "will", "employ"],
		"ss":"makes any enterprise application limited. Fermi will employ"},
		{"l":412, "t":380, "r":720, "b":390,
		"q":[412, 19, 434, 49, 485, 42, 530, 26, 559, 19, 581, 26, 611, 52, 668, 52],
		"s":["and", "switching", "between", "CPU", "and", "GPU", "execution.", "Execution"],
		"ss":"and switching between CPU and GPU execution. Execution"},
		{"l":73, "t":398, "r":381, "b":408,
		"q":[73, 6, 82, 30, 116, 38, 157, 31, 192, 38, 233, 8, 245, 41, 289, 11, 303, 38, 344, 13, 361, 11, 375, 6],
		"s":["a", "40-bit", "address", "space,", "making", "it", "possible", "to", "address", "up", "to", "a"],
		"ss":"a 40-bit address space, making it possible to address up to a"},
		{"l":412, "t":393, "r":720, "b":403,
		"q":[412, 13, 429, 16, 450, 26, 481, 19, 504, 52, 561, 13, 578, 80, 662, 16, 683, 36],
		"s":["on", "the", "GPU", "was", "supported", "by", "reimplementing", "the", "SQLite"],
		"ss":"on the GPU was supported by reimplementing the SQLite"},
		{"l":73, "t":411, "r":381, "b":422,
		"q":[73, 43, 119, 10, 132, 44, 180, 36, 219, 8, 231, 40, 274, 11, 288, 12, 304, 22, 329, 21, 353, 28],
		"s":["terabyte", "of", "memory,", "though", "it", "remains", "to", "be", "seen", "how", "much"],
		"ss":"terabyte of memory, though it remains to be seen how much"},
		{"l":412, "t":407, "r":720, "b":417,
		"q":[412, 35, 450, 43, 495, 11, 509, 6, 518, 35, 557, 34, 596, 20, 620, 36, 659, 45, 707, 13],
		"s":["virtual", "machine", "as", "a", "CUDA", "kernel.", "The", "queries", "executed", "on"],
		"ss":"virtual machine as a CUDA kernel. The queries executed on"},
		{"l":73, "t":425, "r":344, "b":435,
		"q":[73, 10, 86, 19, 109, 28, 141, 63, 208, 45, 257, 18, 279, 41, 325, 20],
		"s":["of", "this", "space", "Fermi-based", "products", "will", "actually", "use."],
		"ss":"of this space Fermi-based products will actually use."},
		{"l":412, "t":420, "r":720, "b":430,
		"q":[412, 16, 432, 26, 462, 23, 489, 13, 505, 39, 547, 10, 560, 21, 584, 29, 617, 24, 644, 27, 675, 45],
		"s":["the", "GPU", "were", "an", "average", "of", "35X", "faster", "than", "those", "executed"],
		"ss":"the GPU were an average of 35X faster than those executed"},
		{"l":84, "t":438, "r":381, "b":449,
		"q":[84, 27, 114, 16, 134, 58, 195, 10, 208, 35, 246, 26, 276, 16, 295, 18, 317, 25, 345, 36],
		"s":["With", "the", "capabilities", "of", "CUDA", "there", "are", "two", "ways", "around"],
		"ss":"With the capabilities of CUDA there are two ways around"},
		{"l":412, "t":433, "r":720, "b":444,
		"q":[412, 41, 457, 16, 478, 27, 510, 36, 551, 35, 590, 46, 643, 20, 668, 52],
		"s":["through", "the", "serial", "SQLite", "virtual", "machine.", "The", "character-"],
		"ss":"through the serial SQLite virtual machine. The character-"},
		{"l":73, "t":452, "r":381, "b":462,
		"q":[73, 16, 95, 42, 143, 54, 210, 28, 245, 23, 274, 28, 308, 12, 326, 33, 366, 15],
		"s":["the", "memory", "limitation.", "First,", "data", "could", "be", "staged", "(or"],
		"ss":"the memory limitation. First, data could be staged (or"},
		{"l":412, "t":447, "r":720, "b":457,
		"q":[412, 26, 441, 10, 455, 23, 481, 31, 516, 16, 537, 23, 563, 10, 577, 23, 604, 28, 635, 41, 680, 19, 703, 16],
		"s":["istics", "of", "each", "query,", "the", "type", "of", "data", "being", "queried,", "and", "the"],
		"ss":"istics of each query, the type of data being queried, and the"},
		{"l":73, "t":465, "r":381, "b":476,
		"q":[73, 42, 119, 42, 167, 16, 189, 22, 216, 19, 240, 16, 262, 32, 299, 34, 338, 16, 360, 21],
		"s":["’paged’)", "between", "the", "host", "and", "the", "device", "during", "the", "exe-"],
		"ss":"’paged’) between the host and the device during the exe-"},
		{"l":412, "t":460, "r":720, "b":471,
		"q":[412, 19, 434, 10, 447, 16, 467, 29, 500, 15, 518, 23, 546, 13, 562, 52, 618, 35, 656, 10, 670, 21, 694, 26],
		"s":["size", "of", "the", "result", "set", "were", "all", "signiﬁcant", "factors", "in", "how", "CPU"],
		"ss":"size of the result set were all signiﬁcant factors in how CPU"},
		{"l":73, "t":479, "r":381, "b":489,
		"q":[73, 32, 110, 10, 126, 6, 137, 31, 178, 17, 201, 46, 253, 6, 264, 29, 299, 18, 322, 13, 340, 6, 352, 6, 363, 18],
		"s":["cution", "of", "a", "query.", "For", "example,", "a", "query", "run", "on", "a", "6", "GB"],
		"ss":"cution of a query. For example, a query run on a 6 GB"},
		{"l":412, "t":474, "r":720, "b":484,
		"q":[412, 19, 436, 26, 467, 49, 521, 53, 582, 39, 625, 19, 649, 49, 703, 16],
		"s":["and", "GPU", "execution", "compared.", "Despite", "this", "variation,", "the"],
		"ss":"and GPU execution compared. Despite this variation, the"},
		{"l":73, "t":492, "r":381, "b":503,
		"q":[73, 46, 124, 28, 157, 27, 190, 6, 202, 18, 225, 11, 241, 16, 264, 30, 299, 39, 343, 13, 362, 19],
		"s":["database", "could", "move", "3", "GB", "to", "the", "GPU,", "execute", "on", "this"],
		"ss":"database could move 3 GB to the GPU, execute on this"},
		{"l":412, "t":487, "r":720, "b":498,
		"q":[412, 49, 466, 42, 513, 14, 532, 16, 554, 12, 571, 36, 612, 54, 672, 19, 696, 24],
		"s":["minimum", "speedup", "for", "the", "13", "queries", "considered", "was", "20X."],
		"ss":"minimum speedup for the 13 queries considered was 20X."},
		{"l":73, "t":506, "r":381, "b":516,
		"q":[73, 31, 107, 23, 133, 27, 164, 16, 184, 19, 206, 19, 229, 11, 243, 16, 263, 26, 293, 19, 316, 46, 365, 15],
		"s":["block,", "then", "move", "the", "2nd", "half", "to", "the", "GPU", "and", "complete", "ex-"],
		"ss":"block, then move the 2nd half to the GPU and complete ex-"},
		{"l":412, "t":501, "r":720, "b":511,
		"q":[412, 67, 484, 16, 505, 34, 544, 10, 558, 19, 582, 29, 616, 16, 637, 45, 687, 11, 703, 17],
		"s":["Additionally,", "the", "results", "of", "this", "paper", "are", "expected", "to", "im-"],
		"ss":"Additionally, the results of this paper are expected to im-"},
		{"l":73, "t":519, "r":381, "b":530,
		"q":[73, 41, 119, 20, 143, 42, 189, 40, 232, 23, 259, 31, 294, 31, 328, 52],
		"s":["ecution.", "The", "memory", "transfer", "time", "would", "create", "signiﬁcant"],
		"ss":"ecution. The memory transfer time would create signiﬁcant"},
		{"l":412, "t":514, "r":720, "b":525,
		"q":[412, 28, 445, 23, 474, 16, 496, 34, 536, 10, 551, 16, 573, 23, 601, 54, 660, 10, 676, 44],
		"s":["prove", "with", "the", "release", "of", "the", "next", "generation", "of", "NVIDIA"],
		"ss":"prove with the release of the next generation of NVIDIA"},
		{"l":73, "t":533, "r":381, "b":543,
		"q":[73, 46, 122, 19, 146, 16, 166, 29, 199, 46, 249, 31, 283, 23, 311, 11, 325, 11, 340, 20, 364, 16],
		"s":["overhead", "and", "the", "entire", "database", "would", "have", "to", "ﬁt", "into", "the"],
		"ss":"overhead and the entire database would have to ﬁt into the"},
		{"l":412, "t":528, "r":720, "b":538,
		"q":[412, 26, 442, 51, 500, 40, 544, 36, 584, 42, 630, 8, 643, 39, 686, 34],
		"s":["GPU", "hardware.", "Though", "further", "research", "is", "needed,", "clearly"],
		"ss":"GPU hardware. Though further research is needed, clearly"},
		{"l":73, "t":546, "r":381, "b":557,
		"q":[73, 22, 98, 44, 145, 25, 173, 36, 212, 13, 227, 21, 251, 31, 285, 31, 319, 24, 346, 35],
		"s":["host", "memory,", "since", "storing", "on", "disk", "would", "create", "huge", "bottle-"],
		"ss":"host memory, since storing on disk would create huge bottle-"},
		{"l":412, "t":541, "r":720, "b":552,
		"q":[412, 32, 446, 23, 473, 29, 505, 53, 561, 18, 582, 12, 597, 62, 662, 57],
		"s":["native", "SQL", "query", "processing", "can", "be", "signiﬁcantly", "accelerated"],
		"ss":"native SQL query processing can be signiﬁcantly accelerated"},
		{"l":73, "t":560, "r":381, "b":570,
		"q":[73, 26, 104, 9, 116, 8, 127, 41, 171, 22, 195, 36, 234, 45, 283, 19, 305, 20, 328, 31, 362, 19],
		"s":["neck.", "It", "is", "possible", "that", "queries", "executed", "this", "way", "would", "still"],
		"ss":"neck. It is possible that queries executed this way would still"},
		{"l":412, "t":555, "r":520, "b":565,
		"q":[412, 23, 439, 26, 469, 51],
		"s":["with", "GPU", "hardware."],
		"ss":"with GPU hardware."},
		{"l":73, "t":573, "r":381, "b":584,
		"q":[73, 58, 135, 26, 164, 52, 220, 18, 242, 19, 265, 37, 306, 19, 329, 17, 350, 31],
		"s":["outperform", "CPU", "execution,", "but", "this", "scheme", "was", "not", "tested"],
		"ss":"outperform CPU execution, but this scheme was not tested"},
		{"l":73, "t":587, "r":381, "b":597,
		"q":[73, 10, 88, 19, 113, 40, 164, 20, 190, 34, 230, 61, 297, 14, 317, 16, 339, 42],
		"s":["in", "this", "project.", "The", "second", "workaround", "for", "the", "memory"],
		"ss":"in this project. The second workaround for the memory"},
		{"l":412, "t":585, "r":619, "b":598,
		"q":[412, 12, 439, 180],
		"s":["8.", "ACKNOWLEDGEMENTS"],
		"ss":"8. ACKNOWLEDGEMENTS"},
		{"l":73, "t":600, "r":381, "b":610,
		"q":[73, 51, 129, 8, 142, 11, 158, 32, 195, 43, 243, 55, 304, 30, 339, 42],
		"s":["limitation", "is", "to", "utilize", "CUDA’s", "’zero-copy’", "direct", "memory"],
		"ss":"limitation is to utilize CUDA’s ’zero-copy’ direct memory"},
		{"l":423, "t":604, "r":720, "b":614,
		"q":[423, 23, 451, 25, 480, 19, 504, 52, 560, 10, 575, 22, 601, 13, 618, 23, 646, 27, 678, 16, 700, 19],
		"s":["This", "work", "was", "supported", "in", "part", "by", "NSF", "grant", "no.", "IIS-"],
		"ss":"This work was supported in part by NSF grant no. IIS-"},
		{"l":73, "t":614, "r":381, "b":624,
		"q":[73, 31, 109, 68, 182, 18, 206, 19, 230, 8, 243, 18, 266, 38, 310, 24, 339, 16, 360, 21],
		"s":["access", "functionality,", "but", "this", "is", "less", "feasible", "than", "the", "ﬁrst"],
		"ss":"access functionality, but this is less feasible than the ﬁrst"},
		{"l":412, "t":617, "r":720, "b":628,
		"q":[412, 42, 457, 19, 479, 24, 506, 27, 537, 16, 558, 48, 611, 16, 631, 31, 665, 20, 688, 18, 709, 11],
		"s":["0612049", "and", "SRC", "grant", "no.", "1607.001.", "We", "would", "also", "like", "to"],
		"ss":"0612049 and SRC grant no. 1607.001. We would also like to"},
		{"l":73, "t":627, "r":381, "b":637,
		"q":[73, 36, 115, 19, 138, 22, 164, 23, 191, 19, 214, 23, 241, 10, 255, 29, 288, 23, 315, 66],
		"s":["option.", "Not", "only", "does", "this", "type", "of", "DMA", "have", "prohibitively"],
		"ss":"option. Not only does this type of DMA have prohibitively"},
		{"l":412, "t":631, "r":720, "b":641,
		"q":[412, 30, 446, 16, 466, 58, 528, 48, 579, 14, 597, 24, 626, 35, 665, 55],
		"s":["thank", "the", "anonymous", "reviewers", "for", "their", "helpful", "comments."],
		"ss":"thank the anonymous reviewers for their helpful comments."},
		{"l":73, "t":641, "r":381, "b":651,
		"q":[73, 17, 93, 59, 156, 18, 177, 8, 188, 41, 232, 22, 257, 16, 277, 42, 322, 12, 338, 43],
		"s":["low", "bandwidth,", "but", "it", "requires", "that", "the", "memory", "be", "declared"],
		"ss":"low bandwidth, but it requires that the memory be declared"},
		{"l":73, "t":654, "r":122, "b":664,
		"q":[73, 11, 88, 35],
		"s":["as", "pinned"],
		"ss":"as pinned"},
		{"l":122, "t":652, "r":127, "b":660,
		"q":[122, 5],
		"s":["1"],
		"ss":"1"},
		{"l":128, "t":654, "r":381, "b":664,
		"q":[128, 22, 156, 11, 171, 44, 220, 24, 248, 16, 269, 26, 299, 19, 323, 16, 344, 37],
		"s":["[19].", "In", "practice,", "both", "the", "GPU", "and", "the", "operat-"],
		"ss":"[19]. In practice, both the GPU and the operat-"},
		{"l":73, "t":667, "r":381, "b":678,
		"q":[73, 16, 93, 35, 132, 16, 152, 27, 184, 11, 198, 23, 226, 29, 259, 11, 274, 35, 313, 42, 359, 22],
		"s":["ing", "system", "are", "likely", "to", "have", "limits", "to", "pinned", "memory", "that"],
		"ss":"ing system are likely to have limits to pinned memory that"},
		{"l":412, "t":661, "r":542, "b":675,
		"q":[412, 12, 439, 104],
		"s":["9.", "REFERENCES"],
		"ss":"9. REFERENCES"},
		{"l":73, "t":681, "r":381, "b":691,
		"q":[73, 16, 92, 18, 113, 24, 141, 6, 150, 51, 205, 22, 231, 65, 300, 16, 320, 25, 349, 10, 362, 19],
		"s":["are", "less", "than", "4", "gigabytes,", "thus", "undermining", "the", "basis", "of", "this"],
		"ss":"are less than 4 gigabytes, thus undermining the basis of this"},
		{"l":418, "t":682, "r":695, "b":693,
		"q":[418, 13, 436, 12, 452, 34, 490, 12, 506, 23, 533, 12, 549, 46, 599, 19, 622, 12, 638, 11, 654, 41],
		"s":["[1]", "N.", "Bandi,", "C.", "Sun,", "D.", "Agrawal,", "and", "A.", "El", "Abbadi."],
		"ss":"[1] N. Bandi, C. Sun, D. Agrawal, and A. El Abbadi."},
		{"l":73, "t":694, "r":123, "b":705,
		"q":[73, 50],
		"s":["approach."],
		"ss":"approach."},
		{"l":436, "t":696, "r":720, "b":706,
		"q":[436, 50, 490, 61, 555, 10, 568, 59, 631, 54, 689, 6, 699, 21],
		"s":["Hardware", "acceleration", "in", "commercial", "databases:", "a", "case"],
		"ss":"Hardware acceleration in commercial databases: a case"},
		{"l":436, "t":709, "r":718, "b":720,
		"q":[436, 29, 469, 10, 482, 34, 520, 57, 581, 11, 596, 34, 634, 19, 659, 59],
		"s":["study", "of", "spatial", "operations.", "In", "VLDB", "’04:", "Proceedings"],
		"ss":"study of spatial operations. In VLDB ’04: Proceedings"},
		{"l":73, "t":717, "r":278, "b":731,
		"q":[73, 19, 107, 74, 186, 92],
		"s":["6.3", "Multi-GPU", "Conﬁguration"],
		"ss":"6.3 Multi-GPU Conﬁguration"},
		{"l":436, "t":723, "r":718, "b":733,
		"q":[436, 10, 450, 15, 470, 46, 520, 67, 591, 53, 649, 13, 666, 24, 694, 24],
		"s":["of", "the", "Thirtieth", "international", "conference", "on", "Very", "large"],
		"ss":"of the Thirtieth international conference on Very large"},
		{"l":84, "t":737, "r":381, "b":747,
		"q":[84, 9, 98, 26, 129, 17, 151, 62, 219, 10, 234, 19, 259, 29, 293, 8, 307, 16, 328, 52],
		"s":["A", "topic", "left", "unexamined", "in", "this", "paper", "is", "the", "possibility"],
		"ss":"A topic left unexamined in this paper is the possibility"},
		{"l":436, "t":736, "r":720, "b":746,
		"q":[436, 22, 462, 29, 495, 28, 527, 57, 587, 34, 624, 65, 693, 27],
		"s":["data", "bases,", "pages", "1021–1032.", "VLDB", "Endowment,", "2004."],
		"ss":"data bases, pages 1021–1032. VLDB Endowment, 2004."},
		{"l":73, "t":750, "r":381, "b":760,
		"q":[73, 10, 86, 45, 134, 13, 151, 6, 161, 23, 188, 15, 207, 19, 230, 40, 274, 6, 283, 29, 316, 65],
		"s":["of", "breaking", "up", "a", "data", "set", "and", "running", "a", "query", "concurrently"],
		"ss":"of breaking up a data set and running a query concurrently"},
		{"l":418, "t":751, "r":717, "b":761,
		"q":[418, 13, 436, 10, 450, 24, 477, 14, 495, 33, 533, 9, 546, 32, 582, 12, 598, 38, 640, 9, 653, 15, 672, 45],
		"s":["[2]", "S.", "Che,", "M.", "Boyer,", "J.", "Meng,", "D.", "Tarjan,", "J.", "W.", "Sheaﬀer,"],
		"ss":"[2] S. Che, M. Boyer, J. Meng, D. Tarjan, J. W. Sheaﬀer,"},
		{"l":73, "t":764, "r":381, "b":774,
		"q":[73, 13, 90, 43, 137, 34, 178, 40, 222, 26, 253, 31, 288, 45, 338, 12, 355, 26],
		"s":["on", "multiple", "GPUs.", "Though", "there", "would", "certainly", "be", "coor-"],
		"ss":"on multiple GPUs. Though there would certainly be coor-"},
		{"l":436, "t":764, "r":648, "b":775,
		"q":[436, 19, 459, 13, 475, 45, 525, 9, 537, 64, 605, 29, 638, 10],
		"s":["and", "K.", "Skadron.", "A", "performance", "study", "of"],
		"ss":"and K. Skadron. A performance study of"},
		{"l":73, "t":777, "r":381, "b":787,
		"q":[73, 43, 120, 49, 174, 8, 187, 8, 199, 22, 226, 27, 258, 22, 285, 23, 312, 36, 353, 28],
		"s":["dination", "overhead,", "it", "is", "very", "likely", "that", "SQL", "queries", "could"],
		"ss":"dination overhead, it is very likely that SQL queries could"},
		{"l":436, "t":778, "r":703, "b":788,
		"q":[436, 82, 521, 62, 587, 13, 604, 43, 651, 53],
		"s":["general-purpose", "applications", "on", "graphics", "processors"],
		"ss":"general-purpose applications on graphics processors"},
		{"l":73, "t":791, "r":381, "b":801,
		"q":[73, 12, 89, 36, 130, 57, 192, 23, 219, 23, 247, 6, 257, 71, 335, 46],
		"s":["be", "further", "accelerated", "with", "such", "a", "conﬁguration.", "Consider"],
		"ss":"be further accelerated with such a conﬁguration. Consider"},
		{"l":436, "t":791, "r":647, "b":802,
		"q":[436, 27, 467, 28, 499, 10, 513, 40, 557, 39, 600, 48],
		"s":["using", "cuda.", "J.", "Parallel", "Distrib.", "Comput.,"],
		"ss":"using cuda. J. Parallel Distrib. Comput.,"},
		{"l":73, "t":804, "r":381, "b":814,
		"q":[73, 16, 93, 44, 140, 27, 171, 34, 208, 6, 217, 30, 251, 41, 295, 30, 329, 43, 375, 6],
		"s":["the", "NVIDIA", "Tesla", "S1070,", "a", "server", "product", "which", "contains", "4"],
		"ss":"the NVIDIA Tesla S1070, a server product which contains 4"},
		{"l":436, "t":805, "r":560, "b":815,
		"q":[436, 93, 533, 27],
		"s":["68(10):1370–1380,", "2008."],
		"ss":"68(10):1370–1380, 2008."},
		{"l":73, "t":818, "r":381, "b":828,
		"q":[73, 64, 141, 23, 167, 43, 212, 17, 232, 6, 241, 78, 322, 59],
		"s":["TeslaGPUs.", "This", "machine", "has", "a", "combinedGPU", "throughput"],
		"ss":"TeslaGPUs. This machine has a combinedGPU throughput"},
		{"l":418, "t":820, "r":695, "b":830,
		"q":[418, 13, 436, 9, 449, 27, 480, 19, 503, 10, 517, 59, 580, 60, 645, 49],
		"s":["[3]", "J.", "Dean", "and", "S.", "Ghemawat.", "Mapreduce:", "simpliﬁed"],
		"ss":"[3] J. Dean and S. Ghemawat. Mapreduce: simpliﬁed"},
		{"l":73, "t":831, "r":381, "b":841,
		"q":[73, 10, 85, 18, 106, 42, 151, 18, 172, 51, 226, 83, 313, 19, 335, 6, 344, 24, 371, 10],
		"s":["of", "408", "GB/sec,", "960", "streaming", "multiprocessors,", "and", "a", "total", "of"],
		"ss":"of 408 GB/sec, 960 streaming multiprocessors, and a total of"},
		{"l":436, "t":833, "r":698, "b":843,
		"q":[436, 23, 463, 53, 520, 13, 537, 25, 566, 42, 612, 51, 667, 31],
		"s":["data", "processing", "on", "large", "clusters.", "Commun.", "ACM,"],
		"ss":"data processing on large clusters. Commun. ACM,"},
		{"l":73, "t":845, "r":381, "b":855,
		"q":[73, 12, 89, 18, 111, 10, 124, 26, 155, 44, 205, 39, 248, 42, 294, 28, 326, 54],
		"s":["16", "GB", "of", "GPU", "memory.", "Further", "research", "could", "implement"],
		"ss":"16 GB of GPU memory. Further research could implement"},
		{"l":436, "t":847, "r":542, "b":857,
		"q":[436, 75, 515, 27],
		"s":["51(1):107–113,", "2008."],
		"ss":"51(1):107–113, 2008."},
		{"l":73, "t":858, "r":381, "b":868,
		"q":[73, 6, 83, 29, 116, 57, 177, 22, 203, 26, 233, 52, 290, 10, 303, 43, 350, 31],
		"s":["a", "query", "mechanism", "that", "takes", "advantage", "of", "multiple", "GPUs"],
		"ss":"a query mechanism that takes advantage of multiple GPUs"},
		{"l":418, "t":861, "r":692, "b":872,
		"q":[418, 13, 436, 12, 452, 10, 466, 22, 492, 19, 515, 12, 531, 53, 588, 26, 617, 45, 667, 25],
		"s":["[4]", "A.", "di", "Blas", "and", "T.", "Kaldeway.", "Data", "monster:", "Why"],
		"ss":"[4] A. di Blas and T. Kaldeway. Data monster: Why"},
		{"l":73, "t":880, "r":78, "b":888,
		"q":[73, 5],
		"s":["1"],
		"ss":"1"},
		{"l":436, "t":875, "r":662, "b":885,
		"q":[436, 43, 483, 53, 539, 18, 562, 51, 616, 46],
		"s":["graphics", "processors", "will", "transform", "database"],
		"ss":"graphics processors will transform database"},
		{"l":79, "t":882, "r":381, "b":892,
		"q":[79, 23, 105, 23, 132, 10, 145, 42, 190, 8, 202, 20, 225, 30, 259, 63, 326, 19, 348, 32],
		"s":["This", "type", "of", "memory", "is", "also", "called", "page-locked,", "and", "means"],
		"ss":"This type of memory is also called page-locked, and means"},
		{"l":73, "t":893, "r":381, "b":904,
		"q":[73, 22, 100, 16, 122, 49, 177, 35, 218, 17, 241, 62, 309, 16, 332, 33, 370, 11],
		"s":["that", "the", "operating", "system", "has", "relinquished", "the", "ability", "to"],
		"ss":"that the operating system has relinquished the ability to"},
		{"l":436, "t":888, "r":670, "b":899,
		"q":[436, 56, 496, 29, 529, 51, 584, 55, 643, 27],
		"s":["processing.", "IEEE", "Spectrum,", "September", "2009."],
		"ss":"processing. IEEE Spectrum, September 2009."},
		{"l":73, "t":905, "r":381, "b":915,
		"q":[73, 25, 103, 17, 126, 16, 148, 27, 185, 29, 220, 23, 248, 50, 304, 16, 326, 42, 373, 8],
		"s":["swap", "out", "the", "page.", "Thus,", "once", "allocated,", "the", "memory", "is"],
		"ss":"swap out the page. Thus, once allocated, the memory is"},
		{"l":418, "t":903, "r":705, "b":913,
		"q":[418, 13, 436, 10, 450, 28, 482, 9, 495, 17, 517, 12, 533, 24, 560, 19, 584, 12, 599, 25, 628, 29, 662, 43],
		"s":["[5]", "S.", "Ding,", "J.", "He,", "H.", "Yan,", "and", "T.", "Suel.", "Using", "graphics"],
		"ss":"[5] S. Ding, J. He, H. Yan, and T. Suel. Using graphics"},
		{"l":73, "t":917, "r":262, "b":927,
		"q":[73, 57, 134, 11, 148, 12, 164, 10, 178, 36, 218, 44],
		"s":["guaranteed", "to", "be", "in", "certain", "location."],
		"ss":"guaranteed to be in certain location."},
		{"l":436, "t":917, "r":711, "b":927,
		"q":[436, 53, 493, 14, 511, 22, 537, 64, 605, 13, 622, 29, 655, 56],
		"s":["processors", "for", "high", "performance", "IR", "query", "processing."],
		"ss":"processors for high performance IR query processing."},
		{"l":399, "t":1010, "r":417, "b":1020,
		"q":[399, 18],
		"s":["102"],
		"ss":"102"}
	]},
	{"pageNum":10, "pageWidth":816, "pageHeight":1056,
	"blocks":[
		{"l":97, "t":74, "r":366, "b":84,
		"q":[97, 11, 112, 36, 151, 19, 176, 59, 240, 10, 254, 15, 273, 22, 300, 67],
		"s":["In", "WWW", "’09:", "Proceedings", "of", "the", "18th", "international"],
		"ss":"In WWW ’09: Proceedings of the 18th international"},
		{"l":436, "t":74, "r":701, "b":85,
		"q":[436, 59, 499, 10, 513, 15, 533, 23, 560, 67, 631, 53, 688, 13],
		"s":["Proceedings", "of", "the", "23rd", "international", "conference", "on"],
		"ss":"Proceedings of the 23rd international conference on"},
		{"l":97, "t":88, "r":365, "b":98,
		"q":[97, 53, 155, 13, 172, 32, 208, 23, 235, 22, 261, 28, 293, 45, 342, 23],
		"s":["conference", "on", "World", "wide", "web,", "pages", "421–430,", "New"],
		"ss":"conference on World wide web, pages 421–430, New"},
		{"l":436, "t":88, "r":717, "b":98,
		"q":[436, 84, 524, 28, 557, 45, 605, 23, 632, 28, 664, 21, 689, 28],
		"s":["Supercomputing,", "pages", "400–409,", "New", "York,", "NY,", "USA,"],
		"ss":"Supercomputing, pages 400–409, New York, NY, USA,"},
		{"l":97, "t":101, "r":248, "b":111,
		"q":[97, 28, 129, 21, 154, 28, 186, 27, 217, 31],
		"s":["York,", "NY,", "USA,", "2009.", "ACM."],
		"ss":"York, NY, USA, 2009. ACM."},
		{"l":436, "t":101, "r":498, "b":112,
		"q":[436, 27, 467, 31],
		"s":["2009.", "ACM."],
		"ss":"2009. ACM."},
		{"l":79, "t":116, "r":373, "b":126,
		"q":[79, 13, 97, 12, 113, 29, 145, 12, 161, 17, 182, 14, 200, 17, 222, 13, 238, 30, 272, 12, 288, 13, 304, 68],
		"s":["[6]", "R.", "Fang,", "B.", "He,", "M.", "Lu,", "K.", "Yang,", "N.", "K.", "Govindaraju,"],
		"ss":"[6] R. Fang, B. He, M. Lu, K. Yang, N. K. Govindaraju,"},
		{"l":412, "t":116, "r":691, "b":126,
		"q":[412, 18, 436, 48, 487, 42, 534, 23, 560, 54, 618, 24, 647, 44],
		"s":["[18]", "NVIDIA.", "Nvidia’s", "next", "generation", "cuda", "compute"],
		"ss":"[18] NVIDIA. Nvidia’s next generation cuda compute"},
		{"l":97, "t":129, "r":317, "b":140,
		"q":[97, 13, 113, 23, 140, 19, 164, 10, 178, 12, 194, 39, 237, 47, 288, 29],
		"s":["Q.", "Luo,", "and", "P.", "V.", "Sander.", "GPUQP:", "query"],
		"ss":"Q. Luo, and P. V. Sander. GPUQP: query"},
		{"l":436, "t":130, "r":539, "b":140,
		"q":[436, 65, 506, 33],
		"s":["architecture:", "Fermi."],
		"ss":"architecture: Fermi."},
		{"l":543, "t":130, "r":677, "b":140,
		"q":[543, 133],
		"s":["http://www.nvidia.com/"],
		"ss":"http://www.nvidia.com/"},
		{"l":97, "t":143, "r":349, "b":153,
		"q":[97, 68, 169, 27, 200, 43, 247, 56, 307, 11, 322, 28],
		"s":["co-processing", "using", "graphics", "processors.", "In", "ACM"],
		"ss":"co-processing using graphics processors. In ACM"},
		{"l":436, "t":144, "r":666, "b":154,
		"q":[436, 230],
		"s":["content/PDF/fermi_white_papers/NVIDIA_"],
		"ss":"content/PDF/fermi_white_papers/NVIDIA_"},
		{"l":97, "t":156, "r":381, "b":167,
		"q":[97, 49, 150, 68, 222, 57, 284, 13, 300, 66, 371, 10],
		"s":["SIGMOD", "International", "Conference", "on", "Management", "of"],
		"ss":"SIGMOD International Conference on Management of"},
		{"l":436, "t":157, "r":684, "b":167,
		"q":[436, 248],
		"s":["Fermi_Compute_Architecture_Whitepaper.pdf"],
		"ss":"Fermi_Compute_Architecture_Whitepaper.pdf"},
		{"l":684, "t":156, "r":688, "b":167,
		"q":[684, 3],
		"s":["."],
		"ss":"."},
		{"l":97, "t":170, "r":365, "b":180,
		"q":[97, 28, 129, 28, 161, 57, 222, 23, 249, 28, 281, 21, 306, 28, 338, 27],
		"s":["Data,", "pages", "1061–1063,", "New", "York,", "NY,", "USA,", "2007."],
		"ss":"Data, pages 1061–1063, New York, NY, USA, 2007."},
		{"l":412, "t":171, "r":711, "b":182,
		"q":[412, 18, 436, 48, 487, 45, 536, 35, 575, 69, 648, 34, 686, 24],
		"s":["[19]", "NVIDIA.", "NVIDIA", "CUDA", "Programming", "Guide,", "2.3.1"],
		"ss":"[19] NVIDIA. NVIDIA CUDA Programming Guide, 2.3.1"},
		{"l":97, "t":183, "r":128, "b":194,
		"q":[97, 31],
		"s":["ACM."],
		"ss":"ACM."},
		{"l":436, "t":185, "r":547, "b":195,
		"q":[436, 39, 479, 37, 520, 27],
		"s":["edition,", "August", "2009."],
		"ss":"edition, August 2009."},
		{"l":79, "t":198, "r":355, "b":208,
		"q":[79, 13, 97, 16, 116, 29, 149, 13, 165, 13, 182, 23, 209, 14, 227, 17, 248, 12, 264, 27, 296, 12, 312, 13, 328, 27],
		"s":["[7]", "W.", "Fang,", "K.", "K.", "Lau,", "M.", "Lu,", "X.", "Xiao,", "C.", "K.", "Lam,"],
		"ss":"[7] W. Fang, K. K. Lau, M. Lu, X. Xiao, C. K. Lam,"},
		{"l":436, "t":199, "r":708, "b":209,
		"q":[436, 273],
		"s":["http://developer.download.nvidia.com/compute/"],
		"ss":"http://developer.download.nvidia.com/compute/"},
		{"l":97, "t":211, "r":337, "b":222,
		"q":[97, 10, 111, 12, 127, 30, 161, 12, 177, 21, 201, 13, 218, 23, 245, 10, 259, 12, 275, 39, 318, 19],
		"s":["P.", "Y.", "Yang,", "B.", "Hel,", "Q.", "Luo,", "P.", "V.", "Sander,", "and"],
		"ss":"P. Y. Yang, B. Hel, Q. Luo, P. V. Sander, and"},
		{"l":436, "t":212, "r":715, "b":223,
		"q":[436, 279],
		"s":["cuda/2_3/toolkit/docs/NVIDIA_CUDA_Programming_"],
		"ss":"cuda/2_3/toolkit/docs/NVIDIA_CUDA_Programming_"},
		{"l":97, "t":225, "r":376, "b":235,
		"q":[97, 13, 113, 30, 147, 39, 190, 23, 217, 36, 257, 13, 273, 43, 320, 56],
		"s":["K.", "Yang.", "Parallel", "data", "mining", "on", "graphics", "processors."],
		"ss":"K. Yang. Parallel data mining on graphics processors."},
		{"l":436, "t":226, "r":515, "b":236,
		"q":[436, 79],
		"s":["Guide_2.3.pdf"],
		"ss":"Guide_2.3.pdf"},
		{"l":515, "t":225, "r":518, "b":236,
		"q":[515, 3],
		"s":["."],
		"ss":"."},
		{"l":97, "t":238, "r":360, "b":249,
		"q":[97, 49, 150, 35, 189, 27, 220, 28, 252, 53, 309, 10, 322, 38],
		"s":["Technical", "report,", "Hong", "Kong", "University", "of", "Science"],
		"ss":"Technical report, Hong Kong University of Science"},
		{"l":412, "t":240, "r":547, "b":250,
		"q":[412, 18, 436, 40, 480, 33, 516, 31],
		"s":["[20]", "SQLite.", "About", "sqlite."],
		"ss":"[20] SQLite. About sqlite."},
		{"l":97, "t":252, "r":212, "b":262,
		"q":[97, 19, 120, 61, 185, 27],
		"s":["and", "Technology,", "2008."],
		"ss":"and Technology, 2008."},
		{"l":436, "t":254, "r":606, "b":264,
		"q":[436, 170],
		"s":["http://sqlite.org/about.html"],
		"ss":"http://sqlite.org/about.html"},
		{"l":605, "t":253, "r":609, "b":264,
		"q":[605, 3],
		"s":["."],
		"ss":"."},
		{"l":79, "t":267, "r":380, "b":277,
		"q":[79, 13, 97, 12, 113, 68, 185, 9, 199, 28, 231, 12, 247, 40, 290, 19, 313, 12, 330, 50],
		"s":["[8]", "N.", "Govindaraju,", "J.", "Gray,", "R.", "Kumar,", "and", "D.", "Manocha."],
		"ss":"[8] N. Govindaraju, J. Gray, R. Kumar, and D. Manocha."},
		{"l":412, "t":268, "r":614, "b":279,
		"q":[412, 18, 436, 40, 480, 20, 504, 62, 570, 10, 583, 31],
		"s":["[21]", "SQLite.", "The", "architecture", "of", "sqlite."],
		"ss":"[21] SQLite. The architecture of sqlite."},
		{"l":97, "t":280, "r":381, "b":291,
		"q":[97, 75, 177, 22, 203, 64, 271, 43, 318, 63],
		"s":["GPUTeraSort:", "high", "performance", "graphics", "co-processor"],
		"ss":"GPUTeraSort: high performance graphics co-processor"},
		{"l":436, "t":282, "r":599, "b":293,
		"q":[436, 164],
		"s":["http://sqlite.org/arch.html"],
		"ss":"http://sqlite.org/arch.html"},
		{"l":599, "t":282, "r":603, "b":292,
		"q":[599, 3],
		"s":["."],
		"ss":"."},
		{"l":97, "t":294, "r":348, "b":304,
		"q":[97, 36, 137, 14, 155, 25, 184, 46, 233, 69, 306, 11, 321, 28],
		"s":["sorting", "for", "large", "database", "management.", "In", "ACM"],
		"ss":"sorting for large database management. In ACM"},
		{"l":412, "t":296, "r":663, "b":307,
		"q":[412, 18, 436, 40, 480, 26, 510, 33, 547, 45, 596, 14, 614, 49],
		"s":["[22]", "SQLite.", "Most", "widely", "deployed", "sql", "database."],
		"ss":"[22] SQLite. Most widely deployed sql database."},
		{"l":97, "t":307, "r":381, "b":318,
		"q":[97, 49, 150, 68, 222, 57, 284, 13, 300, 66, 371, 10],
		"s":["SIGMOD", "International", "Conference", "on", "Management", "of"],
		"ss":"SIGMOD International Conference on Management of"},
		{"l":436, "t":311, "r":648, "b":321,
		"q":[436, 212],
		"s":["http://sqlite.org/mostdeployed.html"],
		"ss":"http://sqlite.org/mostdeployed.html"},
		{"l":648, "t":310, "r":651, "b":320,
		"q":[648, 3],
		"s":["."],
		"ss":"."},
		{"l":97, "t":321, "r":353, "b":331,
		"q":[97, 28, 129, 28, 161, 45, 210, 23, 237, 28, 269, 21, 294, 28, 326, 27],
		"s":["Data,", "pages", "325–336,", "New", "York,", "NY,", "USA,", "2006."],
		"ss":"Data, pages 325–336, New York, NY, USA, 2006."},
		{"l":412, "t":325, "r":642, "b":335,
		"q":[412, 18, 436, 40, 480, 29, 513, 35, 551, 43, 598, 44],
		"s":["[23]", "SQLite.", "Sqlite", "virtual", "machine", "opcodes."],
		"ss":"[23] SQLite. Sqlite virtual machine opcodes."},
		{"l":97, "t":334, "r":128, "b":345,
		"q":[97, 31],
		"s":["ACM."],
		"ss":"ACM."},
		{"l":436, "t":339, "r":612, "b":349,
		"q":[436, 176],
		"s":["http://sqlite.org/opcode.html"],
		"ss":"http://sqlite.org/opcode.html"},
		{"l":612, "t":338, "r":615, "b":349,
		"q":[612, 3],
		"s":["."],
		"ss":"."},
		{"l":79, "t":349, "r":372, "b":359,
		"q":[79, 13, 97, 12, 113, 13, 129, 68, 202, 12, 217, 32, 254, 15, 273, 33, 310, 14, 328, 21, 353, 19],
		"s":["[9]", "N.", "K.", "Govindaraju,", "B.", "Lloyd,", "W.", "Wang,", "M.", "Lin,", "and"],
		"ss":"[9] N. K. Govindaraju, B. Lloyd, W. Wang, M. Lin, and"},
		{"l":412, "t":353, "r":573, "b":363,
		"q":[412, 18, 436, 39, 479, 36, 518, 55],
		"s":["[24]", "Thrust.", "Thrust", "homepage."],
		"ss":"[24] Thrust. Thrust homepage."},
		{"l":97, "t":362, "r":379, "b":373,
		"q":[97, 12, 113, 50, 168, 22, 193, 65, 263, 10, 276, 46, 326, 54],
		"s":["D.", "Manocha.", "Fast", "computation", "of", "database", "operations"],
		"ss":"D. Manocha. Fast computation of database operations"},
		{"l":436, "t":367, "r":630, "b":377,
		"q":[436, 194],
		"s":["http://code.google.com/p/thrust/"],
		"ss":"http://code.google.com/p/thrust/"},
		{"l":630, "t":367, "r":633, "b":377,
		"q":[630, 3],
		"s":["."],
		"ss":"."},
		{"l":97, "t":376, "r":370, "b":386,
		"q":[97, 27, 128, 43, 175, 56, 235, 11, 250, 64, 318, 19, 342, 28],
		"s":["using", "graphics", "processors.", "In", "SIGGRAPH", "’05:", "ACM"],
		"ss":"using graphics processors. In SIGGRAPH ’05: ACM"},
		{"l":412, "t":381, "r":719, "b":392,
		"q":[412, 18, 436, 24, 464, 30, 498, 14, 516, 44, 565, 10, 578, 10, 592, 62, 658, 19, 681, 15, 700, 18],
		"s":["[25]", "S.-Z.", "Ueng,", "M.", "Lathara,", "S.", "S.", "Baghsorkhi,", "and", "W.", "mei"],
		"ss":"[25] S.-Z. Ueng, M. Lathara, S. S. Baghsorkhi, and W. mei"},
		{"l":97, "t":389, "r":374, "b":400,
		"q":[97, 64, 165, 24, 193, 44, 242, 24, 269, 21, 294, 23, 321, 28, 353, 21],
		"s":["SIGGRAPH", "2005", "Courses,", "page", "206,", "New", "York,", "NY,"],
		"ss":"SIGGRAPH 2005 Courses, page 206, New York, NY,"},
		{"l":436, "t":395, "r":688, "b":405,
		"q":[436, 15, 455, 27, 487, 51, 543, 48, 596, 19, 619, 69],
		"s":["W.", "Hwu.", "Cuda-lite:", "Reducing", "gpu", "programming"],
		"ss":"W. Hwu. Cuda-lite: Reducing gpu programming"},
		{"l":97, "t":403, "r":191, "b":413,
		"q":[97, 28, 128, 27, 159, 31],
		"s":["USA,", "2005.", "ACM."],
		"ss":"USA, 2005. ACM."},
		{"l":436, "t":408, "r":549, "b":419,
		"q":[436, 59, 499, 11, 513, 36],
		"s":["complexity.", "In", "LCPC,"],
		"ss":"complexity. In LCPC,"},
		{"l":553, "t":408, "r":643, "b":418,
		"q":[553, 28, 585, 27, 616, 27],
		"s":["pages", "1–15,", "2008."],
		"ss":"pages 1–15, 2008."},
		{"l":73, "t":418, "r":334, "b":428,
		"q":[73, 18, 97, 12, 113, 12, 129, 21, 154, 19, 177, 12, 193, 10, 207, 74, 285, 38, 328, 6],
		"s":["[10]", "T.", "D.", "Han", "and", "T.", "S.", "Abdelrahman.", "hicuda:", "a"],
		"ss":"[10] T. D. Han and T. S. Abdelrahman. hicuda: a"},
		{"l":97, "t":431, "r":318, "b":442,
		"q":[97, 49, 150, 77, 231, 45, 281, 14, 299, 19],
		"s":["high-level", "directive-based", "language", "for", "gpu"],
		"ss":"high-level directive-based language for gpu"},
		{"l":412, "t":436, "r":491, "b":450,
		"q":[412, 80],
		"s":["APPENDIX"],
		"ss":"APPENDIX"},
		{"l":97, "t":445, "r":347, "b":455,
		"q":[97, 73, 173, 11, 188, 57, 251, 59, 314, 10, 328, 19],
		"s":["programming.", "In", "GPGPU-2:", "Proceedings", "of", "2nd"],
		"ss":"programming. In GPGPU-2: Proceedings of 2nd"},
		{"l":97, "t":458, "r":380, "b":469,
		"q":[97, 51, 152, 13, 169, 40, 214, 41, 259, 54, 317, 13, 334, 46],
		"s":["Workshop", "on", "General", "Purpose", "Processing", "on", "Graphics"],
		"ss":"Workshop on General Purpose Processing on Graphics"},
		{"l":412, "t":459, "r":556, "b":473,
		"q":[412, 15, 442, 69, 515, 41],
		"s":["A.", "QUERIES", "USED"],
		"ss":"A. QUERIES USED"},
		{"l":97, "t":472, "r":371, "b":482,
		"q":[97, 54, 155, 31, 190, 28, 222, 33, 259, 23, 286, 28, 318, 21, 343, 28],
		"s":["Processing", "Units,", "pages", "52–61,", "New", "York,", "NY,", "USA,"],
		"ss":"Processing Units, pages 52–61, New York, NY, USA,"},
		{"l":423, "t":479, "r":720, "b":489,
		"q":[423, 31, 459, 16, 480, 16, 501, 16, 522, 36, 563, 23, 590, 10, 605, 16, 626, 64, 695, 25],
		"s":["Below", "are", "the", "ten", "queries", "used", "in", "the", "performance", "mea-"],
		"ss":"Below are the ten queries used in the performance mea-"},
		{"l":97, "t":485, "r":159, "b":496,
		"q":[97, 27, 128, 31],
		"s":["2009.", "ACM."],
		"ss":"2009. ACM."},
		{"l":412, "t":492, "r":525, "b":502,
		"q":[412, 55, 474, 25, 503, 22],
		"s":["surements.", "Note", "that"],
		"ss":"surements. Note that"},
		{"l":529, "t":493, "r":578, "b":503,
		"q":[529, 48],
		"s":["uniformi"],
		"ss":"uniformi"},
		{"l":578, "t":492, "r":581, "b":502,
		"q":[578, 3],
		"s":[","],
		"ss":","},
		{"l":585, "t":493, "r":634, "b":503,
		"q":[585, 48],
		"s":["normali5"],
		"ss":"normali5"},
		{"l":634, "t":492, "r":661, "b":502,
		"q":[634, 3, 642, 19],
		"s":[",", "and"],
		"ss":", and"},
		{"l":665, "t":493, "r":720, "b":503,
		"q":[665, 55],
		"s":["normali20"],
		"ss":"normali20"},
		{"l":73, "t":500, "r":353, "b":510,
		"q":[73, 18, 97, 12, 113, 17, 134, 16, 153, 29, 186, 13, 202, 23, 229, 12, 246, 13, 262, 68, 334, 19],
		"s":["[11]", "B.", "He,", "W.", "Fang,", "Q.", "Luo,", "N.", "K.", "Govindaraju,", "and"],
		"ss":"[11] B. He, W. Fang, Q. Luo, N. K. Govindaraju, and"},
		{"l":412, "t":506, "r":533, "b":516,
		"q":[412, 16, 430, 35, 468, 35, 506, 27],
		"s":["are", "integer", "values,", "while"],
		"ss":"are integer values, while"},
		{"l":535, "t":506, "r":584, "b":516,
		"q":[535, 48],
		"s":["uniformf"],
		"ss":"uniformf"},
		{"l":584, "t":506, "r":587, "b":516,
		"q":[584, 3],
		"s":[","],
		"ss":","},
		{"l":590, "t":506, "r":638, "b":516,
		"q":[590, 48],
		"s":["normalf5"],
		"ss":"normalf5"},
		{"l":638, "t":506, "r":664, "b":516,
		"q":[638, 3, 645, 19],
		"s":[",", "and"],
		"ss":", and"},
		{"l":666, "t":506, "r":721, "b":516,
		"q":[666, 55],
		"s":["normalf20"],
		"ss":"normalf20"},
		{"l":97, "t":513, "r":372, "b":524,
		"q":[97, 12, 113, 33, 150, 29, 184, 6, 194, 56, 254, 54, 313, 13, 329, 43],
		"s":["T.", "Wang.", "Mars:", "a", "mapreduce", "framework", "on", "graphics"],
		"ss":"T. Wang. Mars: a mapreduce framework on graphics"},
		{"l":412, "t":519, "r":540, "b":529,
		"q":[412, 16, 431, 39, 474, 27, 505, 35],
		"s":["are", "ﬂoating", "point", "values."],
		"ss":"are ﬂoating point values."},
		{"l":97, "t":527, "r":352, "b":537,
		"q":[97, 56, 157, 11, 172, 33, 208, 19, 233, 59, 297, 10, 311, 15, 330, 22],
		"s":["processors.", "In", "PACT", "’08:", "Proceedings", "of", "the", "17th"],
		"ss":"processors. In PACT ’08: Proceedings of the 17th"},
		{"l":97, "t":540, "r":374, "b":551,
		"q":[97, 67, 168, 53, 226, 13, 243, 40, 286, 65, 356, 19],
		"s":["international", "conference", "on", "Parallel", "architectures", "and"],
		"ss":"international conference on Parallel architectures and"},
		{"l":422, "t":540, "r":431, "b":550,
		"q":[422, 9],
		"s":["1."],
		"ss":"1."},
		{"l":437, "t":540, "r":740, "b":551,
		"q":[437, 36, 480, 18, 504, 55, 564, 48, 619, 24, 649, 24, 679, 30, 716, 24],
		"s":["SELECT", "id,", "uniformi,", "normali5", "FROM", "test", "WHERE", "uni-"],
		"ss":"SELECT id, uniformi, normali5 FROM test WHERE uni-"},
		{"l":97, "t":554, "r":381, "b":564,
		"q":[97, 60, 161, 56, 220, 28, 253, 45, 301, 23, 328, 28, 360, 21],
		"s":["compilation", "techniques,", "pages", "260–269,", "New", "York,", "NY,"],
		"ss":"compilation techniques, pages 260–269, New York, NY,"},
		{"l":437, "t":554, "r":601, "b":564,
		"q":[437, 30, 473, 6, 486, 12, 504, 18, 528, 48, 582, 6, 595, 6],
		"s":["formi", ">", "60", "AND", "normali5", "<", "0"],
		"ss":"formi > 60 AND normali5 < 0"},
		{"l":97, "t":567, "r":191, "b":578,
		"q":[97, 28, 128, 27, 159, 31],
		"s":["USA,", "2008.", "ACM."],
		"ss":"USA, 2008. ACM."},
		{"l":422, "t":571, "r":431, "b":582,
		"q":[422, 9],
		"s":["2."],
		"ss":"2."},
		{"l":437, "t":572, "r":740, "b":582,
		"q":[437, 36, 480, 18, 504, 55, 564, 48, 619, 24, 649, 24, 679, 30, 716, 24],
		"s":["SELECT", "id,", "uniformf,", "normalf5", "FROM", "test", "WHERE", "uni-"],
		"ss":"SELECT id, uniformf, normalf5 FROM test WHERE uni-"},
		{"l":73, "t":582, "r":373, "b":593,
		"q":[73, 18, 97, 12, 113, 17, 134, 14, 152, 17, 173, 13, 190, 30, 223, 12, 239, 29, 272, 12, 288, 13, 304, 68],
		"s":["[12]", "B.", "He,", "M.", "Lu,", "K.", "Yang,", "R.", "Fang,", "N.", "K.", "Govindaraju,"],
		"ss":"[12] B. He, M. Lu, K. Yang, R. Fang, N. K. Govindaraju,"},
		{"l":437, "t":585, "r":601, "b":596,
		"q":[437, 30, 473, 6, 486, 12, 504, 18, 528, 48, 582, 6, 595, 6],
		"s":["formf", ">", "60", "AND", "normalf5", "<", "0"],
		"ss":"formf > 60 AND normalf5 < 0"},
		{"l":97, "t":596, "r":323, "b":606,
		"q":[97, 13, 113, 23, 141, 19, 164, 10, 178, 12, 194, 39, 237, 53, 294, 29],
		"s":["Q.", "Luo,", "and", "P.", "V.", "Sander.", "Relational", "query"],
		"ss":"Q. Luo, and P. V. Sander. Relational query"},
		{"l":422, "t":603, "r":431, "b":613,
		"q":[422, 9],
		"s":["3."],
		"ss":"3."},
		{"l":437, "t":604, "r":740, "b":614,
		"q":[437, 36, 480, 18, 504, 55, 564, 48, 619, 24, 649, 24, 679, 30, 716, 24],
		"s":["SELECT", "id,", "uniformi,", "normali5", "FROM", "test", "WHERE", "uni-"],
		"ss":"SELECT id, uniformi, normali5 FROM test WHERE uni-"},
		{"l":97, "t":609, "r":354, "b":619,
		"q":[97, 64, 165, 13, 182, 43, 229, 56, 288, 28, 320, 33],
		"s":["coprocessing", "on", "graphics", "processors.", "ACM", "Trans."],
		"ss":"coprocessing on graphics processors. ACM Trans."},
		{"l":437, "t":617, "r":607, "b":627,
		"q":[437, 30, 473, 6, 486, 18, 510, 18, 534, 48, 589, 6, 601, 6],
		"s":["formi", ">", "-60", "AND", "normali5", "<", "5"],
		"ss":"formi > -60 AND normali5 < 5"},
		{"l":97, "t":623, "r":268, "b":633,
		"q":[97, 46, 147, 28, 179, 57, 241, 27],
		"s":["Database", "Syst.,", "34(4):1–39,", "2009."],
		"ss":"Database Syst., 34(4):1–39, 2009."},
		{"l":73, "t":637, "r":355, "b":648,
		"q":[73, 18, 97, 12, 113, 25, 142, 37, 183, 52, 239, 27, 270, 28, 301, 23, 328, 27],
		"s":["[13]", "T.", "Hoﬀ.", "Scaling", "postgresql", "using", "cuda,", "May", "2009."],
		"ss":"[13] T. Hoﬀ. Scaling postgresql using cuda, May 2009."},
		{"l":422, "t":635, "r":431, "b":645,
		"q":[422, 9],
		"s":["4."],
		"ss":"4."},
		{"l":437, "t":635, "r":740, "b":645,
		"q":[437, 36, 480, 18, 504, 55, 564, 48, 619, 24, 649, 24, 679, 30, 716, 24],
		"s":["SELECT", "id,", "uniformf,", "normalf5", "FROM", "test", "WHERE", "uni-"],
		"ss":"SELECT id, uniformf, normalf5 FROM test WHERE uni-"},
		{"l":97, "t":651, "r":375, "b":662,
		"q":[97, 279],
		"s":["http://highscalability.com/scaling-postgresql-"],
		"ss":"http://highscalability.com/scaling-postgresql-"},
		{"l":437, "t":649, "r":607, "b":659,
		"q":[437, 30, 473, 6, 486, 18, 510, 18, 534, 48, 589, 6, 601, 6],
		"s":["formf", ">", "-60", "AND", "normalf5", "<", "5"],
		"ss":"formf > -60 AND normalf5 < 5"},
		{"l":97, "t":665, "r":157, "b":675,
		"q":[97, 61],
		"s":["using-cuda"],
		"ss":"using-cuda"},
		{"l":157, "t":664, "r":161, "b":675,
		"q":[157, 3],
		"s":["."],
		"ss":"."},
		{"l":422, "t":666, "r":431, "b":677,
		"q":[422, 9],
		"s":["5."],
		"ss":"5."},
		{"l":437, "t":667, "r":752, "b":677,
		"q":[437, 36, 480, 18, 504, 55, 564, 55, 625, 24, 655, 24, 685, 30, 722, 30],
		"s":["SELECT", "id,", "normali5,", "normali20", "FROM", "test", "WHERE", "(nor-"],
		"ss":"SELECT id, normali5, normali20 FROM test WHERE (nor-"},
		{"l":73, "t":679, "r":359, "b":689,
		"q":[73, 18, 97, 12, 113, 53, 169, 9, 183, 36, 223, 12, 239, 12, 255, 26, 285, 19, 308, 11, 323, 36],
		"s":["[14]", "T.", "Kaldeway,", "J.", "Hagen,", "A.", "Di", "Blas,", "and", "E.", "Sedlar."],
		"ss":"[14] T. Kaldeway, J. Hagen, A. Di Blas, and E. Sedlar."},
		{"l":437, "t":680, "r":619, "b":690,
		"q":[437, 36, 480, 6, 492, 18, 516, 6, 528, 55, 589, 6, 601, 18],
		"s":["mali20", "+", "40)", ">", "(uniformi", "-", "10)"],
		"ss":"mali20 + 40) > (uniformi - 10)"},
		{"l":97, "t":693, "r":346, "b":703,
		"q":[97, 39, 140, 32, 176, 13, 193, 27, 224, 30, 258, 49, 311, 35],
		"s":["Parallel", "search", "on", "video", "cards.", "Technical", "report,"],
		"ss":"Parallel search on video cards. Technical report,"},
		{"l":422, "t":698, "r":431, "b":708,
		"q":[422, 9],
		"s":["6."],
		"ss":"6."},
		{"l":437, "t":698, "r":752, "b":709,
		"q":[437, 36, 480, 18, 504, 55, 564, 55, 625, 24, 655, 24, 685, 30, 722, 30],
		"s":["SELECT", "id,", "normalf5,", "normalf20", "FROM", "test", "WHERE", "(nor-"],
		"ss":"SELECT id, normalf5, normalf20 FROM test WHERE (nor-"},
		{"l":97, "t":706, "r":165, "b":716,
		"q":[97, 37, 138, 27],
		"s":["Oracle,", "2008."],
		"ss":"Oracle, 2008."},
		{"l":437, "t":712, "r":619, "b":722,
		"q":[437, 36, 480, 6, 492, 18, 516, 6, 528, 55, 589, 6, 601, 18],
		"s":["malf20", "+", "40)", ">", "(uniformf", "-", "10)"],
		"ss":"malf20 + 40) > (uniformf - 10)"},
		{"l":73, "t":721, "r":355, "b":731,
		"q":[73, 18, 97, 10, 111, 21, 136, 23, 163, 24, 191, 19, 214, 12, 230, 61, 296, 44, 344, 11],
		"s":["[15]", "S.", "Lee,", "S.-J.", "Min,", "and", "R.", "Eigenmann.", "Openmp", "to"],
		"ss":"[15] S. Lee, S.-J. Min, and R. Eigenmann. Openmp to"},
		{"l":97, "t":734, "r":324, "b":745,
		"q":[97, 35, 137, 6, 147, 44, 195, 54, 254, 14, 272, 52],
		"s":["gpgpu:", "a", "compiler", "framework", "for", "automatic"],
		"ss":"gpgpu: a compiler framework for automatic"},
		{"l":422, "t":729, "r":431, "b":740,
		"q":[422, 9],
		"s":["7."],
		"ss":"7."},
		{"l":437, "t":730, "r":746, "b":740,
		"q":[437, 36, 480, 18, 504, 55, 564, 55, 625, 24, 655, 24, 685, 30, 722, 24],
		"s":["SELECT", "id,", "normali5,", "normali20", "FROM", "test", "WHERE", "nor-"],
		"ss":"SELECT id, normali5, normali20 FROM test WHERE nor-"},
		{"l":97, "t":748, "r":329, "b":758,
		"q":[97, 56, 157, 19, 180, 69, 252, 11, 267, 38, 310, 19],
		"s":["translation", "and", "optimization.", "In", "PPoPP", "’09:"],
		"ss":"translation and optimization. In PPoPP ’09:"},
		{"l":437, "t":743, "r":643, "b":754,
		"q":[437, 30, 473, 6, 486, 55, 546, 42, 595, 12, 613, 18, 637, 6],
		"s":["mali5", "*", "normali20", "BETWEEN", "-5", "AND", "5"],
		"ss":"mali5 * normali20 BETWEEN -5 AND 5"},
		{"l":97, "t":761, "r":366, "b":772,
		"q":[97, 59, 160, 10, 174, 15, 194, 22, 220, 28, 252, 54, 310, 56],
		"s":["Proceedings", "of", "the", "14th", "ACM", "SIGPLAN", "symposium"],
		"ss":"Proceedings of the 14th ACM SIGPLAN symposium"},
		{"l":422, "t":761, "r":431, "b":771,
		"q":[422, 9],
		"s":["8."],
		"ss":"8."},
		{"l":437, "t":762, "r":746, "b":772,
		"q":[437, 36, 480, 18, 504, 55, 564, 55, 625, 24, 655, 24, 685, 30, 722, 24],
		"s":["SELECT", "id,", "normalf5,", "normalf20", "FROM", "test", "WHERE", "nor-"],
		"ss":"SELECT id, normalf5, normalf20 FROM test WHERE nor-"},
		{"l":97, "t":775, "r":363, "b":785,
		"q":[97, 13, 114, 52, 170, 19, 193, 40, 237, 10, 251, 37, 292, 70],
		"s":["on", "Principles", "and", "practice", "of", "parallel", "programming,"],
		"ss":"on Principles and practice of parallel programming,"},
		{"l":437, "t":775, "r":643, "b":785,
		"q":[437, 30, 473, 6, 486, 55, 546, 42, 595, 12, 613, 18, 637, 6],
		"s":["malf5", "*", "normalf20", "BETWEEN", "-5", "AND", "5"],
		"ss":"malf5 * normalf20 BETWEEN -5 AND 5"},
		{"l":97, "t":788, "r":356, "b":799,
		"q":[97, 28, 129, 45, 178, 23, 205, 28, 237, 21, 262, 28, 293, 27, 324, 31],
		"s":["pages", "101–110,", "New", "York,", "NY,", "USA,", "2009.", "ACM."],
		"ss":"pages 101–110, New York, NY, USA, 2009. ACM."},
		{"l":422, "t":793, "r":431, "b":803,
		"q":[422, 9],
		"s":["9."],
		"ss":"9."},
		{"l":437, "t":793, "r":740, "b":803,
		"q":[437, 36, 480, 18, 504, 55, 564, 55, 625, 55, 685, 24, 716, 24],
		"s":["SELECT", "id,", "uniformi,", "normali5,", "normali20", "FROM", "test"],
		"ss":"SELECT id, uniformi, normali5, normali20 FROM test"},
		{"l":73, "t":803, "r":371, "b":813,
		"q":[73, 18, 97, 14, 115, 12, 131, 60, 195, 9, 208, 12, 224, 39, 267, 12, 283, 33, 320, 19, 343, 12, 359, 12],
		"s":["[16]", "M.", "D.", "Linderman,", "J.", "D.", "Collins,", "H.", "Wang,", "and", "T.", "H."],
		"ss":"[16] M. D. Linderman, J. D. Collins, H. Wang, and T. H."},
		{"l":437, "t":807, "r":746, "b":817,
		"q":[437, 30, 473, 18, 498, 48, 552, 12, 570, 18, 595, 48, 649, 12, 667, 18, 691, 55],
		"s":["WHERE", "NOT", "uniformi", "OR", "NOT", "normali5", "OR", "NOT", "normali20"],
		"ss":"WHERE NOT uniformi OR NOT normali5 OR NOT normali20"},
		{"l":97, "t":817, "r":306, "b":827,
		"q":[97, 32, 133, 35, 173, 6, 183, 69, 256, 31, 292, 14],
		"s":["Meng.", "Merge:", "a", "programming", "model", "for"],
		"ss":"Meng. Merge: a programming model for"},
		{"l":416, "t":824, "r":431, "b":835,
		"q":[416, 15],
		"s":["10."],
		"ss":"10."},
		{"l":437, "t":825, "r":740, "b":835,
		"q":[437, 36, 480, 18, 504, 55, 564, 55, 625, 55, 685, 24, 716, 24],
		"s":["SELECT", "id,", "uniformf,", "normalf5,", "normalf20", "FROM", "test"],
		"ss":"SELECT id, uniformf, normalf5, normalf20 FROM test"},
		{"l":97, "t":830, "r":369, "b":840,
		"q":[97, 73, 173, 52, 230, 43, 277, 11, 292, 47, 343, 26],
		"s":["heterogeneous", "multi-core", "systems.", "In", "ASPLOS", "XIII:"],
		"ss":"heterogeneous multi-core systems. In ASPLOS XIII:"},
		{"l":437, "t":838, "r":746, "b":848,
		"q":[437, 30, 473, 18, 498, 48, 552, 12, 570, 18, 595, 48, 649, 12, 667, 18, 691, 55],
		"s":["WHERE", "NOT", "uniformf", "OR", "NOT", "normalf5", "OR", "NOT", "normalf20"],
		"ss":"WHERE NOT uniformf OR NOT normalf5 OR NOT normalf20"},
		{"l":97, "t":844, "r":362, "b":854,
		"q":[97, 59, 160, 10, 174, 15, 194, 22, 220, 67, 291, 53, 349, 13],
		"s":["Proceedings", "of", "the", "13th", "international", "conference", "on"],
		"ss":"Proceedings of the 13th international conference on"},
		{"l":97, "t":857, "r":372, "b":867,
		"q":[97, 66, 167, 38, 209, 15, 228, 67, 299, 49, 353, 19],
		"s":["Architectural", "support", "for", "programming", "languages", "and"],
		"ss":"Architectural support for programming languages and"},
		{"l":416, "t":856, "r":431, "b":866,
		"q":[416, 15],
		"s":["11."],
		"ss":"11."},
		{"l":437, "t":856, "r":625, "b":867,
		"q":[437, 36, 480, 85, 570, 24, 601, 24],
		"s":["SELECT", "SUM(normalf20)", "FROM", "test"],
		"ss":"SELECT SUM(normalf20) FROM test"},
		{"l":97, "t":870, "r":356, "b":881,
		"q":[97, 47, 148, 43, 195, 28, 227, 45, 276, 23, 303, 28, 335, 21],
		"s":["operating", "systems,", "pages", "287–296,", "New", "York,", "NY,"],
		"ss":"operating systems, pages 287–296, New York, NY,"},
		{"l":416, "t":874, "r":431, "b":884,
		"q":[416, 15],
		"s":["12."],
		"ss":"12."},
		{"l":437, "t":874, "r":722, "b":885,
		"q":[437, 36, 480, 79, 564, 24, 595, 24, 625, 30, 661, 48, 716, 6],
		"s":["SELECT", "AVG(uniformi)", "FROM", "test", "WHERE", "uniformi", ">"],
		"ss":"SELECT AVG(uniformi) FROM test WHERE uniformi >"},
		{"l":97, "t":884, "r":191, "b":894,
		"q":[97, 28, 128, 27, 159, 31],
		"s":["USA,", "2008.", "ACM."],
		"ss":"USA, 2008. ACM."},
		{"l":437, "t":888, "r":443, "b":898,
		"q":[437, 6],
		"s":["0"],
		"ss":"0"},
		{"l":73, "t":899, "r":353, "b":909,
		"q":[73, 18, 97, 15, 116, 17, 137, 19, 160, 13, 177, 46, 226, 9, 239, 56, 299, 35, 339, 14],
		"s":["[17]", "W.", "Ma", "and", "G.", "Agrawal.", "A", "translation", "system", "for"],
		"ss":"[17] W. Ma and G. Agrawal. A translation system for"},
		{"l":416, "t":905, "r":431, "b":916,
		"q":[416, 15],
		"s":["13."],
		"ss":"13."},
		{"l":437, "t":906, "r":710, "b":916,
		"q":[437, 36, 480, 85, 570, 79, 655, 24, 685, 24],
		"s":["SELECT", "MAX(normali5),", "MIN(normali5)", "FROM", "test"],
		"ss":"SELECT MAX(normali5), MIN(normali5) FROM test"},
		{"l":97, "t":912, "r":381, "b":923,
		"q":[97, 43, 144, 23, 171, 36, 210, 62, 276, 13, 292, 27, 323, 11, 338, 20, 361, 19],
		"s":["enabling", "data", "mining", "applications", "on", "gpus.", "In", "ICS", "’09:"],
		"ss":"enabling data mining applications on gpus. In ICS ’09:"},
		{"l":399, "t":1010, "r":417, "b":1020,
		"q":[399, 18],
		"s":["103"],
		"ss":"103"}
	]}
]}